/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sdk.treezor;

import com.sdk.treezor.auth.OAuth;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
 * Test for the Configuration class.
 */
public class ConfigurationTest {

    @Test
    public void testConfigurationConstructors() {
        // Test default constructor
        Configuration config1 = new Configuration();
        assertEquals("https://baseURL.co", config1.getBaseUrl());
        assertNull(config1.getClientId());
        assertNull(config1.getClientSecret());
        assertNull(config1.getAccessToken());

        // Test constructor with baseUrl
        String baseUrl = "https://api.treezor.com";
        Configuration config2 = new Configuration(baseUrl);
        assertEquals(baseUrl, config2.getBaseUrl());
        assertNull(config2.getClientId());
        assertNull(config2.getClientSecret());
        assertNull(config2.getAccessToken());

        // Test constructor with all parameters
        String clientId = "test-client-id";
        String clientSecret = "test-client-secret";
        Configuration config3 = new Configuration(baseUrl, clientId, clientSecret);
        assertEquals(baseUrl, config3.getBaseUrl());
        assertEquals(clientId, config3.getClientId());
        assertEquals(clientSecret, config3.getClientSecret());
        assertNull(config3.getAccessToken());
    }

    @Test
    public void testConfigurationSetters() {
        Configuration config = new Configuration();

        // Test setBaseUrl
        String baseUrl = "https://api.treezor.com";
        config.setBaseUrl(baseUrl);
        assertEquals(baseUrl, config.getBaseUrl());

        // Test setClientId
        String clientId = "test-client-id";
        config.setClientId(clientId);
        assertEquals(clientId, config.getClientId());

        // Test setClientSecret
        String clientSecret = "test-client-secret";
        config.setClientSecret(clientSecret);
        assertEquals(clientSecret, config.getClientSecret());

        // Test setAccessToken
        String accessToken = "test-access-token";
        config.setAccessToken(accessToken);
        assertEquals(accessToken, config.getAccessToken());
    }

    @Test
    public void testCreateApiClient() {
        // Create a configuration with custom values
        String baseUrl = "https://api.treezor.com";
        String accessToken = "test-access-token";
        Configuration config = new Configuration();
        config.setBaseUrl(baseUrl);
        config.setAccessToken(accessToken);

        // Create an API client with the configuration
        ApiClient apiClient = config.createApiClient();

        // Verify that the API client has the correct configuration
        assertEquals(baseUrl, apiClient.getBasePath());

        // Verify that the access token was set correctly
        OAuth oauth = (OAuth) apiClient.getAuthentication("OAuth2");
        assertEquals(accessToken, oauth.getAccessToken());
    }

    @Test
    public void testCreateDefaultApiClient() {
        // Create a configuration with custom values
        String baseUrl = "https://api.treezor.com";
        String accessToken = "test-access-token";
        Configuration config = new Configuration();
        config.setBaseUrl(baseUrl);
        config.setAccessToken(accessToken);

        // Create a default API client with the configuration
        ApiClient apiClient = config.createDefaultApiClient();

        // Verify that the API client has the correct configuration
        assertEquals(baseUrl, apiClient.getBasePath());

        // Verify that the access token was set correctly
        OAuth oauth = (OAuth) apiClient.getAuthentication("OAuth2");
        assertEquals(accessToken, oauth.getAccessToken());

        // Verify that the default API client was set correctly
        assertSame(apiClient, Configuration.getDefaultApiClient());
    }
}
