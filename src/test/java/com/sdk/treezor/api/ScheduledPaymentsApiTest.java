/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import java.math.BigDecimal;
import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.GetScheduledPaymentOperations200Response;
import com.sdk.treezor.model.PostScheduledPaymentRequest;
import com.sdk.treezor.model.ScheduledPayment;
import com.sdk.treezor.model.ScheduledPayment1;
import com.sdk.treezor.model.ScheduledPayment2;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for ScheduledPaymentsApi
 */
@Disabled
public class ScheduledPaymentsApiTest {

    private final ScheduledPaymentsApi api = new ScheduledPaymentsApi();

    
    /**
     * Delete Scheduled Payment
     *
     * Cancel a Scheduled Payment order
     */
    @Test
    public void deleteScheduledPaymentTest()  {
        // uncomment below to test the function
        //String scheduledPaymentId = null;
        //ScheduledPayment2 response = api.deleteScheduledPayment(scheduledPaymentId).block();

        // TODO: test validations
    }
    
    /**
     * Get Scheduled Payment
     *
     * Retrieve Scheduled Payment orders based on the corresponding &#x60;userId&#x60; and/or &#x60;walletId&#x60;
     */
    @Test
    public void getScheduledPaymentTest()  {
        // uncomment below to test the function
        //Integer userId = null;
        //Integer walletId = null;
        //String cursor = null;
        //BigDecimal pageSize = null;
        //ScheduledPayment response = api.getScheduledPayment(userId, walletId, cursor, pageSize).block();

        // TODO: test validations
    }
    
    /**
     * Get Scheduled Payment Operations
     *
     * Retrieve the list of executed payments for a given Scheduled Payment order
     */
    @Test
    public void getScheduledPaymentOperationsTest()  {
        // uncomment below to test the function
        //String scheduledPaymentId = null;
        //GetScheduledPaymentOperations200Response response = api.getScheduledPaymentOperations(scheduledPaymentId).block();

        // TODO: test validations
    }
    
    /**
     * Create Scheduled Payment
     *
     * Schedule a Payout or a Wallet-to-Wallet transfer for a future date.  This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html). 
     */
    @Test
    public void postScheduledPaymentTest()  {
        // uncomment below to test the function
        //PostScheduledPaymentRequest postScheduledPaymentRequest = null;
        //ScheduledPayment1 response = api.postScheduledPayment(postScheduledPaymentRequest).block();

        // TODO: test validations
    }
    
}
