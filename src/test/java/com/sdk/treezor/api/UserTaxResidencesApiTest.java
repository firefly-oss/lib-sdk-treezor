/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.GetTaxresidencesDefaultResponse;
import com.sdk.treezor.model.PostTaxresidenceRequest;
import com.sdk.treezor.model.PutTaxresidenceRequest;
import com.sdk.treezor.model.TaxResidenceObject;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for UserTaxResidencesApi
 */
@Disabled
public class UserTaxResidencesApiTest {

    private final UserTaxResidencesApi api = new UserTaxResidencesApi();

    
    /**
     * Delete a residence
     *
     * Delete a residence that match id
     */
    @Test
    public void deleteTaxresidenceTest()  {
        // uncomment below to test the function
        //Integer taxResidenceId = null;
        //TaxResidenceObject response = api.deleteTaxresidence(taxResidenceId).block();

        // TODO: test validations
    }
    
    /**
     * Get Tax Residence
     *
     * Retrieve a Tax Residence based on its &#x60;id&#x60;.
     */
    @Test
    public void getTaxresidenceTest()  {
        // uncomment below to test the function
        //Integer taxResidenceId = null;
        //TaxResidenceObject response = api.getTaxresidence(taxResidenceId).block();

        // TODO: test validations
    }
    
    /**
     * Search Tax Residences
     *
     * Retrieve Tax Residences that match your search conditions.
     */
    @Test
    public void getTaxresidencesTest()  {
        // uncomment below to test the function
        //Integer taxResidenceId = null;
        //Integer userId = null;
        //Integer pageNumber = null;
        //Integer pageCount = null;
        //String sortBy = null;
        //String sortOrder = null;
        //TaxResidenceObject response = api.getTaxresidences(taxResidenceId, userId, pageNumber, pageCount, sortBy, sortOrder).block();

        // TODO: test validations
    }
    
    /**
     * Create Tax Residence
     *
     * Create a new Tax Residence.  This endpoint requires per-session [SCA](/guide/strong-customer-authentication/introduction.html). 
     */
    @Test
    public void postTaxresidenceTest()  {
        // uncomment below to test the function
        //PostTaxresidenceRequest postTaxresidenceRequest = null;
        //TaxResidenceObject response = api.postTaxresidence(postTaxresidenceRequest).block();

        // TODO: test validations
    }
    
    /**
     * Update Tax Residence
     *
     * Modify an existing Tax Residence.  This endpoint requires per-session [SCA](/guide/strong-customer-authentication/introduction.html). 
     */
    @Test
    public void putTaxresidenceTest()  {
        // uncomment below to test the function
        //Integer taxResidenceId = null;
        //PutTaxresidenceRequest putTaxresidenceRequest = null;
        //TaxResidenceObject response = api.putTaxresidence(taxResidenceId, putTaxresidenceRequest).block();

        // TODO: test validations
    }
    
}
