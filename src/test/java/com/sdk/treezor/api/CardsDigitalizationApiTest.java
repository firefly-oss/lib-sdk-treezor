/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.CardDigitalizationsId200Response;
import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.ReadcardDigitalizations200Response;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.UUID;

/**
 * API tests for CardsDigitalizationApi
 */
@Disabled
public class CardsDigitalizationApiTest {

    private final CardsDigitalizationApi api = new CardsDigitalizationApi();

    
    /**
     * Get Card Digitalization
     *
     * Retrieve a Card Digitalization based on its &#x60;id&#x60;.
     */
    @Test
    public void cardDigitalizationsIdTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //CardDigitalizationsId200Response response = api.cardDigitalizationsId(id).block();

        // TODO: test validations
    }
    
    /**
     * Delete Payment Token
     *
     * Delete a payment Token
     */
    @Test
    public void deletecardDigitalizationsIdTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //String reasonCode = null;
        //ReadcardDigitalizations200Response response = api.deletecardDigitalizationsId(id, reasonCode).block();

        // TODO: test validations
    }
    
    /**
     * Update Payment Token Status
     *
     * Update the status of a payment Token  This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html). 
     */
    @Test
    public void putcardDigitalizationsIdTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //String status = null;
        //String reasonCode = null;
        //CardDigitalizationsId200Response response = api.putcardDigitalizationsId(id, status, reasonCode).block();

        // TODO: test validations
    }
    
    /**
     * Search Card Digitalizations
     *
     * Search for card digitalizations.
     */
    @Test
    public void readcardDigitalizationsTest()  {
        // uncomment below to test the function
        //String accessTag = null;
        //String filter = null;
        //ReadcardDigitalizations200Response response = api.readcardDigitalizations(accessTag, filter).block();

        // TODO: test validations
    }
    
}
