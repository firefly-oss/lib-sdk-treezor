/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.DefaultError;
import java.time.OffsetDateTime;
import com.sdk.treezor.model.PayinObject;
import com.sdk.treezor.model.PostPayinRequest;
import com.sdk.treezor.model.SimulateSctInstReception201Response;
import com.sdk.treezor.model.SimulateSctInstReception400Response;
import com.sdk.treezor.model.SimulateSctInstReceptionRequest;
import com.sdk.treezor.model.SimulateSctReception200Response;
import com.sdk.treezor.model.SimulateSctReception400Response;
import com.sdk.treezor.model.SimulateSctReceptionRequest;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for PayinsApi
 */
@Disabled
public class PayinsApiTest {

    private final PayinsApi api = new PayinsApi();

    
    /**
     * Delete Payin
     *
     * Cancels a Payin. This endpoint is only available for: * [Check cashing](/guide/cheques/introduction.html), before the treatment center receives the check. * [SEPA Direct Debit emission](/guide/transfers/direct-debit.html#emitted-direct-debits-sdde), before Treezor processes it. 
     */
    @Test
    public void deletePayinTest()  {
        // uncomment below to test the function
        //String payinId = null;
        //PayinObject response = api.deletePayin(payinId).block();

        // TODO: test validations
    }
    
    /**
     * Get Payin
     *
     * Retrieve a payin by its id.
     */
    @Test
    public void getPayinTest()  {
        // uncomment below to test the function
        //String payinId = null;
        //PayinObject response = api.getPayin(payinId).block();

        // TODO: test validations
    }
    
    /**
     * Search Payins
     *
     * Get payins that match search criteria.
     */
    @Test
    public void getPayinsTest()  {
        // uncomment below to test the function
        //String accessTag = null;
        //Integer payinId = null;
        //Integer walletId = null;
        //String payinTag = null;
        //String payinStatus = null;
        //String userId = null;
        //String userName = null;
        //String userEmail = null;
        //Integer beneficiaryUserId = null;
        //String eventAlias = null;
        //Integer walletTypeId = null;
        //String paymentMethodId = null;
        //OffsetDateTime createdDateFrom = null;
        //OffsetDateTime createdDateTo = null;
        //OffsetDateTime updatedDateFrom = null;
        //OffsetDateTime updatedDateTo = null;
        //String sortOrder = null;
        //String cursor = null;
        //PayinObject response = api.getPayins(accessTag, payinId, walletId, payinTag, payinStatus, userId, userName, userEmail, beneficiaryUserId, eventAlias, walletTypeId, paymentMethodId, createdDateFrom, createdDateTo, updatedDateFrom, updatedDateTo, sortOrder, cursor).block();

        // TODO: test validations
    }
    
    /**
     * Create Payin
     *
     * Create a new payin.
     */
    @Test
    public void postPayinTest()  {
        // uncomment below to test the function
        //PostPayinRequest postPayinRequest = null;
        //PayinObject response = api.postPayin(postPayinRequest).block();

        // TODO: test validations
    }
    
    /**
     * Simulate SCTR Inst
     *
     * Simulate the reception of an instantaneous SEPA Credit Transfer into one of your Wallet in Sandbox.
     */
    @Test
    public void simulateSctInstReceptionTest()  {
        // uncomment below to test the function
        //SimulateSctInstReceptionRequest simulateSctInstReceptionRequest = null;
        //SimulateSctInstReception201Response response = api.simulateSctInstReception(simulateSctInstReceptionRequest).block();

        // TODO: test validations
    }
    
    /**
     * Simulate SCTR
     *
     * Simulate the reception of a SEPA Credit Transfer into one of your Wallet in Sandbox.
     */
    @Test
    public void simulateSctReceptionTest()  {
        // uncomment below to test the function
        //SimulateSctReceptionRequest simulateSctReceptionRequest = null;
        //SimulateSctReception200Response response = api.simulateSctReception(simulateSctReceptionRequest).block();

        // TODO: test validations
    }
    
}
