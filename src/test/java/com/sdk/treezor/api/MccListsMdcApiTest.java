/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.ImportMdcMccListCodesRequest;
import com.sdk.treezor.model.MccList;
import com.sdk.treezor.model.MccLists;
import com.sdk.treezor.model.PostMdcMccListRequest;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for MccListsMdcApi
 */
@Disabled
public class MccListsMdcApiTest {

    private final MccListsMdcApi api = new MccListsMdcApi();

    
    /**
     * Add MCC to MCC List
     *
     * Add the MCC in the Merchant Category Code list.
     */
    @Test
    public void addMdcMccListCodeTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //String mcc = null;
        //api.addMdcMccListCode(id, mcc).block();

        // TODO: test validations
    }
    
    /**
     * Check MCC Presence
     *
     * Check in the MCC is included in the MCC List. If not, the API returns an HTTP 404 error.
     */
    @Test
    public void checkMdcMccListCodeTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //String mcc = null;
        //api.checkMdcMccListCode(id, mcc).block();

        // TODO: test validations
    }
    
    /**
     * Delete MCC List
     *
     * Delete a Merchant Category Code List for the [Multi-Criteria Dynamic Card](/guide/cards/transactions-rules-engine.html) feature. 
     */
    @Test
    public void deleteMdcMccListTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //api.deleteMdcMccList(id).block();

        // TODO: test validations
    }
    
    /**
     * Get MCC List
     *
     * Retrieve a Merchant Category Code List for the [Multi-Criteria Dynamic Card](/guide/cards/transactions-rules-engine.html) feature based on its &#x60;id&#x60;. 
     */
    @Test
    public void getMdcMccListTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //MccList response = api.getMdcMccList(id).block();

        // TODO: test validations
    }
    
    /**
     * Get all MCC Lists
     *
     * Retrieve all the Merchant Category Code Lists for the [Multi-Criteria Dynamic Card](/guide/cards/transactions-rules-engine.html) feature. 
     */
    @Test
    public void getMdcMccListsTest()  {
        // uncomment below to test the function
        //String nextPageToken = null;
        //MccLists response = api.getMdcMccLists(nextPageToken).block();

        // TODO: test validations
    }
    
    /**
     * Import MCCs
     *
     * Import MCC values asynchronously into a Merchant Category Code Lists for the [Multi-Criteria Dynamic Card](/guide/cards/transactions-rules-engine.html) feature. 
     */
    @Test
    public void importMdcMccListCodesTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //ImportMdcMccListCodesRequest importMdcMccListCodesRequest = null;
        //api.importMdcMccListCodes(id, importMdcMccListCodesRequest).block();

        // TODO: test validations
    }
    
    /**
     * Create MCC List
     *
     * Create a list of Merchant Category Codes for the [Multi-Criteria Dynamic Card (MDC)](/guide/cards/transactions-rules-engine.html) feature. 
     */
    @Test
    public void postMdcMccListTest()  {
        // uncomment below to test the function
        //PostMdcMccListRequest postMdcMccListRequest = null;
        //MccList response = api.postMdcMccList(postMdcMccListRequest).block();

        // TODO: test validations
    }
    
    /**
     * Remove MCC from List
     *
     * Remove the MCC from the MCC List. If the code isn&#39;t in the list, the API returns an HTTP 404 error.
     */
    @Test
    public void removeMdcMccListCodeTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //String mcc = null;
        //api.removeMdcMccListCode(id, mcc).block();

        // TODO: test validations
    }
    
    /**
     * Update MCC List
     *
     * Update a Merchant Category Code List for the [Multi-Criteria Dynamic Card](/guide/cards/transactions-rules-engine.html) feature. 
     */
    @Test
    public void updateMdcMccListTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //PostMdcMccListRequest postMdcMccListRequest = null;
        //MccList response = api.updateMdcMccList(id, postMdcMccListRequest).block();

        // TODO: test validations
    }
    
}
