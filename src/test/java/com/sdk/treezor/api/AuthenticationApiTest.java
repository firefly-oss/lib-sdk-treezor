/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.PostAuth200Response;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for AuthenticationApi
 */
@Disabled
public class AuthenticationApiTest {

    private final AuthenticationApi api = new AuthenticationApi();

    
    /**
     * Obtain Access Token
     *
     * Exchange authorization codes or refresh tokens for access tokens. The response will include the access token and optionally a refresh token, along with their expiration details. 
     */
    @Test
    public void postAuthTest()  {
        // uncomment below to test the function
        //String grantType = null;
        //String clientId = null;
        //String clientSecret = null;
        //String scope = null;
        //String username = null;
        //String password = null;
        //String refreshToken = null;
        //PostAuth200Response response = api.postAuth(grantType, clientId, clientSecret, scope, username, password, refreshToken).block();

        // TODO: test validations
    }
    
}
