/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.ImportMdcMidListCodesRequest;
import com.sdk.treezor.model.MerchantIdList;
import com.sdk.treezor.model.MerchantIdLists;
import com.sdk.treezor.model.PostMdcMidListRequest;
import java.util.UUID;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for MidListsMdcApi
 */
@Disabled
public class MidListsMdcApiTest {

    private final MidListsMdcApi api = new MidListsMdcApi();

    
    /**
     * Add MID to MID List
     *
     * Add the MID in the Merchant Id list.
     */
    @Test
    public void addMdcMidListCodeTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //String mid = null;
        //api.addMdcMidListCode(id, mid).block();

        // TODO: test validations
    }
    
    /**
     * Check MID Presence
     *
     * Check in the MCC is included in the MCC List.
     */
    @Test
    public void checkMdcMidListCodeTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //String mid = null;
        //api.checkMdcMidListCode(id, mid).block();

        // TODO: test validations
    }
    
    /**
     * Delete MerchantId List
     *
     * Delete a Merchant Id List for the [Multi-Criteria Dynamic Card](/guide/cards/transactions-rules-engine.html) feature. 
     */
    @Test
    public void deleteMdcMidListTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //api.deleteMdcMidList(id).block();

        // TODO: test validations
    }
    
    /**
     * Get all MID Lists
     *
     * Retrieve all the Merchant Id Lists for the [Multi-Criteria Dynamic Card](/guide/cards/transactions-rules-engine.html) feature. 
     */
    @Test
    public void getMdcMidListsTest()  {
        // uncomment below to test the function
        //String nextPageToken = null;
        //MerchantIdLists response = api.getMdcMidLists(nextPageToken).block();

        // TODO: test validations
    }
    
    /**
     * Get MID List
     *
     * Retrieve a Merchant Id List for the [Multi-Criteria Dynamic Card](/guide/cards/transactions-rules-engine.html) feature based on its &#x60;id&#x60;. 
     */
    @Test
    public void getMidMccListTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //MerchantIdList response = api.getMidMccList(id).block();

        // TODO: test validations
    }
    
    /**
     * Import MIDs
     *
     * Import MCC values asynchronously into a Merchant Category Code Lists for the [Multi-Criteria Dynamic Card](/guide/cards/transactions-rules-engine.html) feature. 
     */
    @Test
    public void importMdcMidListCodesTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //ImportMdcMidListCodesRequest importMdcMidListCodesRequest = null;
        //api.importMdcMidListCodes(id, importMdcMidListCodesRequest).block();

        // TODO: test validations
    }
    
    /**
     * Create Merchant Id List
     *
     * Create a list of Merchant Ids for the [Multi-Criteria Dynamic Card (MDC)](/guide/cards/transactions-rules-engine.html) feature. 
     */
    @Test
    public void postMdcMidListTest()  {
        // uncomment below to test the function
        //PostMdcMidListRequest postMdcMidListRequest = null;
        //MerchantIdList response = api.postMdcMidList(postMdcMidListRequest).block();

        // TODO: test validations
    }
    
    /**
     * Remove MCC from List
     *
     * Remove the MID from the MID List.
     */
    @Test
    public void removeMdcMidListCodeTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //String mid = null;
        //api.removeMdcMidListCode(id, mid).block();

        // TODO: test validations
    }
    
    /**
     * Update MerchantId List
     *
     * Update a Merchant Id List for the [Multi-Criteria Dynamic Card](/guide/cards/transactions-rules-engine.html) feature. 
     */
    @Test
    public void updateMdcMidListTest()  {
        // uncomment below to test the function
        //UUID id = null;
        //PostMdcMidListRequest postMdcMidListRequest = null;
        //MerchantIdList response = api.updateMdcMidList(id, postMdcMidListRequest).block();

        // TODO: test validations
    }
    
}
