/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.DeleteWalletRequest;
import java.time.OffsetDateTime;
import com.sdk.treezor.model.PostWalletsRequest;
import com.sdk.treezor.model.PutWalletRequest;
import com.sdk.treezor.model.WalletObject;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for WalletsApi
 */
@Disabled
public class WalletsApiTest {

    private final WalletsApi api = new WalletsApi();

    
    /**
     * Delete Wallet
     *
     * Change the status of the Wallet to &#x60;CANCELED&#x60;. This action is irreversible.
     */
    @Test
    public void deleteWalletTest()  {
        // uncomment below to test the function
        //Integer walletId = null;
        //DeleteWalletRequest deleteWalletRequest = null;
        //WalletObject response = api.deleteWallet(walletId, deleteWalletRequest).block();

        // TODO: test validations
    }
    
    /**
     * Get Wallet
     *
     * Retrieve a Wallet based on its &#x60;id&#x60;.
     */
    @Test
    public void getWalletTest()  {
        // uncomment below to test the function
        //Long walletId = null;
        //String accessTag = null;
        //WalletObject response = api.getWallet(walletId, accessTag).block();

        // TODO: test validations
    }
    
    /**
     * Search Wallets
     *
     * Retrieve Wallets that match your search conditions. The request must specify at least one of those fields: &#x60;walletId&#x60;, &#x60;userId&#x60;, or &#x60;walletTypeId&#x60;. 
     */
    @Test
    public void getWalletsTest()  {
        // uncomment below to test the function
        //String accessTag = null;
        //Integer walletId = null;
        //String walletStatus = null;
        //Integer userId = null;
        //Integer parentUserId = null;
        //String walletTag = null;
        //Integer walletTypeId = null;
        //List<Integer> walletTypeIdList = null;
        //Integer tariffId = null;
        //Integer pageNumber = null;
        //Integer pageCount = null;
        //String sortBy = null;
        //String sortOrder = null;
        //OffsetDateTime createdDateFrom = null;
        //OffsetDateTime createdDateTo = null;
        //OffsetDateTime updatedDateFrom = null;
        //OffsetDateTime updatedDateTo = null;
        //WalletObject response = api.getWallets(accessTag, walletId, walletStatus, userId, parentUserId, walletTag, walletTypeId, walletTypeIdList, tariffId, pageNumber, pageCount, sortBy, sortOrder, createdDateFrom, createdDateTo, updatedDateFrom, updatedDateTo).block();

        // TODO: test validations
    }
    
    /**
     * Create Wallet
     *
     * Create a new Wallet. This endpoint requires per-session [SCA](/guide/strong-customer-authentication/introduction.html). 
     */
    @Test
    public void postWalletsTest()  {
        // uncomment below to test the function
        //PostWalletsRequest postWalletsRequest = null;
        //WalletObject response = api.postWallets(postWalletsRequest).block();

        // TODO: test validations
    }
    
    /**
     * Update Wallet
     *
     * Modifiy a Wallet information
     */
    @Test
    public void putWalletTest()  {
        // uncomment below to test the function
        //Long walletId = null;
        //PutWalletRequest putWalletRequest = null;
        //WalletObject response = api.putWallet(walletId, putWalletRequest).block();

        // TODO: test validations
    }
    
}
