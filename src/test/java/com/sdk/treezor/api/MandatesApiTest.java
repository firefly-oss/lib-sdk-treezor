/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.MandateObject;
import com.sdk.treezor.model.PostMandatesRequest;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.UUID;

/**
 * API tests for MandatesApi
 */
@Disabled
public class MandatesApiTest {

    private final MandatesApi api = new MandatesApi();

    
    /**
     * Revoke Mandate
     *
     * Change the Mandate status to &#x60;CANCELED&#x60;.
     */
    @Test
    public void deleteMandateTest()  {
        // uncomment below to test the function
        //Integer mandateId = null;
        //String origin = null;
        //MandateObject response = api.deleteMandate(mandateId, origin).block();

        // TODO: test validations
    }
    
    /**
     * Get Mandate
     *
     * Retrieve a Mandate based on its &#x60;id&#x60;.
     */
    @Test
    public void getMandateTest()  {
        // uncomment below to test the function
        //UUID mandateId = null;
        //MandateObject response = api.getMandate(mandateId).block();

        // TODO: test validations
    }
    
    /**
     * Search Mandates
     *
     * Retrieve Mandates that match search criteria.
     */
    @Test
    public void getMandatesTest()  {
        // uncomment below to test the function
        //String accessTag = null;
        //Integer mandateId = null;
        //Integer userId = null;
        //String uniqueMandateReference = null;
        //String mandateStatus = null;
        //String filter = null;
        //MandateObject response = api.getMandates(accessTag, mandateId, userId, uniqueMandateReference, mandateStatus, filter).block();

        // TODO: test validations
    }
    
    /**
     * Create Mandate
     *
     * Create a new mandate. 
     */
    @Test
    public void postMandatesTest()  {
        // uncomment below to test the function
        //PostMandatesRequest postMandatesRequest = null;
        //MandateObject response = api.postMandates(postMandatesRequest).block();

        // TODO: test validations
    }
    
}
