/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.DeletePayout200Response;
import com.sdk.treezor.model.GetPayout200Response;
import com.sdk.treezor.model.GetPayouts200Response;
import com.sdk.treezor.model.GetProofPayout200Response;
import com.sdk.treezor.model.PostPayout200Response;
import com.sdk.treezor.model.PostPayoutRequest;
import com.sdk.treezor.model.SimulateSDDR400Response;
import com.sdk.treezor.model.SimulateSDDRRequest;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.UUID;

/**
 * API tests for PayoutsApi
 */
@Disabled
public class PayoutsApiTest {

    private final PayoutsApi api = new PayoutsApi();

    
    /**
     * Cancel Payout
     *
     * Change payout status to &#x60;CANCELED&#x60;. A &#x60;VALIDATED&#x60; payout can&#39;t be canceled. 
     */
    @Test
    public void deletePayoutTest()  {
        // uncomment below to test the function
        //UUID payoutId = null;
        //DeletePayout200Response response = api.deletePayout(payoutId).block();

        // TODO: test validations
    }
    
    /**
     * Get Payout
     *
     * Retrieve a given Payout.
     */
    @Test
    public void getPayoutTest()  {
        // uncomment below to test the function
        //UUID payoutId = null;
        //GetPayout200Response response = api.getPayout(payoutId).block();

        // TODO: test validations
    }
    
    /**
     * Search Payouts
     *
     * Retrieve Payouts that match search criteria. The request must contain at least one of the following inputs: &#x60;userId&#x60;, &#x60;walletId&#x60;. 
     */
    @Test
    public void getPayoutsTest()  {
        // uncomment below to test the function
        //String payoutTag = null;
        //Integer walletId = null;
        //Integer userId = null;
        //String sortOrder = null;
        //String cursor = null;
        //GetPayouts200Response response = api.getPayouts(payoutTag, walletId, userId, sortOrder, cursor).block();

        // TODO: test validations
    }
    
    /**
     * Create Payout Proof
     *
     * Generate and download a proof of payout in .PDF format. See [Proof of Payout](/guide/transfers/proof-of-payout.html) for more information. 
     */
    @Test
    public void getProofPayoutTest()  {
        // uncomment below to test the function
        //String payoutId = null;
        //GetProofPayout200Response response = api.getProofPayout(payoutId).block();

        // TODO: test validations
    }
    
    /**
     * Create Payout
     *
     * Create a new payout.  This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html). 
     */
    @Test
    public void postPayoutTest()  {
        // uncomment below to test the function
        //PostPayoutRequest postPayoutRequest = null;
        //PostPayout200Response response = api.postPayout(postPayoutRequest).block();

        // TODO: test validations
    }
    
    /**
     * Simulate SDDR Core
     *
     * Simulate a received SEPA Direct Debit into one of your Wallet in Sandbox.
     */
    @Test
    public void simulateSDDRTest()  {
        // uncomment below to test the function
        //SimulateSDDRRequest simulateSDDRRequest = null;
        //api.simulateSDDR(simulateSDDRRequest).block();

        // TODO: test validations
    }
    
}
