/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.NotificationSimulationAuthorizationResponse;
import com.sdk.treezor.model.NotificationSimulationAuthorizations;
import com.sdk.treezor.model.NotificationSimulationChargebackResponse;
import com.sdk.treezor.model.NotificationSimulationChargebacks;
import com.sdk.treezor.model.NotificationSimulationPayinResponse;
import com.sdk.treezor.model.NotificationSimulationPayinsCardPaymentMethod;
import com.sdk.treezor.model.NotificationSimulationRefundResponse;
import com.sdk.treezor.model.NotificationSimulationRefunds;
import com.sdk.treezor.model.SimulateAcquiringPayinRequest;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for AcquiringSimulationApi
 */
@Disabled
public class AcquiringSimulationApiTest {

    private final AcquiringSimulationApi api = new AcquiringSimulationApi();

    
    /**
     * Simulate HiPay authorization notification
     *
     * Mocks an HiPay authorization notification provided the minimal set of parameters to generate a refund notification. 
     */
    @Test
    public void acquiringv2TopupCardsSimulationNotificationAutorizationTest()  {
        // uncomment below to test the function
        //NotificationSimulationAuthorizations notificationSimulationAuthorizations = null;
        //NotificationSimulationAuthorizationResponse response = api.acquiringv2TopupCardsSimulationNotificationAutorization(notificationSimulationAuthorizations).block();

        // TODO: test validations
    }
    
    /**
     * Simulate HiPay chargeback notification
     *
     * Mocks an HiPay chargeback notification providing the minimal set of parameters to generate a chargeback notification. 
     */
    @Test
    public void acquiringv2TopupCardsSimulationNotificationChargebacksTest()  {
        // uncomment below to test the function
        //NotificationSimulationChargebacks notificationSimulationChargebacks = null;
        //NotificationSimulationChargebackResponse response = api.acquiringv2TopupCardsSimulationNotificationChargebacks(notificationSimulationChargebacks).block();

        // TODO: test validations
    }
    
    /**
     * Simulate HiPay payin notification
     *
     * Mocks an HiPay payin notification providing the minimal set of parameters to generate a payin notification. 
     */
    @Test
    public void acquiringv2TopupCardsSimulationNotificationPayinsTest()  {
        // uncomment below to test the function
        //String walletId = null;
        //Float amount = null;
        //String currency = null;
        //String userId = null;
        //Integer status = null;
        //String transactionReference = null;
        //NotificationSimulationPayinsCardPaymentMethod cardPaymentMethod = null;
        //String profile = null;
        //NotificationSimulationPayinResponse response = api.acquiringv2TopupCardsSimulationNotificationPayins(walletId, amount, currency, userId, status, transactionReference, cardPaymentMethod, profile).block();

        // TODO: test validations
    }
    
    /**
     * Simulate HiPay refund notification
     *
     * Mocks an HiPay refund notification providing the minimal set of parameters to generate a refund notification. 
     */
    @Test
    public void acquiringv2TopupCardsSimulationNotificationRefundsTest()  {
        // uncomment below to test the function
        //NotificationSimulationRefunds notificationSimulationRefunds = null;
        //NotificationSimulationRefundResponse response = api.acquiringv2TopupCardsSimulationNotificationRefunds(notificationSimulationRefunds).block();

        // TODO: test validations
    }
    
    /**
     * Simulate Acquiring Payin
     *
     * Simulate operations resulting from the card acquisition feature.
     */
    @Test
    public void simulateAcquiringPayinTest()  {
        // uncomment below to test the function
        //SimulateAcquiringPayinRequest simulateAcquiringPayinRequest = null;
        //api.simulateAcquiringPayin(simulateAcquiringPayinRequest).block();

        // TODO: test validations
    }
    
}
