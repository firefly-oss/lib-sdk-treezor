/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.GetAllMidMetadataBYyGroup200Response;
import com.sdk.treezor.model.PostMidMetadata201Response;
import com.sdk.treezor.model.PutMidMetadataRequestInner;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for MerchantIdMetadataApi
 */
@Disabled
public class MerchantIdMetadataApiTest {

    private final MerchantIdMetadataApi api = new MerchantIdMetadataApi();

    
    /**
     * Get all MID metadata
     *
     * Retrieve all MID metadata.
     */
    @Test
    public void getAllMidMetadataTest()  {
        // uncomment below to test the function
        //Object response = api.getAllMidMetadata().block();

        // TODO: test validations
    }
    
    /**
     * Get all MID with metadata
     *
     * Retrieve all Merchant Ids with metadata.
     */
    @Test
    public void getAllMidMetadataBYyGroupTest()  {
        // uncomment below to test the function
        //Integer groupId = null;
        //String cursor = null;
        //Integer pageSize = null;
        //GetAllMidMetadataBYyGroup200Response response = api.getAllMidMetadataBYyGroup(groupId, cursor, pageSize).block();

        // TODO: test validations
    }
    
    /**
     * Get MID Metadata
     *
     * Retrieve metadata for a Merchant Id.
     */
    @Test
    public void getMidMetadataTest()  {
        // uncomment below to test the function
        //Integer mid = null;
        //Object response = api.getMidMetadata(mid).block();

        // TODO: test validations
    }
    
    /**
     * Store MID Metadata
     *
     * Store metadata for a Merchant Id.
     */
    @Test
    public void postMidMetadataTest()  {
        // uncomment below to test the function
        //Integer mid = null;
        //Object body = null;
        //PostMidMetadata201Response response = api.postMidMetadata(mid, body).block();

        // TODO: test validations
    }
    
    /**
     * Put Bulk metadata
     *
     * Create or update bulk metadata
     */
    @Test
    public void putMidMetadataTest()  {
        // uncomment below to test the function
        //List<PutMidMetadataRequestInner> putMidMetadataRequestInner = null;
        //api.putMidMetadata(putMidMetadataRequestInner).block();

        // TODO: test validations
    }
    
}
