/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.GetTemplate200Response;
import com.sdk.treezor.model.GetTemplateExample200Response;
import com.sdk.treezor.model.GetTemplateVariables200Response;
import com.sdk.treezor.model.GetTemplates200Response;
import com.sdk.treezor.model.PutTemplateUploadRequest;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for ApiTemplatesApi
 */
@Disabled
public class ApiTemplatesApiTest {

    private final ApiTemplatesApi api = new ApiTemplatesApi();

    
    /**
     * Delete Template
     *
     * Delete a Template.
     */
    @Test
    public void deleteTemplateTest()  {
        // uncomment below to test the function
        //String templateName = null;
        //api.deleteTemplate(templateName).block();

        // TODO: test validations
    }
    
    /**
     * Get Template
     *
     * Retrieve the currently configured template.
     */
    @Test
    public void getTemplateTest()  {
        // uncomment below to test the function
        //String templateName = null;
        //GetTemplate200Response response = api.getTemplate(templateName).block();

        // TODO: test validations
    }
    
    /**
     * Build Template Example
     *
     * Test your template by building one with dummy values.
     */
    @Test
    public void getTemplateExampleTest()  {
        // uncomment below to test the function
        //String templateName = null;
        //GetTemplateExample200Response response = api.getTemplateExample(templateName).block();

        // TODO: test validations
    }
    
    /**
     * Get Template Variables
     *
     * Retrieve the list of variables for the given template
     */
    @Test
    public void getTemplateVariablesTest()  {
        // uncomment below to test the function
        //String templateName = null;
        //GetTemplateVariables200Response response = api.getTemplateVariables(templateName).block();

        // TODO: test validations
    }
    
    /**
     * Get Available Templates
     *
     * Retrieve the list of templates.
     */
    @Test
    public void getTemplatesTest()  {
        // uncomment below to test the function
        //GetTemplates200Response response = api.getTemplates().block();

        // TODO: test validations
    }
    
    /**
     * Upload Template
     *
     * Upload a replacement for an existing Template.
     */
    @Test
    public void putTemplateUploadTest()  {
        // uncomment below to test the function
        //String templateName = null;
        //PutTemplateUploadRequest putTemplateUploadRequest = null;
        //api.putTemplateUpload(templateName, putTemplateUploadRequest).block();

        // TODO: test validations
    }
    
}
