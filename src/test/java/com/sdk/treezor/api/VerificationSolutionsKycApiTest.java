/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.PostKycliveness201Response;
import com.sdk.treezor.model.PostKyclivenessRequest;
import com.sdk.treezor.model.PostKycqes201Response;
import com.sdk.treezor.model.PostKycqesRequest;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for VerificationSolutionsKycApi
 */
@Disabled
public class VerificationSolutionsKycApiTest {

    private final VerificationSolutionsKycApi api = new VerificationSolutionsKycApi();

    
    /**
     * Initiate Video Conference Verification
     *
     * Start the [Video conference verification](/guide/user-verification/videoconf.html) process. 
     */
    @Test
    public void postKycVconfTest()  {
        // uncomment below to test the function
        //Integer userId = null;
        //PostKycqesRequest postKycqesRequest = null;
        //PostKycqes201Response response = api.postKycVconf(userId, postKycqesRequest).block();

        // TODO: test validations
    }
    
    /**
     * Initiate Live Verification
     *
     * Start the Live Verficiation process, whether it is KYC Liveness or Certified Video. You may read [the dedicated documentation for this feature](/guide/user-verification/live-verification.html). 
     */
    @Test
    public void postKyclivenessTest()  {
        // uncomment below to test the function
        //Integer userId = null;
        //PostKyclivenessRequest postKyclivenessRequest = null;
        //PostKycliveness201Response response = api.postKycliveness(userId, postKyclivenessRequest).block();

        // TODO: test validations
    }
    
    /**
     * Initiate QES Verification
     *
     * Start the qualified electronic signature (QES) verification.  
     */
    @Test
    public void postKycqesTest()  {
        // uncomment below to test the function
        //Integer userId = null;
        //PostKycqesRequest postKycqesRequest = null;
        //PostKycqes201Response response = api.postKycqes(userId, postKycqesRequest).block();

        // TODO: test validations
    }
    
    /**
     * Retrieve and Upload Live Verification Result
     *
     * Retrieve the live verification results, and make them available to Treezor. You may read [the dedicated documentation for this feature](/guide/user-verification/live-verification.html) 
     */
    @Test
    public void putKycLivenessTest()  {
        // uncomment below to test the function
        //Integer userId = null;
        //Object response = api.putKycLiveness(userId).block();

        // TODO: test validations
    }
    
}
