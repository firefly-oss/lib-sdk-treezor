/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.MerchantIdGroupObject;
import com.sdk.treezor.model.PostMerchantIdRestrictionGroupRequest;
import com.sdk.treezor.model.PutMerchandidrestrictiongroupsDeltaupdateRequest;
import com.sdk.treezor.model.PutMerchantIdRestrictionGroupsRequest;
import com.sdk.treezor.model.PutMidrestrictiongroupsRequest;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for MerchantIdRestrictionGroupsApi
 */
@Disabled
public class MerchantIdRestrictionGroupsApiTest {

    private final MerchantIdRestrictionGroupsApi api = new MerchantIdRestrictionGroupsApi();

    
    /**
     * Cancel MID Restriction Group
     *
     * Cancel a merchant id restriction group.
     */
    @Test
    public void deleteMerchantIdRestrictionGroupsTest()  {
        // uncomment below to test the function
        //Long id = null;
        //List<String> fields = null;
        //MerchantIdGroupObject response = api.deleteMerchantIdRestrictionGroups(id, fields).block();

        // TODO: test validations
    }
    
    /**
     * Search MID Restriction Groups
     *
     * Retrieve Merchant ID Restriction Groups that match search criteria.
     */
    @Test
    public void getMerchantIdRestrictionGroupTest()  {
        // uncomment below to test the function
        //String accessTag = null;
        //List<String> fields = null;
        //String filter = null;
        //Integer pageNumber = null;
        //Integer pageCount = null;
        //String sortBy = null;
        //String sortOrder = null;
        //MerchantIdGroupObject response = api.getMerchantIdRestrictionGroup(accessTag, fields, filter, pageNumber, pageCount, sortBy, sortOrder).block();

        // TODO: test validations
    }
    
    /**
     * Create MID Restriction Group
     *
     * Create a new Merchant ID restriction group.
     */
    @Test
    public void postMerchantIdRestrictionGroupTest()  {
        // uncomment below to test the function
        //PostMerchantIdRestrictionGroupRequest postMerchantIdRestrictionGroupRequest = null;
        //MerchantIdGroupObject response = api.postMerchantIdRestrictionGroup(postMerchantIdRestrictionGroupRequest).block();

        // TODO: test validations
    }
    
    /**
     * Update MID Restriction Group
     *
     * Update the list of Merchant Ids for a MID Restriction Group.
     */
    @Test
    public void putMerchandidrestrictiongroupsDeltaupdateTest()  {
        // uncomment below to test the function
        //Integer id = null;
        //PutMerchandidrestrictiongroupsDeltaupdateRequest putMerchandidrestrictiongroupsDeltaupdateRequest = null;
        //MerchantIdGroupObject response = api.putMerchandidrestrictiongroupsDeltaupdate(id, putMerchandidrestrictiongroupsDeltaupdateRequest).block();

        // TODO: test validations
    }
    
    /**
     * (DEPRECATED) Update MID Restriction Group
     *
     * Deprecated
     */
    @Test
    public void putMerchantIdRestrictionGroupsTest()  {
        // uncomment below to test the function
        //Integer id = null;
        //PutMerchantIdRestrictionGroupsRequest putMerchantIdRestrictionGroupsRequest = null;
        //MerchantIdGroupObject response = api.putMerchantIdRestrictionGroups(id, putMerchantIdRestrictionGroupsRequest).block();

        // TODO: test validations
    }
    
    /**
     * Check the presence of merchants IDs list for a restriction group
     *
     * Check if Merchant IDs list for a restriction group.
     */
    @Test
    public void putMidrestrictiongroupsTest()  {
        // uncomment below to test the function
        //Integer id = null;
        //PutMidrestrictiongroupsRequest putMidrestrictiongroupsRequest = null;
        //MerchantIdGroupObject response = api.putMidrestrictiongroups(id, putMidrestrictiongroupsRequest).block();

        // TODO: test validations
    }
    
}
