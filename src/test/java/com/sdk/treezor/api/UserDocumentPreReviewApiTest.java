/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.GetKYCDocuments200ResponseInner;
import com.sdk.treezor.model.GetPreSignedKycForm200Response;
import com.sdk.treezor.model.GetPreSignedKycFormRequest;
import com.sdk.treezor.model.GetPresignedUrlDocument200Response;
import java.util.UUID;
import com.sdk.treezor.model.UpdateDocument200Response;
import com.sdk.treezor.model.UpdateDocumentRequest;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for UserDocumentPreReviewApi
 */
@Disabled
public class UserDocumentPreReviewApiTest {

    private final UserDocumentPreReviewApi api = new UserDocumentPreReviewApi();

    
    /**
     * Delete Pre-review Document
     *
     * Delete a pre-review document.
     */
    @Test
    public void deleteKYCDocumentcumentTest()  {
        // uncomment below to test the function
        //UUID documentId = null;
        //UpdateDocument200Response response = api.deleteKYCDocumentcument(documentId).block();

        // TODO: test validations
    }
    
    /**
     * Search Pre-review Documents
     *
     * Retrieve all pre-review documents for given user
     */
    @Test
    public void getKYCDocumentsTest()  {
        // uncomment below to test the function
        //Integer userId = null;
        //List<GetKYCDocuments200ResponseInner> response = api.getKYCDocuments(userId).collectList().block();

        // TODO: test validations
    }
    
    /**
     * Search Documents to pre-review
     *
     * Retrieve all pre-review documents to review. This endpoint is for [Onboarded Users](/api-reference/api-endpoints.html#tag/User%20Onboarding) only. 
     */
    @Test
    public void getKYCDocumentsToReviewTest()  {
        // uncomment below to test the function
        //List<UpdateDocument200Response> response = api.getKYCDocumentsToReview().collectList().block();

        // TODO: test validations
    }
    
    /**
     * Create Upload Document Form
     *
     * Generate a pre-signed form to upload documents for pre-review. Expires after 5 minutes.
     */
    @Test
    public void getPreSignedKycFormTest()  {
        // uncomment below to test the function
        //String userId = null;
        //GetPreSignedKycFormRequest getPreSignedKycFormRequest = null;
        //GetPreSignedKycForm200Response response = api.getPreSignedKycForm(userId, getPreSignedKycFormRequest).block();

        // TODO: test validations
    }
    
    /**
     * Get Download URL
     *
     * Retrieve the pre-signed URL to download the pre-review document.
     */
    @Test
    public void getPresignedUrlDocumentTest()  {
        // uncomment below to test the function
        //UUID documentId = null;
        //GetPresignedUrlDocument200Response response = api.getPresignedUrlDocument(documentId).block();

        // TODO: test validations
    }
    
    /**
     * Pre-review Document
     *
     * Update the pre-review status and comment of the document.
     */
    @Test
    public void updateDocumentTest()  {
        // uncomment below to test the function
        //UUID documentId = null;
        //UpdateDocumentRequest updateDocumentRequest = null;
        //UpdateDocument200Response response = api.updateDocument(documentId, updateDocumentRequest).block();

        // TODO: test validations
    }
    
}
