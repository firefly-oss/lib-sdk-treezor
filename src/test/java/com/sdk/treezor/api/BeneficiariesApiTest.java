/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.api;

import com.sdk.treezor.model.BeneficiaryObject;
import com.sdk.treezor.model.DefaultError;
import com.sdk.treezor.model.PostBeneficiaryRequest;
import com.sdk.treezor.model.PutBeneficiaryRequest;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.UUID;

/**
 * API tests for BeneficiariesApi
 */
@Disabled
public class BeneficiariesApiTest {

    private final BeneficiariesApi api = new BeneficiariesApi();

    
    /**
     * Search Beneficiaries
     *
     * Retrieve Beneficiary bank accounts that match search criteria.
     */
    @Test
    public void getBeneficiariesTest()  {
        // uncomment below to test the function
        //String accessTag = null;
        //List<String> fields = null;
        //String filter = null;
        //Integer id = null;
        //Integer pageNumber = null;
        //Integer pageCount = null;
        //String sortBy = null;
        //String sortOrder = null;
        //BeneficiaryObject response = api.getBeneficiaries(accessTag, fields, filter, id, pageNumber, pageCount, sortBy, sortOrder).block();

        // TODO: test validations
    }
    
    /**
     * Get Beneficiary
     *
     * Retrieve a Beneficiary bank account based on its &#x60;id&#x60;.
     */
    @Test
    public void getBeneficiaryTest()  {
        // uncomment below to test the function
        //UUID beneficiaryId = null;
        //List<String> fields = null;
        //BeneficiaryObject response = api.getBeneficiary(beneficiaryId, fields).block();

        // TODO: test validations
    }
    
    /**
     * Create Beneficiary
     *
     * Create a new benefeciary bank account. This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html). 
     */
    @Test
    public void postBeneficiaryTest()  {
        // uncomment below to test the function
        //PostBeneficiaryRequest postBeneficiaryRequest = null;
        //BeneficiaryObject response = api.postBeneficiary(postBeneficiaryRequest).block();

        // TODO: test validations
    }
    
    /**
     * Update Beneficiary
     *
     * Modify a benefeciary bank account information.  This endpoint requires per-operation [SCA](/guide/strong-customer-authentication/introduction.html). 
     */
    @Test
    public void putBeneficiaryTest()  {
        // uncomment below to test the function
        //Integer beneficiaryId = null;
        //PutBeneficiaryRequest putBeneficiaryRequest = null;
        //BeneficiaryObject response = api.putBeneficiary(beneficiaryId, putBeneficiaryRequest).block();

        // TODO: test validations
    }
    
}
