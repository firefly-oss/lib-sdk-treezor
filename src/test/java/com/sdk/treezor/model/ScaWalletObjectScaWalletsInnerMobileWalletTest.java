/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ScaWalletObjectScaWalletsInnerMobileWallet
 */
class ScaWalletObjectScaWalletsInnerMobileWalletTest {
    private final ScaWalletObjectScaWalletsInnerMobileWallet model = new ScaWalletObjectScaWalletsInnerMobileWallet();

    /**
     * Model tests for ScaWalletObjectScaWalletsInnerMobileWallet
     */
    @Test
    void testScaWalletObjectScaWalletsInnerMobileWallet() {
        // TODO: test ScaWalletObjectScaWalletsInnerMobileWallet
    }

    /**
     * Test the property 'appBuildNumber'
     */
    @Test
    void appBuildNumberTest() {
        // TODO: test appBuildNumber
    }

    /**
     * Test the property 'sdkVersion'
     */
    @Test
    void sdkVersionTest() {
        // TODO: test sdkVersion
    }

    /**
     * Test the property 'os'
     */
    @Test
    void osTest() {
        // TODO: test os
    }

    /**
     * Test the property 'osVersion'
     */
    @Test
    void osVersionTest() {
        // TODO: test osVersion
    }

    /**
     * Test the property 'brand'
     */
    @Test
    void brandTest() {
        // TODO: test brand
    }

    /**
     * Test the property 'productModel'
     */
    @Test
    void productModelTest() {
        // TODO: test productModel
    }

    /**
     * Test the property 'deviceId'
     */
    @Test
    void deviceIdTest() {
        // TODO: test deviceId
    }

    /**
     * Test the property 'deviceIdType'
     */
    @Test
    void deviceIdTypeTest() {
        // TODO: test deviceIdType
    }

    /**
     * Test the property 'productFingerprint'
     */
    @Test
    void productFingerprintTest() {
        // TODO: test productFingerprint
    }

    /**
     * Test the property 'secretFingerprint'
     */
    @Test
    void secretFingerprintTest() {
        // TODO: test secretFingerprint
    }

    /**
     * Test the property 'root'
     */
    @Test
    void rootTest() {
        // TODO: test root
    }

    /**
     * Test the property 'pushMessagingId'
     */
    @Test
    void pushMessagingIdTest() {
        // TODO: test pushMessagingId
    }

    /**
     * Test the property 'pushMessagingProvider'
     */
    @Test
    void pushMessagingProviderTest() {
        // TODO: test pushMessagingProvider
    }

    /**
     * Test the property 'mobileUpdateDate'
     */
    @Test
    void mobileUpdateDateTest() {
        // TODO: test mobileUpdateDate
    }

    /**
     * Test the property 'lastEligibilityCheck'
     */
    @Test
    void lastEligibilityCheckTest() {
        // TODO: test lastEligibilityCheck
    }

    /**
     * Test the property 'nfc'
     */
    @Test
    void nfcTest() {
        // TODO: test nfc
    }

    /**
     * Test the property 'emulator'
     */
    @Test
    void emulatorTest() {
        // TODO: test emulator
    }

    /**
     * Test the property 'appleTeamId'
     */
    @Test
    void appleTeamIdTest() {
        // TODO: test appleTeamId
    }

}
