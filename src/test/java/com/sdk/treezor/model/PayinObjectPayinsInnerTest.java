/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PayinObjectPayinsInner
 */
class PayinObjectPayinsInnerTest {
    private final PayinObjectPayinsInner model = new PayinObjectPayinsInner();

    /**
     * Model tests for PayinObjectPayinsInner
     */
    @Test
    void testPayinObjectPayinsInner() {
        // TODO: test PayinObjectPayinsInner
    }

    /**
     * Test the property 'payinId'
     */
    @Test
    void payinIdTest() {
        // TODO: test payinId
    }

    /**
     * Test the property 'payinTag'
     */
    @Test
    void payinTagTest() {
        // TODO: test payinTag
    }

    /**
     * Test the property 'payinStatus'
     */
    @Test
    void payinStatusTest() {
        // TODO: test payinStatus
    }

    /**
     * Test the property 'codeStatus'
     */
    @Test
    void codeStatusTest() {
        // TODO: test codeStatus
    }

    /**
     * Test the property 'informationStatus'
     */
    @Test
    void informationStatusTest() {
        // TODO: test informationStatus
    }

    /**
     * Test the property 'walletId'
     */
    @Test
    void walletIdTest() {
        // TODO: test walletId
    }

    /**
     * Test the property 'userId'
     */
    @Test
    void userIdTest() {
        // TODO: test userId
    }

    /**
     * Test the property 'cartId'
     */
    @Test
    void cartIdTest() {
        // TODO: test cartId
    }

    /**
     * Test the property 'walletEventName'
     */
    @Test
    void walletEventNameTest() {
        // TODO: test walletEventName
    }

    /**
     * Test the property 'walletAlias'
     */
    @Test
    void walletAliasTest() {
        // TODO: test walletAlias
    }

    /**
     * Test the property 'userFirstname'
     */
    @Test
    void userFirstnameTest() {
        // TODO: test userFirstname
    }

    /**
     * Test the property 'userLastname'
     */
    @Test
    void userLastnameTest() {
        // TODO: test userLastname
    }

    /**
     * Test the property 'messageToUser'
     */
    @Test
    void messageToUserTest() {
        // TODO: test messageToUser
    }

    /**
     * Test the property 'paymentMethodId'
     */
    @Test
    void paymentMethodIdTest() {
        // TODO: test paymentMethodId
    }

    /**
     * Test the property 'subtotalItems'
     */
    @Test
    void subtotalItemsTest() {
        // TODO: test subtotalItems
    }

    /**
     * Test the property 'subtotalServices'
     */
    @Test
    void subtotalServicesTest() {
        // TODO: test subtotalServices
    }

    /**
     * Test the property 'subtotalTax'
     */
    @Test
    void subtotalTaxTest() {
        // TODO: test subtotalTax
    }

    /**
     * Test the property 'amount'
     */
    @Test
    void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'currency'
     */
    @Test
    void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'distributorFee'
     */
    @Test
    void distributorFeeTest() {
        // TODO: test distributorFee
    }

    /**
     * Test the property 'createdDate'
     */
    @Test
    void createdDateTest() {
        // TODO: test createdDate
    }

    /**
     * Test the property 'createdIp'
     */
    @Test
    void createdIpTest() {
        // TODO: test createdIp
    }

    /**
     * Test the property 'paymentHtml'
     */
    @Test
    void paymentHtmlTest() {
        // TODO: test paymentHtml
    }

    /**
     * Test the property 'paymentLanguage'
     */
    @Test
    void paymentLanguageTest() {
        // TODO: test paymentLanguage
    }

    /**
     * Test the property 'paymentPostUrl'
     */
    @Test
    void paymentPostUrlTest() {
        // TODO: test paymentPostUrl
    }

    /**
     * Test the property 'paymentPostDataUrl'
     */
    @Test
    void paymentPostDataUrlTest() {
        // TODO: test paymentPostDataUrl
    }

    /**
     * Test the property 'paymentAcceptedUrl'
     */
    @Test
    void paymentAcceptedUrlTest() {
        // TODO: test paymentAcceptedUrl
    }

    /**
     * Test the property 'paymentWaitingUrl'
     */
    @Test
    void paymentWaitingUrlTest() {
        // TODO: test paymentWaitingUrl
    }

    /**
     * Test the property 'paymentRefusedUrl'
     */
    @Test
    void paymentRefusedUrlTest() {
        // TODO: test paymentRefusedUrl
    }

    /**
     * Test the property 'paymentCanceledUrl'
     */
    @Test
    void paymentCanceledUrlTest() {
        // TODO: test paymentCanceledUrl
    }

    /**
     * Test the property 'paymentExceptionUrl'
     */
    @Test
    void paymentExceptionUrlTest() {
        // TODO: test paymentExceptionUrl
    }

    /**
     * Test the property 'ibanFullname'
     */
    @Test
    void ibanFullnameTest() {
        // TODO: test ibanFullname
    }

    /**
     * Test the property 'dbtrIBAN'
     */
    @Test
    void dbtrIBANTest() {
        // TODO: test dbtrIBAN
    }

    /**
     * Test the property 'ibanId'
     */
    @Test
    void ibanIdTest() {
        // TODO: test ibanId
    }

    /**
     * Test the property 'ibanBic'
     */
    @Test
    void ibanBicTest() {
        // TODO: test ibanBic
    }

    /**
     * Test the property 'ibanTxEndToEndId'
     */
    @Test
    void ibanTxEndToEndIdTest() {
        // TODO: test ibanTxEndToEndId
    }

    /**
     * Test the property 'ibanTxId'
     */
    @Test
    void ibanTxIdTest() {
        // TODO: test ibanTxId
    }

    /**
     * Test the property 'refundAmount'
     */
    @Test
    void refundAmountTest() {
        // TODO: test refundAmount
    }

    /**
     * Test the property 'totalRows'
     */
    @Test
    void totalRowsTest() {
        // TODO: test totalRows
    }

    /**
     * Test the property 'forwardUrl'
     */
    @Test
    void forwardUrlTest() {
        // TODO: test forwardUrl
    }

    /**
     * Test the property 'payinDate'
     */
    @Test
    void payinDateTest() {
        // TODO: test payinDate
    }

    /**
     * Test the property 'mandateId'
     */
    @Test
    void mandateIdTest() {
        // TODO: test mandateId
    }

    /**
     * Test the property 'creditorName'
     */
    @Test
    void creditorNameTest() {
        // TODO: test creditorName
    }

    /**
     * Test the property 'creditorAddressLine'
     */
    @Test
    void creditorAddressLineTest() {
        // TODO: test creditorAddressLine
    }

    /**
     * Test the property 'creditorCountry'
     */
    @Test
    void creditorCountryTest() {
        // TODO: test creditorCountry
    }

    /**
     * Test the property 'creditorIban'
     */
    @Test
    void creditorIbanTest() {
        // TODO: test creditorIban
    }

    /**
     * Test the property 'creditorBIC'
     */
    @Test
    void creditorBICTest() {
        // TODO: test creditorBIC
    }

    /**
     * Test the property 'virtualIbanId'
     */
    @Test
    void virtualIbanIdTest() {
        // TODO: test virtualIbanId
    }

    /**
     * Test the property 'virtualIbanReference'
     */
    @Test
    void virtualIbanReferenceTest() {
        // TODO: test virtualIbanReference
    }

}
