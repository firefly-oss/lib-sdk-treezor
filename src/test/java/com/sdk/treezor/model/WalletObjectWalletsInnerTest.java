/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for WalletObjectWalletsInner
 */
class WalletObjectWalletsInnerTest {
    private final WalletObjectWalletsInner model = new WalletObjectWalletsInner();

    /**
     * Model tests for WalletObjectWalletsInner
     */
    @Test
    void testWalletObjectWalletsInner() {
        // TODO: test WalletObjectWalletsInner
    }

    /**
     * Test the property 'walletId'
     */
    @Test
    void walletIdTest() {
        // TODO: test walletId
    }

    /**
     * Test the property 'walletTypeId'
     */
    @Test
    void walletTypeIdTest() {
        // TODO: test walletTypeId
    }

    /**
     * Test the property 'walletStatus'
     */
    @Test
    void walletStatusTest() {
        // TODO: test walletStatus
    }

    /**
     * Test the property 'codeStatus'
     */
    @Test
    void codeStatusTest() {
        // TODO: test codeStatus
    }

    /**
     * Test the property 'informationStatus'
     */
    @Test
    void informationStatusTest() {
        // TODO: test informationStatus
    }

    /**
     * Test the property 'walletTag'
     */
    @Test
    void walletTagTest() {
        // TODO: test walletTag
    }

    /**
     * Test the property 'userId'
     */
    @Test
    void userIdTest() {
        // TODO: test userId
    }

    /**
     * Test the property 'userLastname'
     */
    @Test
    void userLastnameTest() {
        // TODO: test userLastname
    }

    /**
     * Test the property 'userFirstname'
     */
    @Test
    void userFirstnameTest() {
        // TODO: test userFirstname
    }

    /**
     * Test the property 'jointUserId'
     */
    @Test
    void jointUserIdTest() {
        // TODO: test jointUserId
    }

    /**
     * Test the property 'tariffId'
     */
    @Test
    void tariffIdTest() {
        // TODO: test tariffId
    }

    /**
     * Test the property 'eventName'
     */
    @Test
    void eventNameTest() {
        // TODO: test eventName
    }

    /**
     * Test the property 'eventAlias'
     */
    @Test
    void eventAliasTest() {
        // TODO: test eventAlias
    }

    /**
     * Test the property 'eventDate'
     */
    @Test
    void eventDateTest() {
        // TODO: test eventDate
    }

    /**
     * Test the property 'eventMessage'
     */
    @Test
    void eventMessageTest() {
        // TODO: test eventMessage
    }

    /**
     * Test the property 'eventPayinStartDate'
     */
    @Test
    void eventPayinStartDateTest() {
        // TODO: test eventPayinStartDate
    }

    /**
     * Test the property 'eventPayinEndDate'
     */
    @Test
    void eventPayinEndDateTest() {
        // TODO: test eventPayinEndDate
    }

    /**
     * Test the property 'contractSigned'
     */
    @Test
    void contractSignedTest() {
        // TODO: test contractSigned
    }

    /**
     * Test the property 'bic'
     */
    @Test
    void bicTest() {
        // TODO: test bic
    }

    /**
     * Test the property 'iban'
     */
    @Test
    void ibanTest() {
        // TODO: test iban
    }

    /**
     * Test the property 'urlImage'
     */
    @Test
    void urlImageTest() {
        // TODO: test urlImage
    }

    /**
     * Test the property 'currency'
     */
    @Test
    void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'createdDate'
     */
    @Test
    void createdDateTest() {
        // TODO: test createdDate
    }

    /**
     * Test the property 'modifiedDate'
     */
    @Test
    void modifiedDateTest() {
        // TODO: test modifiedDate
    }

    /**
     * Test the property 'payinCount'
     */
    @Test
    void payinCountTest() {
        // TODO: test payinCount
    }

    /**
     * Test the property 'payoutCount'
     */
    @Test
    void payoutCountTest() {
        // TODO: test payoutCount
    }

    /**
     * Test the property 'transferCount'
     */
    @Test
    void transferCountTest() {
        // TODO: test transferCount
    }

    /**
     * Test the property 'solde'
     */
    @Test
    void soldeTest() {
        // TODO: test solde
    }

    /**
     * Test the property 'authorizedBalance'
     */
    @Test
    void authorizedBalanceTest() {
        // TODO: test authorizedBalance
    }

    /**
     * Test the property 'totalRows'
     */
    @Test
    void totalRowsTest() {
        // TODO: test totalRows
    }

    /**
     * Test the property 'country'
     */
    @Test
    void countryTest() {
        // TODO: test country
    }

}
