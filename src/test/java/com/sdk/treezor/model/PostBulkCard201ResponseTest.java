/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PostBulkCard201Response
 */
class PostBulkCard201ResponseTest {
    private final PostBulkCard201Response model = new PostBulkCard201Response();

    /**
     * Model tests for PostBulkCard201Response
     */
    @Test
    void testPostBulkCard201Response() {
        // TODO: test PostBulkCard201Response
    }

    /**
     * Test the property 'orderId'
     */
    @Test
    void orderIdTest() {
        // TODO: test orderId
    }

    /**
     * Test the property 'errors'
     */
    @Test
    void errorsTest() {
        // TODO: test errors
    }

    /**
     * Test the property 'status'
     */
    @Test
    void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'walletIdAttach'
     */
    @Test
    void walletIdAttachTest() {
        // TODO: test walletIdAttach
    }

    /**
     * Test the property 'createWalletForEach'
     */
    @Test
    void createWalletForEachTest() {
        // TODO: test createWalletForEach
    }

    /**
     * Test the property 'walletTypeId'
     */
    @Test
    void walletTypeIdTest() {
        // TODO: test walletTypeId
    }

    /**
     * Test the property 'userIdOwner'
     */
    @Test
    void userIdOwnerTest() {
        // TODO: test userIdOwner
    }

    /**
     * Test the property 'createUserForEach'
     */
    @Test
    void createUserForEachTest() {
        // TODO: test createUserForEach
    }

    /**
     * Test the property 'number'
     */
    @Test
    void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'defaultMccRestrictionGroupId'
     */
    @Test
    void defaultMccRestrictionGroupIdTest() {
        // TODO: test defaultMccRestrictionGroupId
    }

    /**
     * Test the property 'defaultMerchantRestrictionGroupId'
     */
    @Test
    void defaultMerchantRestrictionGroupIdTest() {
        // TODO: test defaultMerchantRestrictionGroupId
    }

    /**
     * Test the property 'defaultCountryRestrictionGroupId'
     */
    @Test
    void defaultCountryRestrictionGroupIdTest() {
        // TODO: test defaultCountryRestrictionGroupId
    }

    /**
     * Test the property 'defaultPermsGroup'
     */
    @Test
    void defaultPermsGroupTest() {
        // TODO: test defaultPermsGroup
    }

    /**
     * Test the property 'packageId'
     */
    @Test
    void packageIdTest() {
        // TODO: test packageId
    }

    /**
     * Test the property 'logoId'
     */
    @Test
    void logoIdTest() {
        // TODO: test logoId
    }

    /**
     * Test the property 'logoBackId'
     */
    @Test
    void logoBackIdTest() {
        // TODO: test logoBackId
    }

    /**
     * Test the property 'anonymous'
     */
    @Test
    void anonymousTest() {
        // TODO: test anonymous
    }

    /**
     * Test the property 'cardPrint'
     */
    @Test
    void cardPrintTest() {
        // TODO: test cardPrint
    }

    /**
     * Test the property 'paymentDailyLimit'
     */
    @Test
    void paymentDailyLimitTest() {
        // TODO: test paymentDailyLimit
    }

    /**
     * Test the property 'limitPaymentAll'
     */
    @Test
    void limitPaymentAllTest() {
        // TODO: test limitPaymentAll
    }

    /**
     * Test the property 'limitPaymentDay'
     */
    @Test
    void limitPaymentDayTest() {
        // TODO: test limitPaymentDay
    }

    /**
     * Test the property 'limitPaymentWeek'
     */
    @Test
    void limitPaymentWeekTest() {
        // TODO: test limitPaymentWeek
    }

    /**
     * Test the property 'limitPaymentMonth'
     */
    @Test
    void limitPaymentMonthTest() {
        // TODO: test limitPaymentMonth
    }

    /**
     * Test the property 'limitPaymentYear'
     */
    @Test
    void limitPaymentYearTest() {
        // TODO: test limitPaymentYear
    }

    /**
     * Test the property 'limitAtmAll'
     */
    @Test
    void limitAtmAllTest() {
        // TODO: test limitAtmAll
    }

    /**
     * Test the property 'limitAtmDay'
     */
    @Test
    void limitAtmDayTest() {
        // TODO: test limitAtmDay
    }

    /**
     * Test the property 'limitAtmWeek'
     */
    @Test
    void limitAtmWeekTest() {
        // TODO: test limitAtmWeek
    }

    /**
     * Test the property 'limitAtmMonth'
     */
    @Test
    void limitAtmMonthTest() {
        // TODO: test limitAtmMonth
    }

    /**
     * Test the property 'limitAtmYear'
     */
    @Test
    void limitAtmYearTest() {
        // TODO: test limitAtmYear
    }

    /**
     * Test the property 'medium'
     */
    @Test
    void mediumTest() {
        // TODO: test medium
    }

}
