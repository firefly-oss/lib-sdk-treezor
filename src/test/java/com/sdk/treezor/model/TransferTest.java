/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Transfer
 */
class TransferTest {
    private final Transfer model = new Transfer();

    /**
     * Model tests for Transfer
     */
    @Test
    void testTransfer() {
        // TODO: test Transfer
    }

    /**
     * Test the property 'label'
     */
    @Test
    void labelTest() {
        // TODO: test label
    }

    /**
     * Test the property 'codeStatus'
     */
    @Test
    void codeStatusTest() {
        // TODO: test codeStatus
    }

    /**
     * Test the property 'tag'
     */
    @Test
    void tagTest() {
        // TODO: test tag
    }

    /**
     * Test the property 'informationStatus'
     */
    @Test
    void informationStatusTest() {
        // TODO: test informationStatus
    }

    /**
     * Test the property 'creditorWalletId'
     */
    @Test
    void creditorWalletIdTest() {
        // TODO: test creditorWalletId
    }

    /**
     * Test the property 'creditorFirstName'
     */
    @Test
    void creditorFirstNameTest() {
        // TODO: test creditorFirstName
    }

    /**
     * Test the property 'creditorLastName'
     */
    @Test
    void creditorLastNameTest() {
        // TODO: test creditorLastName
    }

    /**
     * Test the property 'creditorLegalName'
     */
    @Test
    void creditorLegalNameTest() {
        // TODO: test creditorLegalName
    }

    /**
     * Test the property 'creditorWalletEventName'
     */
    @Test
    void creditorWalletEventNameTest() {
        // TODO: test creditorWalletEventName
    }

    /**
     * Test the property 'debtorWalletId'
     */
    @Test
    void debtorWalletIdTest() {
        // TODO: test debtorWalletId
    }

    /**
     * Test the property 'debtorFirstName'
     */
    @Test
    void debtorFirstNameTest() {
        // TODO: test debtorFirstName
    }

    /**
     * Test the property 'debtorLastName'
     */
    @Test
    void debtorLastNameTest() {
        // TODO: test debtorLastName
    }

    /**
     * Test the property 'debtorLegalName'
     */
    @Test
    void debtorLegalNameTest() {
        // TODO: test debtorLegalName
    }

    /**
     * Test the property 'debtorWalletEventName'
     */
    @Test
    void debtorWalletEventNameTest() {
        // TODO: test debtorWalletEventName
    }

}
