/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetRecallRs200ResponseRecallrsInner
 */
class GetRecallRs200ResponseRecallrsInnerTest {
    private final GetRecallRs200ResponseRecallrsInner model = new GetRecallRs200ResponseRecallrsInner();

    /**
     * Model tests for GetRecallRs200ResponseRecallrsInner
     */
    @Test
    void testGetRecallRs200ResponseRecallrsInner() {
        // TODO: test GetRecallRs200ResponseRecallrsInner
    }

    /**
     * Test the property 'id'
     */
    @Test
    void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'recallRSepaMessageId'
     */
    @Test
    void recallRSepaMessageIdTest() {
        // TODO: test recallRSepaMessageId
    }

    /**
     * Test the property 'cxlId'
     */
    @Test
    void cxlIdTest() {
        // TODO: test cxlId
    }

    /**
     * Test the property 'statusId'
     */
    @Test
    void statusIdTest() {
        // TODO: test statusId
    }

    /**
     * Test the property 'statusLabel'
     */
    @Test
    void statusLabelTest() {
        // TODO: test statusLabel
    }

    /**
     * Test the property 'reasonCode'
     */
    @Test
    void reasonCodeTest() {
        // TODO: test reasonCode
    }

    /**
     * Test the property 'additionalInformation'
     */
    @Test
    void additionalInformationTest() {
        // TODO: test additionalInformation
    }

    /**
     * Test the property 'clientId'
     */
    @Test
    void clientIdTest() {
        // TODO: test clientId
    }

    /**
     * Test the property 'userId'
     */
    @Test
    void userIdTest() {
        // TODO: test userId
    }

    /**
     * Test the property 'userTypeId'
     */
    @Test
    void userTypeIdTest() {
        // TODO: test userTypeId
    }

    /**
     * Test the property 'userName'
     */
    @Test
    void userNameTest() {
        // TODO: test userName
    }

    /**
     * Test the property 'userStatusId'
     */
    @Test
    void userStatusIdTest() {
        // TODO: test userStatusId
    }

    /**
     * Test the property 'walletId'
     */
    @Test
    void walletIdTest() {
        // TODO: test walletId
    }

    /**
     * Test the property 'walletStatusId'
     */
    @Test
    void walletStatusIdTest() {
        // TODO: test walletStatusId
    }

    /**
     * Test the property 'walletActivationDate'
     */
    @Test
    void walletActivationDateTest() {
        // TODO: test walletActivationDate
    }

    /**
     * Test the property 'walletDesactivationDate'
     */
    @Test
    void walletDesactivationDateTest() {
        // TODO: test walletDesactivationDate
    }

    /**
     * Test the property 'sctrAmount'
     */
    @Test
    void sctrAmountTest() {
        // TODO: test sctrAmount
    }

    /**
     * Test the property 'sctrSettelmentDate'
     */
    @Test
    void sctrSettelmentDateTest() {
        // TODO: test sctrSettelmentDate
    }

    /**
     * Test the property 'sctrDbtrIBAN'
     */
    @Test
    void sctrDbtrIBANTest() {
        // TODO: test sctrDbtrIBAN
    }

    /**
     * Test the property 'sctrDbtrBIC'
     */
    @Test
    void sctrDbtrBICTest() {
        // TODO: test sctrDbtrBIC
    }

    /**
     * Test the property 'sctrDbtrName'
     */
    @Test
    void sctrDbtrNameTest() {
        // TODO: test sctrDbtrName
    }

    /**
     * Test the property 'responseSepaMessageId'
     */
    @Test
    void responseSepaMessageIdTest() {
        // TODO: test responseSepaMessageId
    }

    /**
     * Test the property 'receivedDate'
     */
    @Test
    void receivedDateTest() {
        // TODO: test receivedDate
    }

    /**
     * Test the property 'payinId'
     */
    @Test
    void payinIdTest() {
        // TODO: test payinId
    }

    /**
     * Test the property 'payinRefundId'
     */
    @Test
    void payinRefundIdTest() {
        // TODO: test payinRefundId
    }

    /**
     * Test the property 'responseType'
     */
    @Test
    void responseTypeTest() {
        // TODO: test responseType
    }

    /**
     * Test the property 'negativeResponseReasonCode'
     */
    @Test
    void negativeResponseReasonCodeTest() {
        // TODO: test negativeResponseReasonCode
    }

    /**
     * Test the property 'negativeResponseAdditionalInformation'
     */
    @Test
    void negativeResponseAdditionalInformationTest() {
        // TODO: test negativeResponseAdditionalInformation
    }

    /**
     * Test the property 'responseComment'
     */
    @Test
    void responseCommentTest() {
        // TODO: test responseComment
    }

    /**
     * Test the property 'boResponse'
     */
    @Test
    void boResponseTest() {
        // TODO: test boResponse
    }

    /**
     * Test the property 'frozenWalletFollowingRecallr'
     */
    @Test
    void frozenWalletFollowingRecallrTest() {
        // TODO: test frozenWalletFollowingRecallr
    }

    /**
     * Test the property 'automaticResponse'
     */
    @Test
    void automaticResponseTest() {
        // TODO: test automaticResponse
    }

    /**
     * Test the property 'comment'
     */
    @Test
    void commentTest() {
        // TODO: test comment
    }

    /**
     * Test the property 'fraudConfirmed'
     */
    @Test
    void fraudConfirmedTest() {
        // TODO: test fraudConfirmed
    }

    /**
     * Test the property 'partialRefund'
     */
    @Test
    void partialRefundTest() {
        // TODO: test partialRefund
    }

    /**
     * Test the property 'inError'
     */
    @Test
    void inErrorTest() {
        // TODO: test inError
    }

    /**
     * Test the property 'createdDate'
     */
    @Test
    void createdDateTest() {
        // TODO: test createdDate
    }

    /**
     * Test the property 'updatedDate'
     */
    @Test
    void updatedDateTest() {
        // TODO: test updatedDate
    }

}
