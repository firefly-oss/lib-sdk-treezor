/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetCoCardTransactions200ResponseCardTransactionsInner
 */
class GetCoCardTransactions200ResponseCardTransactionsInnerTest {
    private final GetCoCardTransactions200ResponseCardTransactionsInner model = new GetCoCardTransactions200ResponseCardTransactionsInner();

    /**
     * Model tests for GetCoCardTransactions200ResponseCardTransactionsInner
     */
    @Test
    void testGetCoCardTransactions200ResponseCardTransactionsInner() {
        // TODO: test GetCoCardTransactions200ResponseCardTransactionsInner
    }

    /**
     * Test the property 'cardtransactionId'
     */
    @Test
    void cardtransactionIdTest() {
        // TODO: test cardtransactionId
    }

    /**
     * Test the property 'cardId'
     */
    @Test
    void cardIdTest() {
        // TODO: test cardId
    }

    /**
     * Test the property 'walletId'
     */
    @Test
    void walletIdTest() {
        // TODO: test walletId
    }

    /**
     * Test the property 'acquirerId'
     */
    @Test
    void acquirerIdTest() {
        // TODO: test acquirerId
    }

    /**
     * Test the property 'walletCurrency'
     */
    @Test
    void walletCurrencyTest() {
        // TODO: test walletCurrency
    }

    /**
     * Test the property 'merchantId'
     */
    @Test
    void merchantIdTest() {
        // TODO: test merchantId
    }

    /**
     * Test the property 'merchantName'
     */
    @Test
    void merchantNameTest() {
        // TODO: test merchantName
    }

    /**
     * Test the property 'merchantCity'
     */
    @Test
    void merchantCityTest() {
        // TODO: test merchantCity
    }

    /**
     * Test the property 'merchantCountry'
     */
    @Test
    void merchantCountryTest() {
        // TODO: test merchantCountry
    }

    /**
     * Test the property 'mccCode'
     */
    @Test
    void mccCodeTest() {
        // TODO: test mccCode
    }

    /**
     * Test the property 'paymentLocalTime'
     */
    @Test
    void paymentLocalTimeTest() {
        // TODO: test paymentLocalTime
    }

    /**
     * Test the property 'publicToken'
     */
    @Test
    void publicTokenTest() {
        // TODO: test publicToken
    }

    /**
     * Test the property 'paymentAmount'
     */
    @Test
    void paymentAmountTest() {
        // TODO: test paymentAmount
    }

    /**
     * Test the property 'paymentCurrency'
     */
    @Test
    void paymentCurrencyTest() {
        // TODO: test paymentCurrency
    }

    /**
     * Test the property 'fees'
     */
    @Test
    void feesTest() {
        // TODO: test fees
    }

    /**
     * Test the property 'paymentCountry'
     */
    @Test
    void paymentCountryTest() {
        // TODO: test paymentCountry
    }

    /**
     * Test the property 'paymentId'
     */
    @Test
    void paymentIdTest() {
        // TODO: test paymentId
    }

    /**
     * Test the property 'paymentStatus'
     */
    @Test
    void paymentStatusTest() {
        // TODO: test paymentStatus
    }

    /**
     * Test the property 'paymentLocalAmount'
     */
    @Test
    void paymentLocalAmountTest() {
        // TODO: test paymentLocalAmount
    }

    /**
     * Test the property 'posCardholderPresence'
     */
    @Test
    void posCardholderPresenceTest() {
        // TODO: test posCardholderPresence
    }

    /**
     * Test the property 'posPostcode'
     */
    @Test
    void posPostcodeTest() {
        // TODO: test posPostcode
    }

    /**
     * Test the property 'posCountry'
     */
    @Test
    void posCountryTest() {
        // TODO: test posCountry
    }

    /**
     * Test the property 'posTerminalId'
     */
    @Test
    void posTerminalIdTest() {
        // TODO: test posTerminalId
    }

    /**
     * Test the property 'posCardPresence'
     */
    @Test
    void posCardPresenceTest() {
        // TODO: test posCardPresence
    }

    /**
     * Test the property 'panEntryMethod'
     */
    @Test
    void panEntryMethodTest() {
        // TODO: test panEntryMethod
    }

    /**
     * Test the property 'authorizationNote'
     */
    @Test
    void authorizationNoteTest() {
        // TODO: test authorizationNote
    }

    /**
     * Test the property 'authorizationResponseCode'
     */
    @Test
    void authorizationResponseCodeTest() {
        // TODO: test authorizationResponseCode
    }

    /**
     * Test the property 'authorizationIssuerId'
     */
    @Test
    void authorizationIssuerIdTest() {
        // TODO: test authorizationIssuerId
    }

    /**
     * Test the property 'authorizationIssuerTime'
     */
    @Test
    void authorizationIssuerTimeTest() {
        // TODO: test authorizationIssuerTime
    }

    /**
     * Test the property 'authorizationMti'
     */
    @Test
    void authorizationMtiTest() {
        // TODO: test authorizationMti
    }

    /**
     * Test the property 'authorizedBalance'
     */
    @Test
    void authorizedBalanceTest() {
        // TODO: test authorizedBalance
    }

    /**
     * Test the property 'limitAtmYear'
     */
    @Test
    void limitAtmYearTest() {
        // TODO: test limitAtmYear
    }

    /**
     * Test the property 'limitAtmMonth'
     */
    @Test
    void limitAtmMonthTest() {
        // TODO: test limitAtmMonth
    }

    /**
     * Test the property 'limitAtmWeek'
     */
    @Test
    void limitAtmWeekTest() {
        // TODO: test limitAtmWeek
    }

    /**
     * Test the property 'limitAtmDay'
     */
    @Test
    void limitAtmDayTest() {
        // TODO: test limitAtmDay
    }

    /**
     * Test the property 'limitAtmAll'
     */
    @Test
    void limitAtmAllTest() {
        // TODO: test limitAtmAll
    }

    /**
     * Test the property 'limitPaymentYear'
     */
    @Test
    void limitPaymentYearTest() {
        // TODO: test limitPaymentYear
    }

    /**
     * Test the property 'limitPaymentMonth'
     */
    @Test
    void limitPaymentMonthTest() {
        // TODO: test limitPaymentMonth
    }

    /**
     * Test the property 'limitPaymentWeek'
     */
    @Test
    void limitPaymentWeekTest() {
        // TODO: test limitPaymentWeek
    }

    /**
     * Test the property 'limitPaymentDay'
     */
    @Test
    void limitPaymentDayTest() {
        // TODO: test limitPaymentDay
    }

    /**
     * Test the property 'limitPaymentAll'
     */
    @Test
    void limitPaymentAllTest() {
        // TODO: test limitPaymentAll
    }

    /**
     * Test the property 'totalLimitAtmYear'
     */
    @Test
    void totalLimitAtmYearTest() {
        // TODO: test totalLimitAtmYear
    }

    /**
     * Test the property 'totalLimitAtmMonth'
     */
    @Test
    void totalLimitAtmMonthTest() {
        // TODO: test totalLimitAtmMonth
    }

    /**
     * Test the property 'totalLimitAtmWeek'
     */
    @Test
    void totalLimitAtmWeekTest() {
        // TODO: test totalLimitAtmWeek
    }

    /**
     * Test the property 'totalLimitAtmDay'
     */
    @Test
    void totalLimitAtmDayTest() {
        // TODO: test totalLimitAtmDay
    }

    /**
     * Test the property 'totalLimitAtmAll'
     */
    @Test
    void totalLimitAtmAllTest() {
        // TODO: test totalLimitAtmAll
    }

    /**
     * Test the property 'totalLimitPaymentYear'
     */
    @Test
    void totalLimitPaymentYearTest() {
        // TODO: test totalLimitPaymentYear
    }

    /**
     * Test the property 'totalLimitPaymentMonth'
     */
    @Test
    void totalLimitPaymentMonthTest() {
        // TODO: test totalLimitPaymentMonth
    }

    /**
     * Test the property 'totalLimitPaymentWeek'
     */
    @Test
    void totalLimitPaymentWeekTest() {
        // TODO: test totalLimitPaymentWeek
    }

    /**
     * Test the property 'totalLimitPaymentDay'
     */
    @Test
    void totalLimitPaymentDayTest() {
        // TODO: test totalLimitPaymentDay
    }

    /**
     * Test the property 'totalLimitPaymentAll'
     */
    @Test
    void totalLimitPaymentAllTest() {
        // TODO: test totalLimitPaymentAll
    }

    /**
     * Test the property 'cardDigitalizationExternalId'
     */
    @Test
    void cardDigitalizationExternalIdTest() {
        // TODO: test cardDigitalizationExternalId
    }

    /**
     * Test the property 'is3DS'
     */
    @Test
    void is3DSTest() {
        // TODO: test is3DS
    }

    /**
     * Test the property 'merchantAddress'
     */
    @Test
    void merchantAddressTest() {
        // TODO: test merchantAddress
    }

    /**
     * Test the property 'paymentLocalDate'
     */
    @Test
    void paymentLocalDateTest() {
        // TODO: test paymentLocalDate
    }

    /**
     * Test the property 'optimizedMerchantName'
     */
    @Test
    void optimizedMerchantNameTest() {
        // TODO: test optimizedMerchantName
    }

    /**
     * Test the property 'merchantLogo'
     */
    @Test
    void merchantLogoTest() {
        // TODO: test merchantLogo
    }

    /**
     * Test the property 'merchantCategory'
     */
    @Test
    void merchantCategoryTest() {
        // TODO: test merchantCategory
    }

    /**
     * Test the property 'transactionSubtype'
     */
    @Test
    void transactionSubtypeTest() {
        // TODO: test transactionSubtype
    }

    /**
     * Test the property '_3dsExemptionType'
     */
    @Test
    void _3dsExemptionTypeTest() {
        // TODO: test _3dsExemptionType
    }

    /**
     * Test the property 'receiverData'
     */
    @Test
    void receiverDataTest() {
        // TODO: test receiverData
    }

    /**
     * Test the property 'senderData'
     */
    @Test
    void senderDataTest() {
        // TODO: test senderData
    }

    /**
     * Test the property 'transactionTypeIdentifier'
     */
    @Test
    void transactionTypeIdentifierTest() {
        // TODO: test transactionTypeIdentifier
    }

    /**
     * Test the property 'localMerchantId'
     */
    @Test
    void localMerchantIdTest() {
        // TODO: test localMerchantId
    }

    /**
     * Test the property 'userId'
     */
    @Test
    void userIdTest() {
        // TODO: test userId
    }

}
