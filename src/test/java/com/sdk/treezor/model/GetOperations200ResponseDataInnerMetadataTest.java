/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sdk.treezor.model.CardPayment;
import com.sdk.treezor.model.CardPaymentAuthorisationResponseCode;
import com.sdk.treezor.model.CardPaymentLocalAmount;
import com.sdk.treezor.model.CardPaymentMcc;
import com.sdk.treezor.model.CardPaymentMid;
import com.sdk.treezor.model.Chargeback;
import com.sdk.treezor.model.Payin;
import com.sdk.treezor.model.PayinRefund;
import com.sdk.treezor.model.PaymentLifeCycle;
import com.sdk.treezor.model.Payout;
import com.sdk.treezor.model.PayoutRefund;
import com.sdk.treezor.model.Transfer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetOperations200ResponseDataInnerMetadata
 */
class GetOperations200ResponseDataInnerMetadataTest {
    private final GetOperations200ResponseDataInnerMetadata model = new GetOperations200ResponseDataInnerMetadata();

    /**
     * Model tests for GetOperations200ResponseDataInnerMetadata
     */
    @Test
    void testGetOperations200ResponseDataInnerMetadata() {
        // TODO: test GetOperations200ResponseDataInnerMetadata
    }

    /**
     * Test the property 'mcc'
     */
    @Test
    void mccTest() {
        // TODO: test mcc
    }

    /**
     * Test the property 'mid'
     */
    @Test
    void midTest() {
        // TODO: test mid
    }

    /**
     * Test the property 'localAmount'
     */
    @Test
    void localAmountTest() {
        // TODO: test localAmount
    }

    /**
     * Test the property 'authorisationResponseCode'
     */
    @Test
    void authorisationResponseCodeTest() {
        // TODO: test authorisationResponseCode
    }

    /**
     * Test the property 'paymentLifeCycle'
     */
    @Test
    void paymentLifeCycleTest() {
        // TODO: test paymentLifeCycle
    }

    /**
     * Test the property 'paymentCountry'
     */
    @Test
    void paymentCountryTest() {
        // TODO: test paymentCountry
    }

    /**
     * Test the property 'cardId'
     */
    @Test
    void cardIdTest() {
        // TODO: test cardId
    }

    /**
     * Test the property 'publicToken'
     */
    @Test
    void publicTokenTest() {
        // TODO: test publicToken
    }

    /**
     * Test the property 'maskedPan'
     */
    @Test
    void maskedPanTest() {
        // TODO: test maskedPan
    }

    /**
     * Test the property 'is3DS'
     */
    @Test
    void is3DSTest() {
        // TODO: test is3DS
    }

    /**
     * Test the property '_3dsExemptionType'
     */
    @Test
    void _3dsExemptionTypeTest() {
        // TODO: test _3dsExemptionType
    }

    /**
     * Test the property 'optimizedMerchantName'
     */
    @Test
    void optimizedMerchantNameTest() {
        // TODO: test optimizedMerchantName
    }

    /**
     * Test the property 'merchantLogo'
     */
    @Test
    void merchantLogoTest() {
        // TODO: test merchantLogo
    }

    /**
     * Test the property 'merchantCategory'
     */
    @Test
    void merchantCategoryTest() {
        // TODO: test merchantCategory
    }

    /**
     * Test the property 'transactionSubtype'
     */
    @Test
    void transactionSubtypeTest() {
        // TODO: test transactionSubtype
    }

    /**
     * Test the property 'authorizationNote'
     */
    @Test
    void authorizationNoteTest() {
        // TODO: test authorizationNote
    }

    /**
     * Test the property 'payinId'
     */
    @Test
    void payinIdTest() {
        // TODO: test payinId
    }

    /**
     * Test the property 'payinRefundId'
     */
    @Test
    void payinRefundIdTest() {
        // TODO: test payinRefundId
    }

    /**
     * Test the property 'transactionReference'
     */
    @Test
    void transactionReferenceTest() {
        // TODO: test transactionReference
    }

    /**
     * Test the property 'payinTag'
     */
    @Test
    void payinTagTest() {
        // TODO: test payinTag
    }

    /**
     * Test the property 'additionalData'
     */
    @Test
    void additionalDataTest() {
        // TODO: test additionalData
    }

    /**
     * Test the property 'chargebackReason'
     */
    @Test
    void chargebackReasonTest() {
        // TODO: test chargebackReason
    }

    /**
     * Test the property 'messageToUser'
     */
    @Test
    void messageToUserTest() {
        // TODO: test messageToUser
    }

    /**
     * Test the property 'codeStatus'
     */
    @Test
    void codeStatusTest() {
        // TODO: test codeStatus
    }

    /**
     * Test the property 'informationStatus'
     */
    @Test
    void informationStatusTest() {
        // TODO: test informationStatus
    }

    /**
     * Test the property 'paymentMethodId'
     */
    @Test
    void paymentMethodIdTest() {
        // TODO: test paymentMethodId
    }

    /**
     * Test the property 'ibanFullname'
     */
    @Test
    void ibanFullnameTest() {
        // TODO: test ibanFullname
    }

    /**
     * Test the property 'ibanBic'
     */
    @Test
    void ibanBicTest() {
        // TODO: test ibanBic
    }

    /**
     * Test the property 'dbtrIBAN'
     */
    @Test
    void dbtrIBANTest() {
        // TODO: test dbtrIBAN
    }

    /**
     * Test the property 'mandateId'
     */
    @Test
    void mandateIdTest() {
        // TODO: test mandateId
    }

    /**
     * Test the property 'ibanTxEndToEndId'
     */
    @Test
    void ibanTxEndToEndIdTest() {
        // TODO: test ibanTxEndToEndId
    }

    /**
     * Test the property 'debtorName'
     */
    @Test
    void debtorNameTest() {
        // TODO: test debtorName
    }

    /**
     * Test the property 'uniqueMandateReference'
     */
    @Test
    void uniqueMandateReferenceTest() {
        // TODO: test uniqueMandateReference
    }

    /**
     * Test the property 'reasonTms'
     */
    @Test
    void reasonTmsTest() {
        // TODO: test reasonTms
    }

    /**
     * Test the property 'ibanFullName'
     */
    @Test
    void ibanFullNameTest() {
        // TODO: test ibanFullName
    }

    /**
     * Test the property 'payoutTag'
     */
    @Test
    void payoutTagTest() {
        // TODO: test payoutTag
    }

    /**
     * Test the property 'beneficiaryId'
     */
    @Test
    void beneficiaryIdTest() {
        // TODO: test beneficiaryId
    }

    /**
     * Test the property 'label'
     */
    @Test
    void labelTest() {
        // TODO: test label
    }

    /**
     * Test the property 'payoutTypeId'
     */
    @Test
    void payoutTypeIdTest() {
        // TODO: test payoutTypeId
    }

    /**
     * Test the property 'supportingFileLink'
     */
    @Test
    void supportingFileLinkTest() {
        // TODO: test supportingFileLink
    }

    /**
     * Test the property 'endToEndId'
     */
    @Test
    void endToEndIdTest() {
        // TODO: test endToEndId
    }

    /**
     * Test the property 'reasonCode'
     */
    @Test
    void reasonCodeTest() {
        // TODO: test reasonCode
    }

    /**
     * Test the property 'reasonDescription'
     */
    @Test
    void reasonDescriptionTest() {
        // TODO: test reasonDescription
    }

    /**
     * Test the property 'beneficiaryName'
     */
    @Test
    void beneficiaryNameTest() {
        // TODO: test beneficiaryName
    }

    /**
     * Test the property 'payoutRefundTag'
     */
    @Test
    void payoutRefundTagTest() {
        // TODO: test payoutRefundTag
    }

    /**
     * Test the property 'requestComment'
     */
    @Test
    void requestCommentTest() {
        // TODO: test requestComment
    }

    /**
     * Test the property 'refundDate'
     */
    @Test
    void refundDateTest() {
        // TODO: test refundDate
    }

    /**
     * Test the property 'refundComment'
     */
    @Test
    void refundCommentTest() {
        // TODO: test refundComment
    }

    /**
     * Test the property 'payoutId'
     */
    @Test
    void payoutIdTest() {
        // TODO: test payoutId
    }

    /**
     * Test the property 'tag'
     */
    @Test
    void tagTest() {
        // TODO: test tag
    }

    /**
     * Test the property 'creditorWalletId'
     */
    @Test
    void creditorWalletIdTest() {
        // TODO: test creditorWalletId
    }

    /**
     * Test the property 'creditorFirstName'
     */
    @Test
    void creditorFirstNameTest() {
        // TODO: test creditorFirstName
    }

    /**
     * Test the property 'creditorLastName'
     */
    @Test
    void creditorLastNameTest() {
        // TODO: test creditorLastName
    }

    /**
     * Test the property 'creditorLegalName'
     */
    @Test
    void creditorLegalNameTest() {
        // TODO: test creditorLegalName
    }

    /**
     * Test the property 'creditorWalletEventName'
     */
    @Test
    void creditorWalletEventNameTest() {
        // TODO: test creditorWalletEventName
    }

    /**
     * Test the property 'debtorWalletId'
     */
    @Test
    void debtorWalletIdTest() {
        // TODO: test debtorWalletId
    }

    /**
     * Test the property 'debtorFirstName'
     */
    @Test
    void debtorFirstNameTest() {
        // TODO: test debtorFirstName
    }

    /**
     * Test the property 'debtorLastName'
     */
    @Test
    void debtorLastNameTest() {
        // TODO: test debtorLastName
    }

    /**
     * Test the property 'debtorLegalName'
     */
    @Test
    void debtorLegalNameTest() {
        // TODO: test debtorLegalName
    }

    /**
     * Test the property 'debtorWalletEventName'
     */
    @Test
    void debtorWalletEventNameTest() {
        // TODO: test debtorWalletEventName
    }

}
