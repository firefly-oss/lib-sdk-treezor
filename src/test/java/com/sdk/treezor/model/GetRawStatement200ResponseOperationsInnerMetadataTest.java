/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sdk.treezor.model.StatementCardPayment;
import com.sdk.treezor.model.StatementCardPaymentLocalAmount;
import com.sdk.treezor.model.StatementChargeback;
import com.sdk.treezor.model.StatementPayin;
import com.sdk.treezor.model.StatementPayinRefund;
import com.sdk.treezor.model.StatementPayout;
import com.sdk.treezor.model.StatementPayoutRefund;
import com.sdk.treezor.model.StatementTransfer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetRawStatement200ResponseOperationsInnerMetadata
 */
class GetRawStatement200ResponseOperationsInnerMetadataTest {
    private final GetRawStatement200ResponseOperationsInnerMetadata model = new GetRawStatement200ResponseOperationsInnerMetadata();

    /**
     * Model tests for GetRawStatement200ResponseOperationsInnerMetadata
     */
    @Test
    void testGetRawStatement200ResponseOperationsInnerMetadata() {
        // TODO: test GetRawStatement200ResponseOperationsInnerMetadata
    }

    /**
     * Test the property 'paymentId'
     */
    @Test
    void paymentIdTest() {
        // TODO: test paymentId
    }

    /**
     * Test the property 'maskedPan'
     */
    @Test
    void maskedPanTest() {
        // TODO: test maskedPan
    }

    /**
     * Test the property 'merchantName'
     */
    @Test
    void merchantNameTest() {
        // TODO: test merchantName
    }

    /**
     * Test the property 'localAmount'
     */
    @Test
    void localAmountTest() {
        // TODO: test localAmount
    }

    /**
     * Test the property 'payinId'
     */
    @Test
    void payinIdTest() {
        // TODO: test payinId
    }

    /**
     * Test the property 'payinRefundId'
     */
    @Test
    void payinRefundIdTest() {
        // TODO: test payinRefundId
    }

    /**
     * Test the property 'transactionReference'
     */
    @Test
    void transactionReferenceTest() {
        // TODO: test transactionReference
    }

    /**
     * Test the property 'payinTag'
     */
    @Test
    void payinTagTest() {
        // TODO: test payinTag
    }

    /**
     * Test the property 'additionalData'
     */
    @Test
    void additionalDataTest() {
        // TODO: test additionalData
    }

    /**
     * Test the property 'chargebackReason'
     */
    @Test
    void chargebackReasonTest() {
        // TODO: test chargebackReason
    }

    /**
     * Test the property 'label'
     */
    @Test
    void labelTest() {
        // TODO: test label
    }

    /**
     * Test the property 'ibanFullname'
     */
    @Test
    void ibanFullnameTest() {
        // TODO: test ibanFullname
    }

    /**
     * Test the property 'ibanBic'
     */
    @Test
    void ibanBicTest() {
        // TODO: test ibanBic
    }

    /**
     * Test the property 'dbtrIBAN'
     */
    @Test
    void dbtrIBANTest() {
        // TODO: test dbtrIBAN
    }

    /**
     * Test the property 'ibanTxEndToEndId'
     */
    @Test
    void ibanTxEndToEndIdTest() {
        // TODO: test ibanTxEndToEndId
    }

    /**
     * Test the property 'mandateId'
     */
    @Test
    void mandateIdTest() {
        // TODO: test mandateId
    }

    /**
     * Test the property 'debtorName'
     */
    @Test
    void debtorNameTest() {
        // TODO: test debtorName
    }

    /**
     * Test the property 'uniqueMandateReference'
     */
    @Test
    void uniqueMandateReferenceTest() {
        // TODO: test uniqueMandateReference
    }

    /**
     * Test the property 'payoutId'
     */
    @Test
    void payoutIdTest() {
        // TODO: test payoutId
    }

    /**
     * Test the property 'payoutTag'
     */
    @Test
    void payoutTagTest() {
        // TODO: test payoutTag
    }

    /**
     * Test the property 'beneficiaryId'
     */
    @Test
    void beneficiaryIdTest() {
        // TODO: test beneficiaryId
    }

    /**
     * Test the property 'beneficiaryName'
     */
    @Test
    void beneficiaryNameTest() {
        // TODO: test beneficiaryName
    }

    /**
     * Test the property 'endToEndId'
     */
    @Test
    void endToEndIdTest() {
        // TODO: test endToEndId
    }

    /**
     * Test the property 'reasonCode'
     */
    @Test
    void reasonCodeTest() {
        // TODO: test reasonCode
    }

    /**
     * Test the property 'reasonDescription'
     */
    @Test
    void reasonDescriptionTest() {
        // TODO: test reasonDescription
    }

    /**
     * Test the property 'payoutRefundId'
     */
    @Test
    void payoutRefundIdTest() {
        // TODO: test payoutRefundId
    }

    /**
     * Test the property 'transferId'
     */
    @Test
    void transferIdTest() {
        // TODO: test transferId
    }

    /**
     * Test the property 'transferTag'
     */
    @Test
    void transferTagTest() {
        // TODO: test transferTag
    }

    /**
     * Test the property 'creditorFirstName'
     */
    @Test
    void creditorFirstNameTest() {
        // TODO: test creditorFirstName
    }

    /**
     * Test the property 'creditorLastName'
     */
    @Test
    void creditorLastNameTest() {
        // TODO: test creditorLastName
    }

    /**
     * Test the property 'creditorLegalName'
     */
    @Test
    void creditorLegalNameTest() {
        // TODO: test creditorLegalName
    }

    /**
     * Test the property 'debtorWalletId'
     */
    @Test
    void debtorWalletIdTest() {
        // TODO: test debtorWalletId
    }

    /**
     * Test the property 'debtorFirstName'
     */
    @Test
    void debtorFirstNameTest() {
        // TODO: test debtorFirstName
    }

    /**
     * Test the property 'debtorLastName'
     */
    @Test
    void debtorLastNameTest() {
        // TODO: test debtorLastName
    }

    /**
     * Test the property 'debtorLegalName'
     */
    @Test
    void debtorLegalNameTest() {
        // TODO: test debtorLegalName
    }

}
