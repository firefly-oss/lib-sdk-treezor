/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor;

import com.sdk.treezor.auth.OAuth;

/**
 * Configuration class for the Treezor SDK.
 * This class allows preconfiguration of all the information needed to interact with the Treezor API.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class Configuration {
    private static ApiClient defaultApiClient;

    private String baseUrl = "https://baseURL.co";
    private String clientId;
    private String clientSecret;
    private String accessToken;

    /**
     * Constructor for Configuration.
     */
    public Configuration() {
        // Default constructor
    }

    /**
     * Constructor for Configuration with baseUrl.
     * 
     * @param baseUrl The base URL for the API
     */
    public Configuration(String baseUrl) {
        this.baseUrl = baseUrl;
    }

    /**
     * Constructor for Configuration with all parameters.
     * 
     * @param baseUrl The base URL for the API
     * @param clientId The client ID for OAuth2 authentication
     * @param clientSecret The client secret for OAuth2 authentication
     */
    public Configuration(String baseUrl, String clientId, String clientSecret) {
        this.baseUrl = baseUrl;
        this.clientId = clientId;
        this.clientSecret = clientSecret;
    }

    /**
     * Get the default API client, which will be used when creating API instances without providing an API client instance.
     * 
     * @return The default API client
     */
    public static ApiClient getDefaultApiClient() {
        if (defaultApiClient == null) {
            defaultApiClient = new ApiClient();
        }
        return defaultApiClient;
    }

    /**
     * Set the default API client.
     * 
     * @param apiClient An instance of API client
     */
    public static void setDefaultApiClient(ApiClient apiClient) {
        defaultApiClient = apiClient;
    }

    /**
     * Create a new ApiClient instance with the current configuration.
     * 
     * @return A new ApiClient instance
     */
    public ApiClient createApiClient() {
        ApiClient apiClient = new ApiClient(this);
        return apiClient;
    }

    /**
     * Create a new ApiClient instance and set it as the default.
     * 
     * @return The created ApiClient instance
     */
    public ApiClient createDefaultApiClient() {
        ApiClient apiClient = createApiClient();
        setDefaultApiClient(apiClient);
        return apiClient;
    }

    /**
     * Get the base URL.
     * 
     * @return The base URL
     */
    public String getBaseUrl() {
        return baseUrl;
    }

    /**
     * Set the base URL.
     * 
     * @param baseUrl The base URL
     * @return This Configuration instance
     */
    public Configuration setBaseUrl(String baseUrl) {
        this.baseUrl = baseUrl;
        return this;
    }

    /**
     * Get the client ID.
     * 
     * @return The client ID
     */
    public String getClientId() {
        return clientId;
    }

    /**
     * Set the client ID.
     * 
     * @param clientId The client ID
     * @return This Configuration instance
     */
    public Configuration setClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Get the client secret.
     * 
     * @return The client secret
     */
    public String getClientSecret() {
        return clientSecret;
    }

    /**
     * Set the client secret.
     * 
     * @param clientSecret The client secret
     * @return This Configuration instance
     */
    public Configuration setClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }

    /**
     * Get the access token.
     * 
     * @return The access token
     */
    public String getAccessToken() {
        return accessToken;
    }

    /**
     * Set the access token.
     * 
     * @param accessToken The access token
     * @return This Configuration instance
     */
    public Configuration setAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
}
