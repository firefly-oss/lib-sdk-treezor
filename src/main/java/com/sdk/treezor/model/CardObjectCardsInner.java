/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sdk.treezor.model.CardObjectCardsInnerRestrictionGroupLimitsInner;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CardObjectCardsInner
 */
@JsonPropertyOrder({
  CardObjectCardsInner.JSON_PROPERTY_CARD_ID,
  CardObjectCardsInner.JSON_PROPERTY_USER_ID,
  CardObjectCardsInner.JSON_PROPERTY_WALLET_ID,
  CardObjectCardsInner.JSON_PROPERTY_WALLET_CARDTRANSACTION_ID,
  CardObjectCardsInner.JSON_PROPERTY_MCC_RESTRICTION_GROUP_ID,
  CardObjectCardsInner.JSON_PROPERTY_MERCHANT_RESTRICTION_GROUP_ID,
  CardObjectCardsInner.JSON_PROPERTY_COUNTRY_RESTRICTION_GROUP_ID,
  CardObjectCardsInner.JSON_PROPERTY_PUBLIC_TOKEN,
  CardObjectCardsInner.JSON_PROPERTY_CARD_TAG,
  CardObjectCardsInner.JSON_PROPERTY_STATUS_CODE,
  CardObjectCardsInner.JSON_PROPERTY_IS_LIVE,
  CardObjectCardsInner.JSON_PROPERTY_PIN_TRY_EXCEEDS,
  CardObjectCardsInner.JSON_PROPERTY_MASKED_PAN,
  CardObjectCardsInner.JSON_PROPERTY_EMBOSSED_NAME,
  CardObjectCardsInner.JSON_PROPERTY_EXPIRY_DATE,
  CardObjectCardsInner.JSON_PROPERTY_C_V_V,
  CardObjectCardsInner.JSON_PROPERTY_START_DATE,
  CardObjectCardsInner.JSON_PROPERTY_END_DATE,
  CardObjectCardsInner.JSON_PROPERTY_COUNTRY_CODE,
  CardObjectCardsInner.JSON_PROPERTY_CURRENCY_CODE,
  CardObjectCardsInner.JSON_PROPERTY_LANG,
  CardObjectCardsInner.JSON_PROPERTY_DELIVERY_TITLE,
  CardObjectCardsInner.JSON_PROPERTY_DELIVERY_LASTNAME,
  CardObjectCardsInner.JSON_PROPERTY_DELIVERY_FIRSTNAME,
  CardObjectCardsInner.JSON_PROPERTY_DELIVERY_ADDRESS1,
  CardObjectCardsInner.JSON_PROPERTY_DELIVERY_ADDRESS2,
  CardObjectCardsInner.JSON_PROPERTY_DELIVERY_ADDRESS3,
  CardObjectCardsInner.JSON_PROPERTY_DELIVERY_CITY,
  CardObjectCardsInner.JSON_PROPERTY_DELIVERY_POSTCODE,
  CardObjectCardsInner.JSON_PROPERTY_DELIVERY_COUNTRY,
  CardObjectCardsInner.JSON_PROPERTY_MOBILE_SENT,
  CardObjectCardsInner.JSON_PROPERTY_LIMITS_GROUP,
  CardObjectCardsInner.JSON_PROPERTY_PERMS_GROUP,
  CardObjectCardsInner.JSON_PROPERTY_CARD_DESIGN,
  CardObjectCardsInner.JSON_PROPERTY_VIRTUAL_CONVERTED,
  CardObjectCardsInner.JSON_PROPERTY_PHYSICAL,
  CardObjectCardsInner.JSON_PROPERTY_OPTION_ATM,
  CardObjectCardsInner.JSON_PROPERTY_OPTION_FOREIGN,
  CardObjectCardsInner.JSON_PROPERTY_OPTION_ONLINE,
  CardObjectCardsInner.JSON_PROPERTY_OPTION_NFC,
  CardObjectCardsInner.JSON_PROPERTY_LIMIT_ATM_YEAR,
  CardObjectCardsInner.JSON_PROPERTY_LIMIT_ATM_MONTH,
  CardObjectCardsInner.JSON_PROPERTY_LIMIT_ATM_WEEK,
  CardObjectCardsInner.JSON_PROPERTY_LIMIT_ATM_DAY,
  CardObjectCardsInner.JSON_PROPERTY_LIMIT_ATM_ALL,
  CardObjectCardsInner.JSON_PROPERTY_LIMIT_PAYMENT_YEAR,
  CardObjectCardsInner.JSON_PROPERTY_LIMIT_PAYMENT_MONTH,
  CardObjectCardsInner.JSON_PROPERTY_LIMIT_PAYMENT_WEEK,
  CardObjectCardsInner.JSON_PROPERTY_LIMIT_PAYMENT_DAY,
  CardObjectCardsInner.JSON_PROPERTY_LIMIT_PAYMENT_ALL,
  CardObjectCardsInner.JSON_PROPERTY_PAYMENT_DAILY_LIMIT,
  CardObjectCardsInner.JSON_PROPERTY_TOTAL_ATM_YEAR,
  CardObjectCardsInner.JSON_PROPERTY_TOTAL_ATM_MONTH,
  CardObjectCardsInner.JSON_PROPERTY_TOTAL_ATM_WEEK,
  CardObjectCardsInner.JSON_PROPERTY_TOTAL_ATM_DAY,
  CardObjectCardsInner.JSON_PROPERTY_TOTAL_ATM_ALL,
  CardObjectCardsInner.JSON_PROPERTY_TOTAL_PAYMENT_YEAR,
  CardObjectCardsInner.JSON_PROPERTY_TOTAL_PAYMENT_MONTH,
  CardObjectCardsInner.JSON_PROPERTY_TOTAL_PAYMENT_WEEK,
  CardObjectCardsInner.JSON_PROPERTY_TOTAL_PAYMENT_DAY,
  CardObjectCardsInner.JSON_PROPERTY_TOTAL_PAYMENT_ALL,
  CardObjectCardsInner.JSON_PROPERTY_CREATED_BY,
  CardObjectCardsInner.JSON_PROPERTY_CREATED_DATE,
  CardObjectCardsInner.JSON_PROPERTY_MODIFIED_BY,
  CardObjectCardsInner.JSON_PROPERTY_MODIFIED_DATE,
  CardObjectCardsInner.JSON_PROPERTY_TOTAL_ROWS,
  CardObjectCardsInner.JSON_PROPERTY_DESIGN_CODE,
  CardObjectCardsInner.JSON_PROPERTY_CARD_LANGUAGES,
  CardObjectCardsInner.JSON_PROPERTY_EVENT_NAME,
  CardObjectCardsInner.JSON_PROPERTY_EVENT_ALIAS,
  CardObjectCardsInner.JSON_PROPERTY_RESTRICTION_GROUP_LIMITS,
  CardObjectCardsInner.JSON_PROPERTY_CANCELLATION_NUMBER,
  CardObjectCardsInner.JSON_PROPERTY_METADATA,
  CardObjectCardsInner.JSON_PROPERTY_RENEWAL_DATE,
  CardObjectCardsInner.JSON_PROPERTY_RENEWAL_TYPE,
  CardObjectCardsInner.JSON_PROPERTY_ORIGINAL_CARD_ID,
  CardObjectCardsInner.JSON_PROPERTY_LOGO_ID,
  CardObjectCardsInner.JSON_PROPERTY_LOGO_BACK_ID,
  CardObjectCardsInner.JSON_PROPERTY_PACKAGE_ID,
  CardObjectCardsInner.JSON_PROPERTY_CUSTOMIZED_INFO,
  CardObjectCardsInner.JSON_PROPERTY_LETTER_CUSTOMIZED_INFO,
  CardObjectCardsInner.JSON_PROPERTY_FREE_CUSTOMIZED_INFO,
  CardObjectCardsInner.JSON_PROPERTY_DELIVERY_METHOD,
  CardObjectCardsInner.JSON_PROPERTY_PIN_MAILER,
  CardObjectCardsInner.JSON_PROPERTY_BATCH_DELIVERY_ID,
  CardObjectCardsInner.JSON_PROPERTY_SEND_TO_PARENT
})
@JsonTypeName("CardObject_cards_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class CardObjectCardsInner {
  public static final String JSON_PROPERTY_CARD_ID = "cardId";
  @javax.annotation.Nullable
  private Integer cardId;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  @javax.annotation.Nullable
  private Integer userId;

  public static final String JSON_PROPERTY_WALLET_ID = "walletId";
  @javax.annotation.Nullable
  private Integer walletId;

  public static final String JSON_PROPERTY_WALLET_CARDTRANSACTION_ID = "walletCardtransactionId";
  @javax.annotation.Nullable
  private Integer walletCardtransactionId;

  public static final String JSON_PROPERTY_MCC_RESTRICTION_GROUP_ID = "mccRestrictionGroupId";
  @javax.annotation.Nullable
  private JsonNullable<Integer> mccRestrictionGroupId = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_MERCHANT_RESTRICTION_GROUP_ID = "merchantRestrictionGroupId";
  @javax.annotation.Nullable
  private JsonNullable<Integer> merchantRestrictionGroupId = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_COUNTRY_RESTRICTION_GROUP_ID = "countryRestrictionGroupId";
  @javax.annotation.Nullable
  private JsonNullable<Integer> countryRestrictionGroupId = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_PUBLIC_TOKEN = "publicToken";
  @javax.annotation.Nullable
  private String publicToken;

  public static final String JSON_PROPERTY_CARD_TAG = "cardTag";
  @javax.annotation.Nullable
  private String cardTag;

  /**
   * The plaintext value of the [Card status](/guide/cards/modification.html#card-status). 
   */
  public enum StatusCodeEnum {
    DESTROYED(String.valueOf("DESTROYED")),
    
    EXPIRED(String.valueOf("EXPIRED")),
    
    LOCK_INTERNAL(String.valueOf("LOCK_INTERNAL")),
    
    LOCK(String.valueOf("LOCK")),
    
    LOST(String.valueOf("LOST")),
    
    STOLEN(String.valueOf("STOLEN")),
    
    UNLOCK(String.valueOf("UNLOCK"));

    private String value;

    StatusCodeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusCodeEnum fromValue(String value) {
      for (StatusCodeEnum b : StatusCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS_CODE = "statusCode";
  @javax.annotation.Nullable
  private StatusCodeEnum statusCode;

  /**
   * Whether the card is active. Set to &#x60;1&#x60; once activated. See [Activation](/guide/cards/creation.html#activation) for more information. 
   */
  public enum IsLiveEnum {
    NUMBER_0(Integer.valueOf(0)),
    
    NUMBER_1(Integer.valueOf(1));

    private Integer value;

    IsLiveEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IsLiveEnum fromValue(Integer value) {
      for (IsLiveEnum b : IsLiveEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_IS_LIVE = "isLive";
  @javax.annotation.Nullable
  private IsLiveEnum isLive;

  /**
   * Whether the Card is locked because the cardholder entered 3 erroneous PIN codes in a row. Set to &#x60;1&#x60; when the card is PIN-locked.   See [PIN Unlock](/guide/cards/modification.html#pin-unlock) for more information. 
   */
  public enum PinTryExceedsEnum {
    NUMBER_0(Integer.valueOf(0)),
    
    NUMBER_1(Integer.valueOf(1));

    private Integer value;

    PinTryExceedsEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PinTryExceedsEnum fromValue(Integer value) {
      for (PinTryExceedsEnum b : PinTryExceedsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PIN_TRY_EXCEEDS = "pinTryExceeds";
  @javax.annotation.Nullable
  private PinTryExceedsEnum pinTryExceeds;

  public static final String JSON_PROPERTY_MASKED_PAN = "maskedPan";
  @javax.annotation.Nullable
  private String maskedPan;

  public static final String JSON_PROPERTY_EMBOSSED_NAME = "embossedName";
  @javax.annotation.Nullable
  private String embossedName;

  public static final String JSON_PROPERTY_EXPIRY_DATE = "expiryDate";
  @javax.annotation.Nullable
  private String expiryDate;

  public static final String JSON_PROPERTY_C_V_V = "CVV";
  @javax.annotation.Nullable
  private String CVV;

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  @javax.annotation.Nullable
  private String startDate;

  public static final String JSON_PROPERTY_END_DATE = "endDate";
  @javax.annotation.Nullable
  private String endDate;

  public static final String JSON_PROPERTY_COUNTRY_CODE = "countryCode";
  @javax.annotation.Nullable
  private String countryCode;

  public static final String JSON_PROPERTY_CURRENCY_CODE = "currencyCode";
  @javax.annotation.Nullable
  private String currencyCode;

  public static final String JSON_PROPERTY_LANG = "lang";
  @javax.annotation.Nullable
  private String lang;

  public static final String JSON_PROPERTY_DELIVERY_TITLE = "deliveryTitle";
  @javax.annotation.Nullable
  private String deliveryTitle;

  public static final String JSON_PROPERTY_DELIVERY_LASTNAME = "deliveryLastname";
  @javax.annotation.Nullable
  private String deliveryLastname;

  public static final String JSON_PROPERTY_DELIVERY_FIRSTNAME = "deliveryFirstname";
  @javax.annotation.Nullable
  private String deliveryFirstname;

  public static final String JSON_PROPERTY_DELIVERY_ADDRESS1 = "deliveryAddress1";
  @javax.annotation.Nullable
  private String deliveryAddress1;

  public static final String JSON_PROPERTY_DELIVERY_ADDRESS2 = "deliveryAddress2";
  @javax.annotation.Nullable
  private String deliveryAddress2;

  public static final String JSON_PROPERTY_DELIVERY_ADDRESS3 = "deliveryAddress3";
  @javax.annotation.Nullable
  private String deliveryAddress3;

  public static final String JSON_PROPERTY_DELIVERY_CITY = "deliveryCity";
  @javax.annotation.Nullable
  private String deliveryCity;

  public static final String JSON_PROPERTY_DELIVERY_POSTCODE = "deliveryPostcode";
  @javax.annotation.Nullable
  private String deliveryPostcode;

  public static final String JSON_PROPERTY_DELIVERY_COUNTRY = "deliveryCountry";
  @javax.annotation.Nullable
  private String deliveryCountry;

  public static final String JSON_PROPERTY_MOBILE_SENT = "mobileSent";
  @javax.annotation.Nullable
  private String mobileSent;

  public static final String JSON_PROPERTY_LIMITS_GROUP = "limitsGroup";
  @javax.annotation.Nullable
  private String limitsGroup;

  /**
   * A code for a [preset of permissions](/guide/cards/restrictions-limits.html#options-permission-groups). It indicates whether the card main options (contactless, online payments, withdrawals, and international payments) are activated or not. 
   */
  public enum PermsGroupEnum {
    TRZ_CU_001(String.valueOf("TRZ-CU-001")),
    
    TRZ_CU_002(String.valueOf("TRZ-CU-002")),
    
    TRZ_CU_003(String.valueOf("TRZ-CU-003")),
    
    TRZ_CU_004(String.valueOf("TRZ-CU-004")),
    
    TRZ_CU_005(String.valueOf("TRZ-CU-005")),
    
    TRZ_CU_006(String.valueOf("TRZ-CU-006")),
    
    TRZ_CU_007(String.valueOf("TRZ-CU-007")),
    
    TRZ_CU_008(String.valueOf("TRZ-CU-008")),
    
    TRZ_CU_009(String.valueOf("TRZ-CU-009")),
    
    TRZ_CU_010(String.valueOf("TRZ-CU-010")),
    
    TRZ_CU_011(String.valueOf("TRZ-CU-011")),
    
    TRZ_CU_012(String.valueOf("TRZ-CU-012")),
    
    TRZ_CU_013(String.valueOf("TRZ-CU-013")),
    
    TRZ_CU_014(String.valueOf("TRZ-CU-014")),
    
    TRZ_CU_015(String.valueOf("TRZ-CU-015")),
    
    TRZ_CU_016(String.valueOf("TRZ-CU-016"));

    private String value;

    PermsGroupEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PermsGroupEnum fromValue(String value) {
      for (PermsGroupEnum b : PermsGroupEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PERMS_GROUP = "permsGroup";
  @javax.annotation.Nullable
  private PermsGroupEnum permsGroup;

  public static final String JSON_PROPERTY_CARD_DESIGN = "cardDesign";
  @javax.annotation.Nullable
  private String cardDesign;

  /**
   * Whether or not the card is a Virtual Card that has been converted into a Physical Card. Values can be: * &#x60;1&#x60; – Physical card converted from a virtual card * &#x60;0&#x60; – Not converted, virtual card only 
   */
  public enum VirtualConvertedEnum {
    NUMBER_0(Integer.valueOf(0)),
    
    NUMBER_1(Integer.valueOf(1));

    private Integer value;

    VirtualConvertedEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VirtualConvertedEnum fromValue(Integer value) {
      for (VirtualConvertedEnum b : VirtualConvertedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VIRTUAL_CONVERTED = "virtualConverted";
  @javax.annotation.Nullable
  private VirtualConvertedEnum virtualConverted;

  public static final String JSON_PROPERTY_PHYSICAL = "physical";
  @javax.annotation.Nullable
  private Integer physical;

  /**
   * Whether the card is usable on ATMs (withdrawal). See [Options &amp; Permission groups](/guide/cards/restrictions-limits.html#options-permission-groups) for more information. 
   */
  public enum OptionAtmEnum {
    NUMBER_0(Integer.valueOf(0)),
    
    NUMBER_1(Integer.valueOf(1));

    private Integer value;

    OptionAtmEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OptionAtmEnum fromValue(Integer value) {
      for (OptionAtmEnum b : OptionAtmEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OPTION_ATM = "optionAtm";
  @javax.annotation.Nullable
  private OptionAtmEnum optionAtm;

  /**
   * Whether the card is usable abroad. See [Options &amp; Permission groups](/guide/cards/restrictions-limits.html#options-permission-groups) for more information. 
   */
  public enum OptionForeignEnum {
    NUMBER_0(Integer.valueOf(0)),
    
    NUMBER_1(Integer.valueOf(1));

    private Integer value;

    OptionForeignEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OptionForeignEnum fromValue(Integer value) {
      for (OptionForeignEnum b : OptionForeignEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OPTION_FOREIGN = "optionForeign";
  @javax.annotation.Nullable
  private OptionForeignEnum optionForeign;

  /**
   * Whether the card is usable online. See [Options &amp; Permission groups](/guide/cards/restrictions-limits.html#options-permission-groups) for more information. 
   */
  public enum OptionOnlineEnum {
    NUMBER_0(Integer.valueOf(0)),
    
    NUMBER_1(Integer.valueOf(1));

    private Integer value;

    OptionOnlineEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OptionOnlineEnum fromValue(Integer value) {
      for (OptionOnlineEnum b : OptionOnlineEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OPTION_ONLINE = "optionOnline";
  @javax.annotation.Nullable
  private OptionOnlineEnum optionOnline;

  /**
   * Whether the card can be used for contactless payments. See [Options &amp; Permission groups](/guide/cards/restrictions-limits.html#options-permission-groups) for more information. 
   */
  public enum OptionNfcEnum {
    NUMBER_0(Integer.valueOf(0)),
    
    NUMBER_1(Integer.valueOf(1));

    private Integer value;

    OptionNfcEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OptionNfcEnum fromValue(Integer value) {
      for (OptionNfcEnum b : OptionNfcEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OPTION_NFC = "optionNfc";
  @javax.annotation.Nullable
  private OptionNfcEnum optionNfc;

  public static final String JSON_PROPERTY_LIMIT_ATM_YEAR = "limitAtmYear";
  @javax.annotation.Nullable
  private Integer limitAtmYear;

  public static final String JSON_PROPERTY_LIMIT_ATM_MONTH = "limitAtmMonth";
  @javax.annotation.Nullable
  private Integer limitAtmMonth;

  public static final String JSON_PROPERTY_LIMIT_ATM_WEEK = "limitAtmWeek";
  @javax.annotation.Nullable
  private Integer limitAtmWeek;

  public static final String JSON_PROPERTY_LIMIT_ATM_DAY = "limitAtmDay";
  @javax.annotation.Nullable
  private Integer limitAtmDay;

  public static final String JSON_PROPERTY_LIMIT_ATM_ALL = "limitAtmAll";
  @javax.annotation.Nullable
  private Integer limitAtmAll;

  public static final String JSON_PROPERTY_LIMIT_PAYMENT_YEAR = "limitPaymentYear";
  @javax.annotation.Nullable
  private Integer limitPaymentYear;

  public static final String JSON_PROPERTY_LIMIT_PAYMENT_MONTH = "limitPaymentMonth";
  @javax.annotation.Nullable
  private Integer limitPaymentMonth;

  public static final String JSON_PROPERTY_LIMIT_PAYMENT_WEEK = "limitPaymentWeek";
  @javax.annotation.Nullable
  private Integer limitPaymentWeek;

  public static final String JSON_PROPERTY_LIMIT_PAYMENT_DAY = "limitPaymentDay";
  @javax.annotation.Nullable
  private Integer limitPaymentDay;

  public static final String JSON_PROPERTY_LIMIT_PAYMENT_ALL = "limitPaymentAll";
  @javax.annotation.Nullable
  private Integer limitPaymentAll;

  public static final String JSON_PROPERTY_PAYMENT_DAILY_LIMIT = "paymentDailyLimit";
  @javax.annotation.Nullable
  private Float paymentDailyLimit;

  public static final String JSON_PROPERTY_TOTAL_ATM_YEAR = "totalAtmYear";
  @javax.annotation.Nullable
  private Integer totalAtmYear;

  public static final String JSON_PROPERTY_TOTAL_ATM_MONTH = "totalAtmMonth";
  @javax.annotation.Nullable
  private Integer totalAtmMonth;

  public static final String JSON_PROPERTY_TOTAL_ATM_WEEK = "totalAtmWeek";
  @javax.annotation.Nullable
  private Integer totalAtmWeek;

  public static final String JSON_PROPERTY_TOTAL_ATM_DAY = "totalAtmDay";
  @javax.annotation.Nullable
  private Integer totalAtmDay;

  public static final String JSON_PROPERTY_TOTAL_ATM_ALL = "totalAtmAll";
  @javax.annotation.Nullable
  private Integer totalAtmAll;

  public static final String JSON_PROPERTY_TOTAL_PAYMENT_YEAR = "totalPaymentYear";
  @javax.annotation.Nullable
  private Integer totalPaymentYear;

  public static final String JSON_PROPERTY_TOTAL_PAYMENT_MONTH = "totalPaymentMonth";
  @javax.annotation.Nullable
  private Integer totalPaymentMonth;

  public static final String JSON_PROPERTY_TOTAL_PAYMENT_WEEK = "totalPaymentWeek";
  @javax.annotation.Nullable
  private Integer totalPaymentWeek;

  public static final String JSON_PROPERTY_TOTAL_PAYMENT_DAY = "totalPaymentDay";
  @javax.annotation.Nullable
  private Integer totalPaymentDay;

  public static final String JSON_PROPERTY_TOTAL_PAYMENT_ALL = "totalPaymentAll";
  @javax.annotation.Nullable
  private Integer totalPaymentAll;

  public static final String JSON_PROPERTY_CREATED_BY = "createdBy";
  @javax.annotation.Nullable
  private Integer createdBy;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  @javax.annotation.Nullable
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_MODIFIED_BY = "modifiedBy";
  @javax.annotation.Nullable
  private Integer modifiedBy;

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  @javax.annotation.Nullable
  private OffsetDateTime modifiedDate;

  public static final String JSON_PROPERTY_TOTAL_ROWS = "totalRows";
  @javax.annotation.Nullable
  private Integer totalRows;

  public static final String JSON_PROPERTY_DESIGN_CODE = "designCode";
  @javax.annotation.Nullable
  private String designCode;

  public static final String JSON_PROPERTY_CARD_LANGUAGES = "cardLanguages";
  @javax.annotation.Nullable
  private String cardLanguages;

  public static final String JSON_PROPERTY_EVENT_NAME = "eventName";
  @javax.annotation.Nullable
  private String eventName;

  public static final String JSON_PROPERTY_EVENT_ALIAS = "eventAlias";
  @javax.annotation.Nullable
  private String eventAlias;

  public static final String JSON_PROPERTY_RESTRICTION_GROUP_LIMITS = "restrictionGroupLimits";
  @javax.annotation.Nullable
  private List<CardObjectCardsInnerRestrictionGroupLimitsInner> restrictionGroupLimits = new ArrayList<>();

  public static final String JSON_PROPERTY_CANCELLATION_NUMBER = "cancellationNumber";
  @javax.annotation.Nullable
  private String cancellationNumber;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  @javax.annotation.Nullable
  private JsonNullable<String> metadata = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RENEWAL_DATE = "renewalDate";
  @javax.annotation.Nullable
  private JsonNullable<String> renewalDate = JsonNullable.<String>undefined();

  /**
   * Indicates how the Card is to be renewed. &#x60;A&#x60; for automatic renewal, &#x60;N&#x60; for non-automatic renewal. 
   */
  public enum RenewalTypeEnum {
    A(String.valueOf("A")),
    
    N(String.valueOf("N"));

    private String value;

    RenewalTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RenewalTypeEnum fromValue(String value) {
      for (RenewalTypeEnum b : RenewalTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_RENEWAL_TYPE = "renewalType";
  @javax.annotation.Nullable
  private JsonNullable<RenewalTypeEnum> renewalType = JsonNullable.<RenewalTypeEnum>undefined();

  public static final String JSON_PROPERTY_ORIGINAL_CARD_ID = "originalCardId";
  @javax.annotation.Nullable
  private JsonNullable<Integer> originalCardId = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_LOGO_ID = "logoId";
  @javax.annotation.Nullable
  private String logoId;

  public static final String JSON_PROPERTY_LOGO_BACK_ID = "logoBackId";
  @javax.annotation.Nullable
  private String logoBackId;

  public static final String JSON_PROPERTY_PACKAGE_ID = "packageId";
  @javax.annotation.Nullable
  private String packageId;

  public static final String JSON_PROPERTY_CUSTOMIZED_INFO = "customizedInfo";
  @javax.annotation.Nullable
  private String customizedInfo;

  public static final String JSON_PROPERTY_LETTER_CUSTOMIZED_INFO = "letterCustomizedInfo";
  @javax.annotation.Nullable
  private String letterCustomizedInfo;

  public static final String JSON_PROPERTY_FREE_CUSTOMIZED_INFO = "freeCustomizedInfo";
  @javax.annotation.Nullable
  private String freeCustomizedInfo;

  public static final String JSON_PROPERTY_DELIVERY_METHOD = "deliveryMethod";
  @javax.annotation.Nullable
  private JsonNullable<Integer> deliveryMethod = JsonNullable.<Integer>undefined();

  /**
   * Whether the card manufacturer to send the card PIN code by letter.
   */
  public enum PinMailerEnum {
    NUMBER_0(Integer.valueOf(0)),
    
    NUMBER_1(Integer.valueOf(1));

    private Integer value;

    PinMailerEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PinMailerEnum fromValue(Integer value) {
      for (PinMailerEnum b : PinMailerEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_PIN_MAILER = "pinMailer";
  @javax.annotation.Nullable
  private JsonNullable<PinMailerEnum> pinMailer = JsonNullable.<PinMailerEnum>undefined();

  public static final String JSON_PROPERTY_BATCH_DELIVERY_ID = "batchDeliveryId";
  @javax.annotation.Nullable
  private JsonNullable<Integer> batchDeliveryId = JsonNullable.<Integer>undefined();

  /**
   * Whether the card should be sent to the cardholder&#39;s Parent User.
   */
  public enum SendToParentEnum {
    NUMBER_0(Integer.valueOf(0)),
    
    NUMBER_1(Integer.valueOf(1));

    private Integer value;

    SendToParentEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SendToParentEnum fromValue(Integer value) {
      for (SendToParentEnum b : SendToParentEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SEND_TO_PARENT = "sendToParent";
  @javax.annotation.Nullable
  private SendToParentEnum sendToParent;

  public CardObjectCardsInner() {
  }

  public CardObjectCardsInner cardId(@javax.annotation.Nullable Integer cardId) {
    
    this.cardId = cardId;
    return this;
  }

  /**
   * The unique identifier of the card.
   * @return cardId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCardId() {
    return cardId;
  }


  @JsonProperty(JSON_PROPERTY_CARD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardId(@javax.annotation.Nullable Integer cardId) {
    this.cardId = cardId;
  }

  public CardObjectCardsInner userId(@javax.annotation.Nullable Integer userId) {
    
    this.userId = userId;
    return this;
  }

  /**
   * The unique identifier of the cardholder.
   * @return userId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
  }

  public CardObjectCardsInner walletId(@javax.annotation.Nullable Integer walletId) {
    
    this.walletId = walletId;
    return this;
  }

  /**
   * The unique identifier of the Wallet the card is attached to.
   * @return walletId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWalletId() {
    return walletId;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWalletId(@javax.annotation.Nullable Integer walletId) {
    this.walletId = walletId;
  }

  public CardObjectCardsInner walletCardtransactionId(@javax.annotation.Nullable Integer walletCardtransactionId) {
    
    this.walletCardtransactionId = walletCardtransactionId;
    return this;
  }

  /**
   * The card technical wallet, for Treezor usage only. See [Card Transaction Wallet](/guide/wallets/introduction.html#card-transaction-wallet-type-14-18) for more information. 
   * @return walletCardtransactionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WALLET_CARDTRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWalletCardtransactionId() {
    return walletCardtransactionId;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_CARDTRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWalletCardtransactionId(@javax.annotation.Nullable Integer walletCardtransactionId) {
    this.walletCardtransactionId = walletCardtransactionId;
  }

  public CardObjectCardsInner mccRestrictionGroupId(@javax.annotation.Nullable Integer mccRestrictionGroupId) {
    this.mccRestrictionGroupId = JsonNullable.<Integer>of(mccRestrictionGroupId);
    
    return this;
  }

  /**
   * The merchant category restriction group (&#x60;mccRestrictionGroup&#x60;) applied to the card. 
   * @return mccRestrictionGroupId
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getMccRestrictionGroupId() {
        return mccRestrictionGroupId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MCC_RESTRICTION_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getMccRestrictionGroupId_JsonNullable() {
    return mccRestrictionGroupId;
  }
  
  @JsonProperty(JSON_PROPERTY_MCC_RESTRICTION_GROUP_ID)
  public void setMccRestrictionGroupId_JsonNullable(JsonNullable<Integer> mccRestrictionGroupId) {
    this.mccRestrictionGroupId = mccRestrictionGroupId;
  }

  public void setMccRestrictionGroupId(@javax.annotation.Nullable Integer mccRestrictionGroupId) {
    this.mccRestrictionGroupId = JsonNullable.<Integer>of(mccRestrictionGroupId);
  }

  public CardObjectCardsInner merchantRestrictionGroupId(@javax.annotation.Nullable Integer merchantRestrictionGroupId) {
    this.merchantRestrictionGroupId = JsonNullable.<Integer>of(merchantRestrictionGroupId);
    
    return this;
  }

  /**
   * The merchant Id restriction group (&#x60;merchantRestrictionGroupId&#x60;) applied to the card. 
   * @return merchantRestrictionGroupId
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getMerchantRestrictionGroupId() {
        return merchantRestrictionGroupId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MERCHANT_RESTRICTION_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getMerchantRestrictionGroupId_JsonNullable() {
    return merchantRestrictionGroupId;
  }
  
  @JsonProperty(JSON_PROPERTY_MERCHANT_RESTRICTION_GROUP_ID)
  public void setMerchantRestrictionGroupId_JsonNullable(JsonNullable<Integer> merchantRestrictionGroupId) {
    this.merchantRestrictionGroupId = merchantRestrictionGroupId;
  }

  public void setMerchantRestrictionGroupId(@javax.annotation.Nullable Integer merchantRestrictionGroupId) {
    this.merchantRestrictionGroupId = JsonNullable.<Integer>of(merchantRestrictionGroupId);
  }

  public CardObjectCardsInner countryRestrictionGroupId(@javax.annotation.Nullable Integer countryRestrictionGroupId) {
    this.countryRestrictionGroupId = JsonNullable.<Integer>of(countryRestrictionGroupId);
    
    return this;
  }

  /**
   * The country restriction group (&#x60;countryRestrictionGroupId&#x60;) applied to the card. 
   * @return countryRestrictionGroupId
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getCountryRestrictionGroupId() {
        return countryRestrictionGroupId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COUNTRY_RESTRICTION_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getCountryRestrictionGroupId_JsonNullable() {
    return countryRestrictionGroupId;
  }
  
  @JsonProperty(JSON_PROPERTY_COUNTRY_RESTRICTION_GROUP_ID)
  public void setCountryRestrictionGroupId_JsonNullable(JsonNullable<Integer> countryRestrictionGroupId) {
    this.countryRestrictionGroupId = countryRestrictionGroupId;
  }

  public void setCountryRestrictionGroupId(@javax.annotation.Nullable Integer countryRestrictionGroupId) {
    this.countryRestrictionGroupId = JsonNullable.<Integer>of(countryRestrictionGroupId);
  }

  public CardObjectCardsInner publicToken(@javax.annotation.Nullable String publicToken) {
    
    this.publicToken = publicToken;
    return this;
  }

  /**
   * The 9-character long string printed on the Card. It can be used to [activate](/guide/cards/creation.html#activation) the card. 
   * @return publicToken
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLIC_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPublicToken() {
    return publicToken;
  }


  @JsonProperty(JSON_PROPERTY_PUBLIC_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublicToken(@javax.annotation.Nullable String publicToken) {
    this.publicToken = publicToken;
  }

  public CardObjectCardsInner cardTag(@javax.annotation.Nullable String cardTag) {
    
    this.cardTag = cardTag;
    return this;
  }

  /**
   * Custom attribute to use as you see fit. Learn more in the [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.    Format: hc characters and &#x60;/&#x60; &#x60;!&#x60; &#x60;-&#x60; &#x60;_&#x60; &#x60;.&#x60; &#x60;*&#x60; &#x60;&#39;&#x60; &#x60;(&#x60; &#x60;)&#x60; 
   * @return cardTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCardTag() {
    return cardTag;
  }


  @JsonProperty(JSON_PROPERTY_CARD_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardTag(@javax.annotation.Nullable String cardTag) {
    this.cardTag = cardTag;
  }

  public CardObjectCardsInner statusCode(@javax.annotation.Nullable StatusCodeEnum statusCode) {
    
    this.statusCode = statusCode;
    return this;
  }

  /**
   * The plaintext value of the [Card status](/guide/cards/modification.html#card-status). 
   * @return statusCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusCodeEnum getStatusCode() {
    return statusCode;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatusCode(@javax.annotation.Nullable StatusCodeEnum statusCode) {
    this.statusCode = statusCode;
  }

  public CardObjectCardsInner isLive(@javax.annotation.Nullable IsLiveEnum isLive) {
    
    this.isLive = isLive;
    return this;
  }

  /**
   * Whether the card is active. Set to &#x60;1&#x60; once activated. See [Activation](/guide/cards/creation.html#activation) for more information. 
   * @return isLive
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_LIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IsLiveEnum getIsLive() {
    return isLive;
  }


  @JsonProperty(JSON_PROPERTY_IS_LIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsLive(@javax.annotation.Nullable IsLiveEnum isLive) {
    this.isLive = isLive;
  }

  public CardObjectCardsInner pinTryExceeds(@javax.annotation.Nullable PinTryExceedsEnum pinTryExceeds) {
    
    this.pinTryExceeds = pinTryExceeds;
    return this;
  }

  /**
   * Whether the Card is locked because the cardholder entered 3 erroneous PIN codes in a row. Set to &#x60;1&#x60; when the card is PIN-locked.   See [PIN Unlock](/guide/cards/modification.html#pin-unlock) for more information. 
   * @return pinTryExceeds
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PIN_TRY_EXCEEDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PinTryExceedsEnum getPinTryExceeds() {
    return pinTryExceeds;
  }


  @JsonProperty(JSON_PROPERTY_PIN_TRY_EXCEEDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPinTryExceeds(@javax.annotation.Nullable PinTryExceedsEnum pinTryExceeds) {
    this.pinTryExceeds = pinTryExceeds;
  }

  public CardObjectCardsInner maskedPan(@javax.annotation.Nullable String maskedPan) {
    
    this.maskedPan = maskedPan;
    return this;
  }

  /**
   * The [Primary Account Number (PAN)](/guide/overview/glossary.html#primary-account-number-pan) of the card, with the middle numbers redacted for safety. 
   * @return maskedPan
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MASKED_PAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMaskedPan() {
    return maskedPan;
  }


  @JsonProperty(JSON_PROPERTY_MASKED_PAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaskedPan(@javax.annotation.Nullable String maskedPan) {
    this.maskedPan = maskedPan;
  }

  public CardObjectCardsInner embossedName(@javax.annotation.Nullable String embossedName) {
    
    this.embossedName = embossedName;
    return this;
  }

  /**
   * The embossed name of the card. 
   * @return embossedName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMBOSSED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmbossedName() {
    return embossedName;
  }


  @JsonProperty(JSON_PROPERTY_EMBOSSED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmbossedName(@javax.annotation.Nullable String embossedName) {
    this.embossedName = embossedName;
  }

  public CardObjectCardsInner expiryDate(@javax.annotation.Nullable String expiryDate) {
    
    this.expiryDate = expiryDate;
    return this;
  }

  /**
   * The date on which the card expires.  The [&#x60;card.expiryAlert&#x60;](/guide/cards/events.html#structure-of-a-card-expiryalert) webhook is sent a month before the &#x60;expiryDate&#x60; for you to anticipate [Renewal](/guide/cards/renewal.html).  Format: &#x60;YYYY-MM-DD&#x60; 
   * @return expiryDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpiryDate() {
    return expiryDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiryDate(@javax.annotation.Nullable String expiryDate) {
    this.expiryDate = expiryDate;
  }

  public CardObjectCardsInner CVV(@javax.annotation.Nullable String CVV) {
    
    this.CVV = CVV;
    return this;
  }

  /**
   * The verification code of the card. This field is to be deprecated and hence may return a value of &#x60;000&#x60;.   You may retrieve the card CVV by using the [&#x60;/v1/cardimages&#x60;](/api-reference/api-endpoints.html#tag/Cards/getCardImage) request or by migrating to the [PCI DSS-compliant services](/guide/cards/pci-dss.html). 
   * @return CVV
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C_V_V)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCVV() {
    return CVV;
  }


  @JsonProperty(JSON_PROPERTY_C_V_V)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCVV(@javax.annotation.Nullable String CVV) {
    this.CVV = CVV;
  }

  public CardObjectCardsInner startDate(@javax.annotation.Nullable String startDate) {
    
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(@javax.annotation.Nullable String startDate) {
    this.startDate = startDate;
  }

  public CardObjectCardsInner endDate(@javax.annotation.Nullable String endDate) {
    
    this.endDate = endDate;
    return this;
  }

  /**
   * Get endDate
   * @return endDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndDate() {
    return endDate;
  }


  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndDate(@javax.annotation.Nullable String endDate) {
    this.endDate = endDate;
  }

  public CardObjectCardsInner countryCode(@javax.annotation.Nullable String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

  /**
   * Inherited from the cardholder&#39;s country.
   * @return countryCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountryCode() {
    return countryCode;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountryCode(@javax.annotation.Nullable String countryCode) {
    this.countryCode = countryCode;
  }

  public CardObjectCardsInner currencyCode(@javax.annotation.Nullable String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * The currency of the card, in the [ISO 4217](/guide/api-basics/data-format.html#currencies) format.
   * @return currencyCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrencyCode() {
    return currencyCode;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencyCode(@javax.annotation.Nullable String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public CardObjectCardsInner lang(@javax.annotation.Nullable String lang) {
    
    this.lang = lang;
    return this;
  }

  /**
   * Inherited from the cardholder&#39;s &#x60;language&#x60;.
   * @return lang
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LANG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLang() {
    return lang;
  }


  @JsonProperty(JSON_PROPERTY_LANG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLang(@javax.annotation.Nullable String lang) {
    this.lang = lang;
  }

  public CardObjectCardsInner deliveryTitle(@javax.annotation.Nullable String deliveryTitle) {
    
    this.deliveryTitle = deliveryTitle;
    return this;
  }

  /**
   * Get deliveryTitle
   * @return deliveryTitle
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELIVERY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeliveryTitle() {
    return deliveryTitle;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryTitle(@javax.annotation.Nullable String deliveryTitle) {
    this.deliveryTitle = deliveryTitle;
  }

  public CardObjectCardsInner deliveryLastname(@javax.annotation.Nullable String deliveryLastname) {
    
    this.deliveryLastname = deliveryLastname;
    return this;
  }

  /**
   * Get deliveryLastname
   * @return deliveryLastname
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELIVERY_LASTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeliveryLastname() {
    return deliveryLastname;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_LASTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryLastname(@javax.annotation.Nullable String deliveryLastname) {
    this.deliveryLastname = deliveryLastname;
  }

  public CardObjectCardsInner deliveryFirstname(@javax.annotation.Nullable String deliveryFirstname) {
    
    this.deliveryFirstname = deliveryFirstname;
    return this;
  }

  /**
   * Get deliveryFirstname
   * @return deliveryFirstname
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELIVERY_FIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeliveryFirstname() {
    return deliveryFirstname;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_FIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryFirstname(@javax.annotation.Nullable String deliveryFirstname) {
    this.deliveryFirstname = deliveryFirstname;
  }

  public CardObjectCardsInner deliveryAddress1(@javax.annotation.Nullable String deliveryAddress1) {
    
    this.deliveryAddress1 = deliveryAddress1;
    return this;
  }

  /**
   * Get deliveryAddress1
   * @return deliveryAddress1
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELIVERY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeliveryAddress1() {
    return deliveryAddress1;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryAddress1(@javax.annotation.Nullable String deliveryAddress1) {
    this.deliveryAddress1 = deliveryAddress1;
  }

  public CardObjectCardsInner deliveryAddress2(@javax.annotation.Nullable String deliveryAddress2) {
    
    this.deliveryAddress2 = deliveryAddress2;
    return this;
  }

  /**
   * Get deliveryAddress2
   * @return deliveryAddress2
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELIVERY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeliveryAddress2() {
    return deliveryAddress2;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryAddress2(@javax.annotation.Nullable String deliveryAddress2) {
    this.deliveryAddress2 = deliveryAddress2;
  }

  public CardObjectCardsInner deliveryAddress3(@javax.annotation.Nullable String deliveryAddress3) {
    
    this.deliveryAddress3 = deliveryAddress3;
    return this;
  }

  /**
   * Get deliveryAddress3
   * @return deliveryAddress3
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELIVERY_ADDRESS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeliveryAddress3() {
    return deliveryAddress3;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_ADDRESS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryAddress3(@javax.annotation.Nullable String deliveryAddress3) {
    this.deliveryAddress3 = deliveryAddress3;
  }

  public CardObjectCardsInner deliveryCity(@javax.annotation.Nullable String deliveryCity) {
    
    this.deliveryCity = deliveryCity;
    return this;
  }

  /**
   * Get deliveryCity
   * @return deliveryCity
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELIVERY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeliveryCity() {
    return deliveryCity;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryCity(@javax.annotation.Nullable String deliveryCity) {
    this.deliveryCity = deliveryCity;
  }

  public CardObjectCardsInner deliveryPostcode(@javax.annotation.Nullable String deliveryPostcode) {
    
    this.deliveryPostcode = deliveryPostcode;
    return this;
  }

  /**
   * Get deliveryPostcode
   * @return deliveryPostcode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELIVERY_POSTCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeliveryPostcode() {
    return deliveryPostcode;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_POSTCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryPostcode(@javax.annotation.Nullable String deliveryPostcode) {
    this.deliveryPostcode = deliveryPostcode;
  }

  public CardObjectCardsInner deliveryCountry(@javax.annotation.Nullable String deliveryCountry) {
    
    this.deliveryCountry = deliveryCountry;
    return this;
  }

  /**
   * Get deliveryCountry
   * @return deliveryCountry
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELIVERY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeliveryCountry() {
    return deliveryCountry;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryCountry(@javax.annotation.Nullable String deliveryCountry) {
    this.deliveryCountry = deliveryCountry;
  }

  public CardObjectCardsInner mobileSent(@javax.annotation.Nullable String mobileSent) {
    
    this.mobileSent = mobileSent;
    return this;
  }

  /**
   * Inherited from the cardholder&#39;s &#x60;phone&#x60;.
   * @return mobileSent
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MOBILE_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMobileSent() {
    return mobileSent;
  }


  @JsonProperty(JSON_PROPERTY_MOBILE_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMobileSent(@javax.annotation.Nullable String mobileSent) {
    this.mobileSent = mobileSent;
  }

  public CardObjectCardsInner limitsGroup(@javax.annotation.Nullable String limitsGroup) {
    
    this.limitsGroup = limitsGroup;
    return this;
  }

  /**
   * Get limitsGroup
   * @return limitsGroup
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMITS_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLimitsGroup() {
    return limitsGroup;
  }


  @JsonProperty(JSON_PROPERTY_LIMITS_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitsGroup(@javax.annotation.Nullable String limitsGroup) {
    this.limitsGroup = limitsGroup;
  }

  public CardObjectCardsInner permsGroup(@javax.annotation.Nullable PermsGroupEnum permsGroup) {
    
    this.permsGroup = permsGroup;
    return this;
  }

  /**
   * A code for a [preset of permissions](/guide/cards/restrictions-limits.html#options-permission-groups). It indicates whether the card main options (contactless, online payments, withdrawals, and international payments) are activated or not. 
   * @return permsGroup
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERMS_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PermsGroupEnum getPermsGroup() {
    return permsGroup;
  }


  @JsonProperty(JSON_PROPERTY_PERMS_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPermsGroup(@javax.annotation.Nullable PermsGroupEnum permsGroup) {
    this.permsGroup = permsGroup;
  }

  public CardObjectCardsInner cardDesign(@javax.annotation.Nullable String cardDesign) {
    
    this.cardDesign = cardDesign;
    return this;
  }

  /**
   * The &#x60;cardPrint&#x60; identifier, which defines the options and design of the card as part of your [Card Program](introduction.html#card-program). 
   * @return cardDesign
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_DESIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCardDesign() {
    return cardDesign;
  }


  @JsonProperty(JSON_PROPERTY_CARD_DESIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardDesign(@javax.annotation.Nullable String cardDesign) {
    this.cardDesign = cardDesign;
  }

  public CardObjectCardsInner virtualConverted(@javax.annotation.Nullable VirtualConvertedEnum virtualConverted) {
    
    this.virtualConverted = virtualConverted;
    return this;
  }

  /**
   * Whether or not the card is a Virtual Card that has been converted into a Physical Card. Values can be: * &#x60;1&#x60; – Physical card converted from a virtual card * &#x60;0&#x60; – Not converted, virtual card only 
   * @return virtualConverted
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIRTUAL_CONVERTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VirtualConvertedEnum getVirtualConverted() {
    return virtualConverted;
  }


  @JsonProperty(JSON_PROPERTY_VIRTUAL_CONVERTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVirtualConverted(@javax.annotation.Nullable VirtualConvertedEnum virtualConverted) {
    this.virtualConverted = virtualConverted;
  }

  public CardObjectCardsInner physical(@javax.annotation.Nullable Integer physical) {
    
    this.physical = physical;
    return this;
  }

  /**
   * Get physical
   * @return physical
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHYSICAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPhysical() {
    return physical;
  }


  @JsonProperty(JSON_PROPERTY_PHYSICAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhysical(@javax.annotation.Nullable Integer physical) {
    this.physical = physical;
  }

  public CardObjectCardsInner optionAtm(@javax.annotation.Nullable OptionAtmEnum optionAtm) {
    
    this.optionAtm = optionAtm;
    return this;
  }

  /**
   * Whether the card is usable on ATMs (withdrawal). See [Options &amp; Permission groups](/guide/cards/restrictions-limits.html#options-permission-groups) for more information. 
   * @return optionAtm
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTION_ATM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OptionAtmEnum getOptionAtm() {
    return optionAtm;
  }


  @JsonProperty(JSON_PROPERTY_OPTION_ATM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionAtm(@javax.annotation.Nullable OptionAtmEnum optionAtm) {
    this.optionAtm = optionAtm;
  }

  public CardObjectCardsInner optionForeign(@javax.annotation.Nullable OptionForeignEnum optionForeign) {
    
    this.optionForeign = optionForeign;
    return this;
  }

  /**
   * Whether the card is usable abroad. See [Options &amp; Permission groups](/guide/cards/restrictions-limits.html#options-permission-groups) for more information. 
   * @return optionForeign
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTION_FOREIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OptionForeignEnum getOptionForeign() {
    return optionForeign;
  }


  @JsonProperty(JSON_PROPERTY_OPTION_FOREIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionForeign(@javax.annotation.Nullable OptionForeignEnum optionForeign) {
    this.optionForeign = optionForeign;
  }

  public CardObjectCardsInner optionOnline(@javax.annotation.Nullable OptionOnlineEnum optionOnline) {
    
    this.optionOnline = optionOnline;
    return this;
  }

  /**
   * Whether the card is usable online. See [Options &amp; Permission groups](/guide/cards/restrictions-limits.html#options-permission-groups) for more information. 
   * @return optionOnline
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTION_ONLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OptionOnlineEnum getOptionOnline() {
    return optionOnline;
  }


  @JsonProperty(JSON_PROPERTY_OPTION_ONLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionOnline(@javax.annotation.Nullable OptionOnlineEnum optionOnline) {
    this.optionOnline = optionOnline;
  }

  public CardObjectCardsInner optionNfc(@javax.annotation.Nullable OptionNfcEnum optionNfc) {
    
    this.optionNfc = optionNfc;
    return this;
  }

  /**
   * Whether the card can be used for contactless payments. See [Options &amp; Permission groups](/guide/cards/restrictions-limits.html#options-permission-groups) for more information. 
   * @return optionNfc
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTION_NFC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OptionNfcEnum getOptionNfc() {
    return optionNfc;
  }


  @JsonProperty(JSON_PROPERTY_OPTION_NFC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionNfc(@javax.annotation.Nullable OptionNfcEnum optionNfc) {
    this.optionNfc = optionNfc;
  }

  public CardObjectCardsInner limitAtmYear(@javax.annotation.Nullable Integer limitAtmYear) {
    
    this.limitAtmYear = limitAtmYear;
    return this;
  }

  /**
   * The ATM operations limit of the corresponding card for a sliding year.  See [Payment &amp; Withdrawl limits](/guide/cards/restrictions-limits.html#payment-withdrawal-limits) for more information. 
   * @return limitAtmYear
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_ATM_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLimitAtmYear() {
    return limitAtmYear;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_ATM_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitAtmYear(@javax.annotation.Nullable Integer limitAtmYear) {
    this.limitAtmYear = limitAtmYear;
  }

  public CardObjectCardsInner limitAtmMonth(@javax.annotation.Nullable Integer limitAtmMonth) {
    
    this.limitAtmMonth = limitAtmMonth;
    return this;
  }

  /**
   * ATM operations limit of the corresponding card for a sliding month.  See [Payment &amp; Withdrawl limits](/guide/cards/restrictions-limits.html#payment-withdrawal-limits) for more information. 
   * @return limitAtmMonth
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_ATM_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLimitAtmMonth() {
    return limitAtmMonth;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_ATM_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitAtmMonth(@javax.annotation.Nullable Integer limitAtmMonth) {
    this.limitAtmMonth = limitAtmMonth;
  }

  public CardObjectCardsInner limitAtmWeek(@javax.annotation.Nullable Integer limitAtmWeek) {
    
    this.limitAtmWeek = limitAtmWeek;
    return this;
  }

  /**
   * ATM operations limit of the corresponding card for a sliding week.  See [Payment &amp; Withdrawl limits](/guide/cards/restrictions-limits.html#payment-withdrawal-limits) for more information. 
   * @return limitAtmWeek
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_ATM_WEEK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLimitAtmWeek() {
    return limitAtmWeek;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_ATM_WEEK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitAtmWeek(@javax.annotation.Nullable Integer limitAtmWeek) {
    this.limitAtmWeek = limitAtmWeek;
  }

  public CardObjectCardsInner limitAtmDay(@javax.annotation.Nullable Integer limitAtmDay) {
    
    this.limitAtmDay = limitAtmDay;
    return this;
  }

  /**
   * ATM operations limit of the corresponding card for a single day.  See [Payment &amp; Withdrawl limits](/guide/cards/restrictions-limits.html#payment-withdrawal-limits) for more information. 
   * @return limitAtmDay
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_ATM_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLimitAtmDay() {
    return limitAtmDay;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_ATM_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitAtmDay(@javax.annotation.Nullable Integer limitAtmDay) {
    this.limitAtmDay = limitAtmDay;
  }

  public CardObjectCardsInner limitAtmAll(@javax.annotation.Nullable Integer limitAtmAll) {
    
    this.limitAtmAll = limitAtmAll;
    return this;
  }

  /**
   * ATM operations limit of the corresponding card from beginning.  See [Payment &amp; Withdrawl limits](/guide/cards/restrictions-limits.html#payment-withdrawal-limits) for more information. 
   * @return limitAtmAll
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_ATM_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLimitAtmAll() {
    return limitAtmAll;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_ATM_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitAtmAll(@javax.annotation.Nullable Integer limitAtmAll) {
    this.limitAtmAll = limitAtmAll;
  }

  public CardObjectCardsInner limitPaymentYear(@javax.annotation.Nullable Integer limitPaymentYear) {
    
    this.limitPaymentYear = limitPaymentYear;
    return this;
  }

  /**
   * POS operations limit of the corresponding card for a sliding year.  See [Payment &amp; Withdrawl limits](/guide/cards/restrictions-limits.html#payment-withdrawal-limits) for more information. 
   * @return limitPaymentYear
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_PAYMENT_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLimitPaymentYear() {
    return limitPaymentYear;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_PAYMENT_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitPaymentYear(@javax.annotation.Nullable Integer limitPaymentYear) {
    this.limitPaymentYear = limitPaymentYear;
  }

  public CardObjectCardsInner limitPaymentMonth(@javax.annotation.Nullable Integer limitPaymentMonth) {
    
    this.limitPaymentMonth = limitPaymentMonth;
    return this;
  }

  /**
   * POS operations limit of the corresponding card for a sliding month.  See [Payment &amp; Withdrawl limits](/guide/cards/restrictions-limits.html#payment-withdrawal-limits) for more information. 
   * @return limitPaymentMonth
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_PAYMENT_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLimitPaymentMonth() {
    return limitPaymentMonth;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_PAYMENT_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitPaymentMonth(@javax.annotation.Nullable Integer limitPaymentMonth) {
    this.limitPaymentMonth = limitPaymentMonth;
  }

  public CardObjectCardsInner limitPaymentWeek(@javax.annotation.Nullable Integer limitPaymentWeek) {
    
    this.limitPaymentWeek = limitPaymentWeek;
    return this;
  }

  /**
   * POS operations limit of the corresponding card for a sliding week.  See [Payment &amp; Withdrawl limits](/guide/cards/restrictions-limits.html#payment-withdrawal-limits) for more information. 
   * @return limitPaymentWeek
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_PAYMENT_WEEK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLimitPaymentWeek() {
    return limitPaymentWeek;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_PAYMENT_WEEK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitPaymentWeek(@javax.annotation.Nullable Integer limitPaymentWeek) {
    this.limitPaymentWeek = limitPaymentWeek;
  }

  public CardObjectCardsInner limitPaymentDay(@javax.annotation.Nullable Integer limitPaymentDay) {
    
    this.limitPaymentDay = limitPaymentDay;
    return this;
  }

  /**
   * POS operations limit of the corresponding card for a single day.  See [Payment &amp; Withdrawl limits](/guide/cards/restrictions-limits.html#payment-withdrawal-limits) for more information. 
   * @return limitPaymentDay
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_PAYMENT_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLimitPaymentDay() {
    return limitPaymentDay;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_PAYMENT_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitPaymentDay(@javax.annotation.Nullable Integer limitPaymentDay) {
    this.limitPaymentDay = limitPaymentDay;
  }

  public CardObjectCardsInner limitPaymentAll(@javax.annotation.Nullable Integer limitPaymentAll) {
    
    this.limitPaymentAll = limitPaymentAll;
    return this;
  }

  /**
   * POS operations limit of the corresponding card for a single day.  See [Payment &amp; Withdrawl limits](/guide/cards/restrictions-limits.html#payment-withdrawal-limits) for more information. 
   * @return limitPaymentAll
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_PAYMENT_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLimitPaymentAll() {
    return limitPaymentAll;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_PAYMENT_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitPaymentAll(@javax.annotation.Nullable Integer limitPaymentAll) {
    this.limitPaymentAll = limitPaymentAll;
  }

  public CardObjectCardsInner paymentDailyLimit(@javax.annotation.Nullable Float paymentDailyLimit) {
    
    this.paymentDailyLimit = paymentDailyLimit;
    return this;
  }

  /**
   * POS operations limit for a single day including cents. The decimal delimiter must be \&quot;.\&quot;. No default value.  For food vouchers use cases only. 
   * @return paymentDailyLimit
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_DAILY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getPaymentDailyLimit() {
    return paymentDailyLimit;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_DAILY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentDailyLimit(@javax.annotation.Nullable Float paymentDailyLimit) {
    this.paymentDailyLimit = paymentDailyLimit;
  }

  public CardObjectCardsInner totalAtmYear(@javax.annotation.Nullable Integer totalAtmYear) {
    
    this.totalAtmYear = totalAtmYear;
    return this;
  }

  /**
   * The card yearly withdrawal amount.
   * @return totalAtmYear
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_ATM_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalAtmYear() {
    return totalAtmYear;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_ATM_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalAtmYear(@javax.annotation.Nullable Integer totalAtmYear) {
    this.totalAtmYear = totalAtmYear;
  }

  public CardObjectCardsInner totalAtmMonth(@javax.annotation.Nullable Integer totalAtmMonth) {
    
    this.totalAtmMonth = totalAtmMonth;
    return this;
  }

  /**
   * The card monthly withdrawal amount.
   * @return totalAtmMonth
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_ATM_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalAtmMonth() {
    return totalAtmMonth;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_ATM_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalAtmMonth(@javax.annotation.Nullable Integer totalAtmMonth) {
    this.totalAtmMonth = totalAtmMonth;
  }

  public CardObjectCardsInner totalAtmWeek(@javax.annotation.Nullable Integer totalAtmWeek) {
    
    this.totalAtmWeek = totalAtmWeek;
    return this;
  }

  /**
   * The card weekly withdrawal amount.
   * @return totalAtmWeek
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_ATM_WEEK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalAtmWeek() {
    return totalAtmWeek;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_ATM_WEEK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalAtmWeek(@javax.annotation.Nullable Integer totalAtmWeek) {
    this.totalAtmWeek = totalAtmWeek;
  }

  public CardObjectCardsInner totalAtmDay(@javax.annotation.Nullable Integer totalAtmDay) {
    
    this.totalAtmDay = totalAtmDay;
    return this;
  }

  /**
   * The card daily withdrawal amount.
   * @return totalAtmDay
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_ATM_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalAtmDay() {
    return totalAtmDay;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_ATM_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalAtmDay(@javax.annotation.Nullable Integer totalAtmDay) {
    this.totalAtmDay = totalAtmDay;
  }

  public CardObjectCardsInner totalAtmAll(@javax.annotation.Nullable Integer totalAtmAll) {
    
    this.totalAtmAll = totalAtmAll;
    return this;
  }

  /**
   * The card total withdrawal amount.
   * @return totalAtmAll
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_ATM_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalAtmAll() {
    return totalAtmAll;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_ATM_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalAtmAll(@javax.annotation.Nullable Integer totalAtmAll) {
    this.totalAtmAll = totalAtmAll;
  }

  public CardObjectCardsInner totalPaymentYear(@javax.annotation.Nullable Integer totalPaymentYear) {
    
    this.totalPaymentYear = totalPaymentYear;
    return this;
  }

  /**
   * The card yearly spent amount.
   * @return totalPaymentYear
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_PAYMENT_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalPaymentYear() {
    return totalPaymentYear;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_PAYMENT_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalPaymentYear(@javax.annotation.Nullable Integer totalPaymentYear) {
    this.totalPaymentYear = totalPaymentYear;
  }

  public CardObjectCardsInner totalPaymentMonth(@javax.annotation.Nullable Integer totalPaymentMonth) {
    
    this.totalPaymentMonth = totalPaymentMonth;
    return this;
  }

  /**
   * The card monthly spent amount.
   * @return totalPaymentMonth
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_PAYMENT_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalPaymentMonth() {
    return totalPaymentMonth;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_PAYMENT_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalPaymentMonth(@javax.annotation.Nullable Integer totalPaymentMonth) {
    this.totalPaymentMonth = totalPaymentMonth;
  }

  public CardObjectCardsInner totalPaymentWeek(@javax.annotation.Nullable Integer totalPaymentWeek) {
    
    this.totalPaymentWeek = totalPaymentWeek;
    return this;
  }

  /**
   * The card weekly spent amount.
   * @return totalPaymentWeek
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_PAYMENT_WEEK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalPaymentWeek() {
    return totalPaymentWeek;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_PAYMENT_WEEK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalPaymentWeek(@javax.annotation.Nullable Integer totalPaymentWeek) {
    this.totalPaymentWeek = totalPaymentWeek;
  }

  public CardObjectCardsInner totalPaymentDay(@javax.annotation.Nullable Integer totalPaymentDay) {
    
    this.totalPaymentDay = totalPaymentDay;
    return this;
  }

  /**
   * The card daily spent amount.
   * @return totalPaymentDay
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_PAYMENT_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalPaymentDay() {
    return totalPaymentDay;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_PAYMENT_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalPaymentDay(@javax.annotation.Nullable Integer totalPaymentDay) {
    this.totalPaymentDay = totalPaymentDay;
  }

  public CardObjectCardsInner totalPaymentAll(@javax.annotation.Nullable Integer totalPaymentAll) {
    
    this.totalPaymentAll = totalPaymentAll;
    return this;
  }

  /**
   * The card total spent amount.
   * @return totalPaymentAll
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_PAYMENT_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalPaymentAll() {
    return totalPaymentAll;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_PAYMENT_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalPaymentAll(@javax.annotation.Nullable Integer totalPaymentAll) {
    this.totalPaymentAll = totalPaymentAll;
  }

  public CardObjectCardsInner createdBy(@javax.annotation.Nullable Integer createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCreatedBy() {
    return createdBy;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedBy(@javax.annotation.Nullable Integer createdBy) {
    this.createdBy = createdBy;
  }

  public CardObjectCardsInner createdDate(@javax.annotation.Nullable OffsetDateTime createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Date &#x60;YYYY-MM-DD HH:mm:ss&#x60; 
   * @return createdDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedDate(@javax.annotation.Nullable OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public CardObjectCardsInner modifiedBy(@javax.annotation.Nullable Integer modifiedBy) {
    
    this.modifiedBy = modifiedBy;
    return this;
  }

  /**
   * Get modifiedBy
   * @return modifiedBy
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getModifiedBy() {
    return modifiedBy;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModifiedBy(@javax.annotation.Nullable Integer modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public CardObjectCardsInner modifiedDate(@javax.annotation.Nullable OffsetDateTime modifiedDate) {
    
    this.modifiedDate = modifiedDate;
    return this;
  }

  /**
   * Date &#x60;YYYY-MM-DD HH:mm:ss&#x60; 
   * @return modifiedDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModifiedDate(@javax.annotation.Nullable OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public CardObjectCardsInner totalRows(@javax.annotation.Nullable Integer totalRows) {
    
    this.totalRows = totalRows;
    return this;
  }

  /**
   * The total numbers of objects matching your search, for pagination purposes. Only valued in the first object of the returned page, &#x60;null&#x60; otherwise. 
   * @return totalRows
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalRows() {
    return totalRows;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalRows(@javax.annotation.Nullable Integer totalRows) {
    this.totalRows = totalRows;
  }

  public CardObjectCardsInner designCode(@javax.annotation.Nullable String designCode) {
    
    this.designCode = designCode;
    return this;
  }

  /**
   * Get designCode
   * @return designCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESIGN_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDesignCode() {
    return designCode;
  }


  @JsonProperty(JSON_PROPERTY_DESIGN_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDesignCode(@javax.annotation.Nullable String designCode) {
    this.designCode = designCode;
  }

  public CardObjectCardsInner cardLanguages(@javax.annotation.Nullable String cardLanguages) {
    
    this.cardLanguages = cardLanguages;
    return this;
  }

  /**
   * The language preferences for the card.  Must be alphabetic and max. 8 characters. Format: [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes). 
   * @return cardLanguages
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_LANGUAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCardLanguages() {
    return cardLanguages;
  }


  @JsonProperty(JSON_PROPERTY_CARD_LANGUAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardLanguages(@javax.annotation.Nullable String cardLanguages) {
    this.cardLanguages = cardLanguages;
  }

  public CardObjectCardsInner eventName(@javax.annotation.Nullable String eventName) {
    
    this.eventName = eventName;
    return this;
  }

  /**
   * Name of the Wallet, inherited from the wallet the card is attached to.
   * @return eventName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEventName() {
    return eventName;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventName(@javax.annotation.Nullable String eventName) {
    this.eventName = eventName;
  }

  public CardObjectCardsInner eventAlias(@javax.annotation.Nullable String eventAlias) {
    
    this.eventAlias = eventAlias;
    return this;
  }

  /**
   * Description of the Wallet, inherited from the wallet the card is attached to.
   * @return eventAlias
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEventAlias() {
    return eventAlias;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventAlias(@javax.annotation.Nullable String eventAlias) {
    this.eventAlias = eventAlias;
  }

  public CardObjectCardsInner restrictionGroupLimits(@javax.annotation.Nullable List<CardObjectCardsInnerRestrictionGroupLimitsInner> restrictionGroupLimits) {
    
    this.restrictionGroupLimits = restrictionGroupLimits;
    return this;
  }

  public CardObjectCardsInner addRestrictionGroupLimitsItem(CardObjectCardsInnerRestrictionGroupLimitsInner restrictionGroupLimitsItem) {
    if (this.restrictionGroupLimits == null) {
      this.restrictionGroupLimits = new ArrayList<>();
    }
    this.restrictionGroupLimits.add(restrictionGroupLimitsItem);
    return this;
  }

  /**
   * Get restrictionGroupLimits
   * @return restrictionGroupLimits
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESTRICTION_GROUP_LIMITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CardObjectCardsInnerRestrictionGroupLimitsInner> getRestrictionGroupLimits() {
    return restrictionGroupLimits;
  }


  @JsonProperty(JSON_PROPERTY_RESTRICTION_GROUP_LIMITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRestrictionGroupLimits(@javax.annotation.Nullable List<CardObjectCardsInnerRestrictionGroupLimitsInner> restrictionGroupLimits) {
    this.restrictionGroupLimits = restrictionGroupLimits;
  }

  public CardObjectCardsInner cancellationNumber(@javax.annotation.Nullable String cancellationNumber) {
    
    this.cancellationNumber = cancellationNumber;
    return this;
  }

  /**
   * Number generated when the card &#x60;statusCode&#x60; is set to &#x60;STOLEN&#x60; or &#x60;LOST&#x60;. 
   * @return cancellationNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANCELLATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCancellationNumber() {
    return cancellationNumber;
  }


  @JsonProperty(JSON_PROPERTY_CANCELLATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCancellationNumber(@javax.annotation.Nullable String cancellationNumber) {
    this.cancellationNumber = cancellationNumber;
  }

  public CardObjectCardsInner metadata(@javax.annotation.Nullable String metadata) {
    this.metadata = JsonNullable.<String>of(metadata);
    
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getMetadata() {
        return metadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetadata_JsonNullable() {
    return metadata;
  }
  
  @JsonProperty(JSON_PROPERTY_METADATA)
  public void setMetadata_JsonNullable(JsonNullable<String> metadata) {
    this.metadata = metadata;
  }

  public void setMetadata(@javax.annotation.Nullable String metadata) {
    this.metadata = JsonNullable.<String>of(metadata);
  }

  public CardObjectCardsInner renewalDate(@javax.annotation.Nullable String renewalDate) {
    this.renewalDate = JsonNullable.<String>of(renewalDate);
    
    return this;
  }

  /**
   * Date on which the card was renewed (field populated for the original card only). YYYY-MM-DD.
   * @return renewalDate
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getRenewalDate() {
        return renewalDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RENEWAL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRenewalDate_JsonNullable() {
    return renewalDate;
  }
  
  @JsonProperty(JSON_PROPERTY_RENEWAL_DATE)
  public void setRenewalDate_JsonNullable(JsonNullable<String> renewalDate) {
    this.renewalDate = renewalDate;
  }

  public void setRenewalDate(@javax.annotation.Nullable String renewalDate) {
    this.renewalDate = JsonNullable.<String>of(renewalDate);
  }

  public CardObjectCardsInner renewalType(@javax.annotation.Nullable RenewalTypeEnum renewalType) {
    this.renewalType = JsonNullable.<RenewalTypeEnum>of(renewalType);
    
    return this;
  }

  /**
   * Indicates how the Card is to be renewed. &#x60;A&#x60; for automatic renewal, &#x60;N&#x60; for non-automatic renewal. 
   * @return renewalType
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public RenewalTypeEnum getRenewalType() {
        return renewalType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RENEWAL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RenewalTypeEnum> getRenewalType_JsonNullable() {
    return renewalType;
  }
  
  @JsonProperty(JSON_PROPERTY_RENEWAL_TYPE)
  public void setRenewalType_JsonNullable(JsonNullable<RenewalTypeEnum> renewalType) {
    this.renewalType = renewalType;
  }

  public void setRenewalType(@javax.annotation.Nullable RenewalTypeEnum renewalType) {
    this.renewalType = JsonNullable.<RenewalTypeEnum>of(renewalType);
  }

  public CardObjectCardsInner originalCardId(@javax.annotation.Nullable Integer originalCardId) {
    this.originalCardId = JsonNullable.<Integer>of(originalCardId);
    
    return this;
  }

  /**
   * The unique identifier of the original Card (field populated for renewed cards only).
   * @return originalCardId
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getOriginalCardId() {
        return originalCardId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORIGINAL_CARD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getOriginalCardId_JsonNullable() {
    return originalCardId;
  }
  
  @JsonProperty(JSON_PROPERTY_ORIGINAL_CARD_ID)
  public void setOriginalCardId_JsonNullable(JsonNullable<Integer> originalCardId) {
    this.originalCardId = originalCardId;
  }

  public void setOriginalCardId(@javax.annotation.Nullable Integer originalCardId) {
    this.originalCardId = JsonNullable.<Integer>of(originalCardId);
  }

  public CardObjectCardsInner logoId(@javax.annotation.Nullable String logoId) {
    
    this.logoId = logoId;
    return this;
  }

  /**
   * The file name of the logo for the card. Learn more in the [Logo](/guide/cards/creation.html#logo-logoid) article. 
   * @return logoId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGO_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLogoId() {
    return logoId;
  }


  @JsonProperty(JSON_PROPERTY_LOGO_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogoId(@javax.annotation.Nullable String logoId) {
    this.logoId = logoId;
  }

  public CardObjectCardsInner logoBackId(@javax.annotation.Nullable String logoBackId) {
    
    this.logoBackId = logoBackId;
    return this;
  }

  /**
   * The file name of the logo for the back of the card. Learn more in the [Back Logo](/guide/cards/creation.html#back-logo-logobackid) article. 
   * @return logoBackId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGO_BACK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLogoBackId() {
    return logoBackId;
  }


  @JsonProperty(JSON_PROPERTY_LOGO_BACK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogoBackId(@javax.annotation.Nullable String logoBackId) {
    this.logoBackId = logoBackId;
  }

  public CardObjectCardsInner packageId(@javax.annotation.Nullable String packageId) {
    
    this.packageId = packageId;
    return this;
  }

  /**
   * Packaging reference for card shipping. Max. 8 characters.
   * @return packageId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PACKAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPackageId() {
    return packageId;
  }


  @JsonProperty(JSON_PROPERTY_PACKAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPackageId(@javax.annotation.Nullable String packageId) {
    this.packageId = packageId;
  }

  public CardObjectCardsInner customizedInfo(@javax.annotation.Nullable String customizedInfo) {
    
    this.customizedInfo = customizedInfo;
    return this;
  }

  /**
   * Customized text to be displayed on the card.
   * @return customizedInfo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMIZED_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomizedInfo() {
    return customizedInfo;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMIZED_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomizedInfo(@javax.annotation.Nullable String customizedInfo) {
    this.customizedInfo = customizedInfo;
  }

  public CardObjectCardsInner letterCustomizedInfo(@javax.annotation.Nullable String letterCustomizedInfo) {
    
    this.letterCustomizedInfo = letterCustomizedInfo;
    return this;
  }

  /**
   * Customized text for the letter that is joined to the card.
   * @return letterCustomizedInfo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LETTER_CUSTOMIZED_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLetterCustomizedInfo() {
    return letterCustomizedInfo;
  }


  @JsonProperty(JSON_PROPERTY_LETTER_CUSTOMIZED_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLetterCustomizedInfo(@javax.annotation.Nullable String letterCustomizedInfo) {
    this.letterCustomizedInfo = letterCustomizedInfo;
  }

  public CardObjectCardsInner freeCustomizedInfo(@javax.annotation.Nullable String freeCustomizedInfo) {
    
    this.freeCustomizedInfo = freeCustomizedInfo;
    return this;
  }

  /**
   * More customized text to be displayed on the card.
   * @return freeCustomizedInfo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FREE_CUSTOMIZED_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFreeCustomizedInfo() {
    return freeCustomizedInfo;
  }


  @JsonProperty(JSON_PROPERTY_FREE_CUSTOMIZED_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFreeCustomizedInfo(@javax.annotation.Nullable String freeCustomizedInfo) {
    this.freeCustomizedInfo = freeCustomizedInfo;
  }

  public CardObjectCardsInner deliveryMethod(@javax.annotation.Nullable Integer deliveryMethod) {
    this.deliveryMethod = JsonNullable.<Integer>of(deliveryMethod);
    
    return this;
  }

  /**
   * The method the manufacturer uses to send the cards (e.g., delivery with or without tracking).  Learn more in the [Card Delivery Method](/guide/cards/creation.html#card-delivery-method-deliverymethod) article. 
   * @return deliveryMethod
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getDeliveryMethod() {
        return deliveryMethod.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DELIVERY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getDeliveryMethod_JsonNullable() {
    return deliveryMethod;
  }
  
  @JsonProperty(JSON_PROPERTY_DELIVERY_METHOD)
  public void setDeliveryMethod_JsonNullable(JsonNullable<Integer> deliveryMethod) {
    this.deliveryMethod = deliveryMethod;
  }

  public void setDeliveryMethod(@javax.annotation.Nullable Integer deliveryMethod) {
    this.deliveryMethod = JsonNullable.<Integer>of(deliveryMethod);
  }

  public CardObjectCardsInner pinMailer(@javax.annotation.Nullable PinMailerEnum pinMailer) {
    this.pinMailer = JsonNullable.<PinMailerEnum>of(pinMailer);
    
    return this;
  }

  /**
   * Whether the card manufacturer to send the card PIN code by letter.
   * @return pinMailer
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public PinMailerEnum getPinMailer() {
        return pinMailer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PIN_MAILER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PinMailerEnum> getPinMailer_JsonNullable() {
    return pinMailer;
  }
  
  @JsonProperty(JSON_PROPERTY_PIN_MAILER)
  public void setPinMailer_JsonNullable(JsonNullable<PinMailerEnum> pinMailer) {
    this.pinMailer = pinMailer;
  }

  public void setPinMailer(@javax.annotation.Nullable PinMailerEnum pinMailer) {
    this.pinMailer = JsonNullable.<PinMailerEnum>of(pinMailer);
  }

  public CardObjectCardsInner batchDeliveryId(@javax.annotation.Nullable Integer batchDeliveryId) {
    this.batchDeliveryId = JsonNullable.<Integer>of(batchDeliveryId);
    
    return this;
  }

  /**
   * Batch delivery identifier.
   * @return batchDeliveryId
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getBatchDeliveryId() {
        return batchDeliveryId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BATCH_DELIVERY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getBatchDeliveryId_JsonNullable() {
    return batchDeliveryId;
  }
  
  @JsonProperty(JSON_PROPERTY_BATCH_DELIVERY_ID)
  public void setBatchDeliveryId_JsonNullable(JsonNullable<Integer> batchDeliveryId) {
    this.batchDeliveryId = batchDeliveryId;
  }

  public void setBatchDeliveryId(@javax.annotation.Nullable Integer batchDeliveryId) {
    this.batchDeliveryId = JsonNullable.<Integer>of(batchDeliveryId);
  }

  public CardObjectCardsInner sendToParent(@javax.annotation.Nullable SendToParentEnum sendToParent) {
    
    this.sendToParent = sendToParent;
    return this;
  }

  /**
   * Whether the card should be sent to the cardholder&#39;s Parent User.
   * @return sendToParent
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEND_TO_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SendToParentEnum getSendToParent() {
    return sendToParent;
  }


  @JsonProperty(JSON_PROPERTY_SEND_TO_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSendToParent(@javax.annotation.Nullable SendToParentEnum sendToParent) {
    this.sendToParent = sendToParent;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardObjectCardsInner cardObjectCardsInner = (CardObjectCardsInner) o;
    return Objects.equals(this.cardId, cardObjectCardsInner.cardId) &&
        Objects.equals(this.userId, cardObjectCardsInner.userId) &&
        Objects.equals(this.walletId, cardObjectCardsInner.walletId) &&
        Objects.equals(this.walletCardtransactionId, cardObjectCardsInner.walletCardtransactionId) &&
        equalsNullable(this.mccRestrictionGroupId, cardObjectCardsInner.mccRestrictionGroupId) &&
        equalsNullable(this.merchantRestrictionGroupId, cardObjectCardsInner.merchantRestrictionGroupId) &&
        equalsNullable(this.countryRestrictionGroupId, cardObjectCardsInner.countryRestrictionGroupId) &&
        Objects.equals(this.publicToken, cardObjectCardsInner.publicToken) &&
        Objects.equals(this.cardTag, cardObjectCardsInner.cardTag) &&
        Objects.equals(this.statusCode, cardObjectCardsInner.statusCode) &&
        Objects.equals(this.isLive, cardObjectCardsInner.isLive) &&
        Objects.equals(this.pinTryExceeds, cardObjectCardsInner.pinTryExceeds) &&
        Objects.equals(this.maskedPan, cardObjectCardsInner.maskedPan) &&
        Objects.equals(this.embossedName, cardObjectCardsInner.embossedName) &&
        Objects.equals(this.expiryDate, cardObjectCardsInner.expiryDate) &&
        Objects.equals(this.CVV, cardObjectCardsInner.CVV) &&
        Objects.equals(this.startDate, cardObjectCardsInner.startDate) &&
        Objects.equals(this.endDate, cardObjectCardsInner.endDate) &&
        Objects.equals(this.countryCode, cardObjectCardsInner.countryCode) &&
        Objects.equals(this.currencyCode, cardObjectCardsInner.currencyCode) &&
        Objects.equals(this.lang, cardObjectCardsInner.lang) &&
        Objects.equals(this.deliveryTitle, cardObjectCardsInner.deliveryTitle) &&
        Objects.equals(this.deliveryLastname, cardObjectCardsInner.deliveryLastname) &&
        Objects.equals(this.deliveryFirstname, cardObjectCardsInner.deliveryFirstname) &&
        Objects.equals(this.deliveryAddress1, cardObjectCardsInner.deliveryAddress1) &&
        Objects.equals(this.deliveryAddress2, cardObjectCardsInner.deliveryAddress2) &&
        Objects.equals(this.deliveryAddress3, cardObjectCardsInner.deliveryAddress3) &&
        Objects.equals(this.deliveryCity, cardObjectCardsInner.deliveryCity) &&
        Objects.equals(this.deliveryPostcode, cardObjectCardsInner.deliveryPostcode) &&
        Objects.equals(this.deliveryCountry, cardObjectCardsInner.deliveryCountry) &&
        Objects.equals(this.mobileSent, cardObjectCardsInner.mobileSent) &&
        Objects.equals(this.limitsGroup, cardObjectCardsInner.limitsGroup) &&
        Objects.equals(this.permsGroup, cardObjectCardsInner.permsGroup) &&
        Objects.equals(this.cardDesign, cardObjectCardsInner.cardDesign) &&
        Objects.equals(this.virtualConverted, cardObjectCardsInner.virtualConverted) &&
        Objects.equals(this.physical, cardObjectCardsInner.physical) &&
        Objects.equals(this.optionAtm, cardObjectCardsInner.optionAtm) &&
        Objects.equals(this.optionForeign, cardObjectCardsInner.optionForeign) &&
        Objects.equals(this.optionOnline, cardObjectCardsInner.optionOnline) &&
        Objects.equals(this.optionNfc, cardObjectCardsInner.optionNfc) &&
        Objects.equals(this.limitAtmYear, cardObjectCardsInner.limitAtmYear) &&
        Objects.equals(this.limitAtmMonth, cardObjectCardsInner.limitAtmMonth) &&
        Objects.equals(this.limitAtmWeek, cardObjectCardsInner.limitAtmWeek) &&
        Objects.equals(this.limitAtmDay, cardObjectCardsInner.limitAtmDay) &&
        Objects.equals(this.limitAtmAll, cardObjectCardsInner.limitAtmAll) &&
        Objects.equals(this.limitPaymentYear, cardObjectCardsInner.limitPaymentYear) &&
        Objects.equals(this.limitPaymentMonth, cardObjectCardsInner.limitPaymentMonth) &&
        Objects.equals(this.limitPaymentWeek, cardObjectCardsInner.limitPaymentWeek) &&
        Objects.equals(this.limitPaymentDay, cardObjectCardsInner.limitPaymentDay) &&
        Objects.equals(this.limitPaymentAll, cardObjectCardsInner.limitPaymentAll) &&
        Objects.equals(this.paymentDailyLimit, cardObjectCardsInner.paymentDailyLimit) &&
        Objects.equals(this.totalAtmYear, cardObjectCardsInner.totalAtmYear) &&
        Objects.equals(this.totalAtmMonth, cardObjectCardsInner.totalAtmMonth) &&
        Objects.equals(this.totalAtmWeek, cardObjectCardsInner.totalAtmWeek) &&
        Objects.equals(this.totalAtmDay, cardObjectCardsInner.totalAtmDay) &&
        Objects.equals(this.totalAtmAll, cardObjectCardsInner.totalAtmAll) &&
        Objects.equals(this.totalPaymentYear, cardObjectCardsInner.totalPaymentYear) &&
        Objects.equals(this.totalPaymentMonth, cardObjectCardsInner.totalPaymentMonth) &&
        Objects.equals(this.totalPaymentWeek, cardObjectCardsInner.totalPaymentWeek) &&
        Objects.equals(this.totalPaymentDay, cardObjectCardsInner.totalPaymentDay) &&
        Objects.equals(this.totalPaymentAll, cardObjectCardsInner.totalPaymentAll) &&
        Objects.equals(this.createdBy, cardObjectCardsInner.createdBy) &&
        Objects.equals(this.createdDate, cardObjectCardsInner.createdDate) &&
        Objects.equals(this.modifiedBy, cardObjectCardsInner.modifiedBy) &&
        Objects.equals(this.modifiedDate, cardObjectCardsInner.modifiedDate) &&
        Objects.equals(this.totalRows, cardObjectCardsInner.totalRows) &&
        Objects.equals(this.designCode, cardObjectCardsInner.designCode) &&
        Objects.equals(this.cardLanguages, cardObjectCardsInner.cardLanguages) &&
        Objects.equals(this.eventName, cardObjectCardsInner.eventName) &&
        Objects.equals(this.eventAlias, cardObjectCardsInner.eventAlias) &&
        Objects.equals(this.restrictionGroupLimits, cardObjectCardsInner.restrictionGroupLimits) &&
        Objects.equals(this.cancellationNumber, cardObjectCardsInner.cancellationNumber) &&
        equalsNullable(this.metadata, cardObjectCardsInner.metadata) &&
        equalsNullable(this.renewalDate, cardObjectCardsInner.renewalDate) &&
        equalsNullable(this.renewalType, cardObjectCardsInner.renewalType) &&
        equalsNullable(this.originalCardId, cardObjectCardsInner.originalCardId) &&
        Objects.equals(this.logoId, cardObjectCardsInner.logoId) &&
        Objects.equals(this.logoBackId, cardObjectCardsInner.logoBackId) &&
        Objects.equals(this.packageId, cardObjectCardsInner.packageId) &&
        Objects.equals(this.customizedInfo, cardObjectCardsInner.customizedInfo) &&
        Objects.equals(this.letterCustomizedInfo, cardObjectCardsInner.letterCustomizedInfo) &&
        Objects.equals(this.freeCustomizedInfo, cardObjectCardsInner.freeCustomizedInfo) &&
        equalsNullable(this.deliveryMethod, cardObjectCardsInner.deliveryMethod) &&
        equalsNullable(this.pinMailer, cardObjectCardsInner.pinMailer) &&
        equalsNullable(this.batchDeliveryId, cardObjectCardsInner.batchDeliveryId) &&
        Objects.equals(this.sendToParent, cardObjectCardsInner.sendToParent);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardId, userId, walletId, walletCardtransactionId, hashCodeNullable(mccRestrictionGroupId), hashCodeNullable(merchantRestrictionGroupId), hashCodeNullable(countryRestrictionGroupId), publicToken, cardTag, statusCode, isLive, pinTryExceeds, maskedPan, embossedName, expiryDate, CVV, startDate, endDate, countryCode, currencyCode, lang, deliveryTitle, deliveryLastname, deliveryFirstname, deliveryAddress1, deliveryAddress2, deliveryAddress3, deliveryCity, deliveryPostcode, deliveryCountry, mobileSent, limitsGroup, permsGroup, cardDesign, virtualConverted, physical, optionAtm, optionForeign, optionOnline, optionNfc, limitAtmYear, limitAtmMonth, limitAtmWeek, limitAtmDay, limitAtmAll, limitPaymentYear, limitPaymentMonth, limitPaymentWeek, limitPaymentDay, limitPaymentAll, paymentDailyLimit, totalAtmYear, totalAtmMonth, totalAtmWeek, totalAtmDay, totalAtmAll, totalPaymentYear, totalPaymentMonth, totalPaymentWeek, totalPaymentDay, totalPaymentAll, createdBy, createdDate, modifiedBy, modifiedDate, totalRows, designCode, cardLanguages, eventName, eventAlias, restrictionGroupLimits, cancellationNumber, hashCodeNullable(metadata), hashCodeNullable(renewalDate), hashCodeNullable(renewalType), hashCodeNullable(originalCardId), logoId, logoBackId, packageId, customizedInfo, letterCustomizedInfo, freeCustomizedInfo, hashCodeNullable(deliveryMethod), hashCodeNullable(pinMailer), hashCodeNullable(batchDeliveryId), sendToParent);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardObjectCardsInner {\n");
    sb.append("    cardId: ").append(toIndentedString(cardId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    walletCardtransactionId: ").append(toIndentedString(walletCardtransactionId)).append("\n");
    sb.append("    mccRestrictionGroupId: ").append(toIndentedString(mccRestrictionGroupId)).append("\n");
    sb.append("    merchantRestrictionGroupId: ").append(toIndentedString(merchantRestrictionGroupId)).append("\n");
    sb.append("    countryRestrictionGroupId: ").append(toIndentedString(countryRestrictionGroupId)).append("\n");
    sb.append("    publicToken: ").append(toIndentedString(publicToken)).append("\n");
    sb.append("    cardTag: ").append(toIndentedString(cardTag)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    isLive: ").append(toIndentedString(isLive)).append("\n");
    sb.append("    pinTryExceeds: ").append(toIndentedString(pinTryExceeds)).append("\n");
    sb.append("    maskedPan: ").append(toIndentedString(maskedPan)).append("\n");
    sb.append("    embossedName: ").append(toIndentedString(embossedName)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    CVV: ").append(toIndentedString(CVV)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    deliveryTitle: ").append(toIndentedString(deliveryTitle)).append("\n");
    sb.append("    deliveryLastname: ").append(toIndentedString(deliveryLastname)).append("\n");
    sb.append("    deliveryFirstname: ").append(toIndentedString(deliveryFirstname)).append("\n");
    sb.append("    deliveryAddress1: ").append(toIndentedString(deliveryAddress1)).append("\n");
    sb.append("    deliveryAddress2: ").append(toIndentedString(deliveryAddress2)).append("\n");
    sb.append("    deliveryAddress3: ").append(toIndentedString(deliveryAddress3)).append("\n");
    sb.append("    deliveryCity: ").append(toIndentedString(deliveryCity)).append("\n");
    sb.append("    deliveryPostcode: ").append(toIndentedString(deliveryPostcode)).append("\n");
    sb.append("    deliveryCountry: ").append(toIndentedString(deliveryCountry)).append("\n");
    sb.append("    mobileSent: ").append(toIndentedString(mobileSent)).append("\n");
    sb.append("    limitsGroup: ").append(toIndentedString(limitsGroup)).append("\n");
    sb.append("    permsGroup: ").append(toIndentedString(permsGroup)).append("\n");
    sb.append("    cardDesign: ").append(toIndentedString(cardDesign)).append("\n");
    sb.append("    virtualConverted: ").append(toIndentedString(virtualConverted)).append("\n");
    sb.append("    physical: ").append(toIndentedString(physical)).append("\n");
    sb.append("    optionAtm: ").append(toIndentedString(optionAtm)).append("\n");
    sb.append("    optionForeign: ").append(toIndentedString(optionForeign)).append("\n");
    sb.append("    optionOnline: ").append(toIndentedString(optionOnline)).append("\n");
    sb.append("    optionNfc: ").append(toIndentedString(optionNfc)).append("\n");
    sb.append("    limitAtmYear: ").append(toIndentedString(limitAtmYear)).append("\n");
    sb.append("    limitAtmMonth: ").append(toIndentedString(limitAtmMonth)).append("\n");
    sb.append("    limitAtmWeek: ").append(toIndentedString(limitAtmWeek)).append("\n");
    sb.append("    limitAtmDay: ").append(toIndentedString(limitAtmDay)).append("\n");
    sb.append("    limitAtmAll: ").append(toIndentedString(limitAtmAll)).append("\n");
    sb.append("    limitPaymentYear: ").append(toIndentedString(limitPaymentYear)).append("\n");
    sb.append("    limitPaymentMonth: ").append(toIndentedString(limitPaymentMonth)).append("\n");
    sb.append("    limitPaymentWeek: ").append(toIndentedString(limitPaymentWeek)).append("\n");
    sb.append("    limitPaymentDay: ").append(toIndentedString(limitPaymentDay)).append("\n");
    sb.append("    limitPaymentAll: ").append(toIndentedString(limitPaymentAll)).append("\n");
    sb.append("    paymentDailyLimit: ").append(toIndentedString(paymentDailyLimit)).append("\n");
    sb.append("    totalAtmYear: ").append(toIndentedString(totalAtmYear)).append("\n");
    sb.append("    totalAtmMonth: ").append(toIndentedString(totalAtmMonth)).append("\n");
    sb.append("    totalAtmWeek: ").append(toIndentedString(totalAtmWeek)).append("\n");
    sb.append("    totalAtmDay: ").append(toIndentedString(totalAtmDay)).append("\n");
    sb.append("    totalAtmAll: ").append(toIndentedString(totalAtmAll)).append("\n");
    sb.append("    totalPaymentYear: ").append(toIndentedString(totalPaymentYear)).append("\n");
    sb.append("    totalPaymentMonth: ").append(toIndentedString(totalPaymentMonth)).append("\n");
    sb.append("    totalPaymentWeek: ").append(toIndentedString(totalPaymentWeek)).append("\n");
    sb.append("    totalPaymentDay: ").append(toIndentedString(totalPaymentDay)).append("\n");
    sb.append("    totalPaymentAll: ").append(toIndentedString(totalPaymentAll)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    totalRows: ").append(toIndentedString(totalRows)).append("\n");
    sb.append("    designCode: ").append(toIndentedString(designCode)).append("\n");
    sb.append("    cardLanguages: ").append(toIndentedString(cardLanguages)).append("\n");
    sb.append("    eventName: ").append(toIndentedString(eventName)).append("\n");
    sb.append("    eventAlias: ").append(toIndentedString(eventAlias)).append("\n");
    sb.append("    restrictionGroupLimits: ").append(toIndentedString(restrictionGroupLimits)).append("\n");
    sb.append("    cancellationNumber: ").append(toIndentedString(cancellationNumber)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    renewalDate: ").append(toIndentedString(renewalDate)).append("\n");
    sb.append("    renewalType: ").append(toIndentedString(renewalType)).append("\n");
    sb.append("    originalCardId: ").append(toIndentedString(originalCardId)).append("\n");
    sb.append("    logoId: ").append(toIndentedString(logoId)).append("\n");
    sb.append("    logoBackId: ").append(toIndentedString(logoBackId)).append("\n");
    sb.append("    packageId: ").append(toIndentedString(packageId)).append("\n");
    sb.append("    customizedInfo: ").append(toIndentedString(customizedInfo)).append("\n");
    sb.append("    letterCustomizedInfo: ").append(toIndentedString(letterCustomizedInfo)).append("\n");
    sb.append("    freeCustomizedInfo: ").append(toIndentedString(freeCustomizedInfo)).append("\n");
    sb.append("    deliveryMethod: ").append(toIndentedString(deliveryMethod)).append("\n");
    sb.append("    pinMailer: ").append(toIndentedString(pinMailer)).append("\n");
    sb.append("    batchDeliveryId: ").append(toIndentedString(batchDeliveryId)).append("\n");
    sb.append("    sendToParent: ").append(toIndentedString(sendToParent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

