/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostPayoutRefundRequest
 */
@JsonPropertyOrder({
  PostPayoutRefundRequest.JSON_PROPERTY_PAYOUT_ID,
  PostPayoutRefundRequest.JSON_PROPERTY_ACCESS_TAG,
  PostPayoutRefundRequest.JSON_PROPERTY_PAYOUT_REFUND_TAG,
  PostPayoutRefundRequest.JSON_PROPERTY_REQUEST_AMOUNT,
  PostPayoutRefundRequest.JSON_PROPERTY_REQUEST_CURRENCY,
  PostPayoutRefundRequest.JSON_PROPERTY_REQUEST_COMMENT,
  PostPayoutRefundRequest.JSON_PROPERTY_REASON_CODE
})
@JsonTypeName("postPayoutRefund_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class PostPayoutRefundRequest {
  public static final String JSON_PROPERTY_PAYOUT_ID = "payoutId";
  @javax.annotation.Nonnull
  private String payoutId;

  public static final String JSON_PROPERTY_ACCESS_TAG = "accessTag";
  @javax.annotation.Nullable
  private String accessTag;

  public static final String JSON_PROPERTY_PAYOUT_REFUND_TAG = "payoutRefundTag";
  @javax.annotation.Nullable
  private String payoutRefundTag;

  public static final String JSON_PROPERTY_REQUEST_AMOUNT = "requestAmount";
  @javax.annotation.Nullable
  private Float requestAmount;

  public static final String JSON_PROPERTY_REQUEST_CURRENCY = "requestCurrency";
  @javax.annotation.Nullable
  private String requestCurrency = "Initial Payout currency";

  public static final String JSON_PROPERTY_REQUEST_COMMENT = "requestComment";
  @javax.annotation.Nullable
  private String requestComment;

  /**
   * The reason for the recall, as listed in the [Types of Recalls](/guide/transfers/sepa-recalls.html#types-of-recalls-reasoncode) article. 
   */
  public enum ReasonCodeEnum {
    DUPL(String.valueOf("DUPL")),
    
    TECH(String.valueOf("TECH")),
    
    FRAD(String.valueOf("FRAD")),
    
    CUST(String.valueOf("CUST")),
    
    AM09(String.valueOf("AM09")),
    
    AC03(String.valueOf("AC03"));

    private String value;

    ReasonCodeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReasonCodeEnum fromValue(String value) {
      for (ReasonCodeEnum b : ReasonCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REASON_CODE = "reasonCode";
  @javax.annotation.Nonnull
  private ReasonCodeEnum reasonCode;

  public PostPayoutRefundRequest() {
  }

  public PostPayoutRefundRequest payoutId(@javax.annotation.Nonnull String payoutId) {
    
    this.payoutId = payoutId;
    return this;
  }

  /**
   * The unique identifier of the payout for which the recall is to be made.
   * @return payoutId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAYOUT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPayoutId() {
    return payoutId;
  }


  @JsonProperty(JSON_PROPERTY_PAYOUT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayoutId(@javax.annotation.Nonnull String payoutId) {
    this.payoutId = payoutId;
  }

  public PostPayoutRefundRequest accessTag(@javax.annotation.Nullable String accessTag) {
    
    this.accessTag = accessTag;
    return this;
  }

  /**
   * A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html).  
   * @return accessTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccessTag() {
    return accessTag;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessTag(@javax.annotation.Nullable String accessTag) {
    this.accessTag = accessTag;
  }

  public PostPayoutRefundRequest payoutRefundTag(@javax.annotation.Nullable String payoutRefundTag) {
    
    this.payoutRefundTag = payoutRefundTag;
    return this;
  }

  /**
   * Custom attribute to use as you see fit. Learn more in the [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.  Format: hc characters and &#x60;/&#x60; &#x60;!&#x60; &#x60;-&#x60; &#x60;_&#x60; &#x60;.&#x60; &#x60;*&#x60; &#x60;&#39;&#x60; &#x60;(&#x60; &#x60;)&#x60; 
   * @return payoutRefundTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYOUT_REFUND_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPayoutRefundTag() {
    return payoutRefundTag;
  }


  @JsonProperty(JSON_PROPERTY_PAYOUT_REFUND_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayoutRefundTag(@javax.annotation.Nullable String payoutRefundTag) {
    this.payoutRefundTag = payoutRefundTag;
  }

  public PostPayoutRefundRequest requestAmount(@javax.annotation.Nullable Float requestAmount) {
    
    this.requestAmount = requestAmount;
    return this;
  }

  /**
   * The amount of the recall request. Defaults to the initial Payout amount.
   * @return requestAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUEST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getRequestAmount() {
    return requestAmount;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestAmount(@javax.annotation.Nullable Float requestAmount) {
    this.requestAmount = requestAmount;
  }

  public PostPayoutRefundRequest requestCurrency(@javax.annotation.Nullable String requestCurrency) {
    
    this.requestCurrency = requestCurrency;
    return this;
  }

  /**
   * The currency of the recall request.
   * @return requestCurrency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUEST_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestCurrency() {
    return requestCurrency;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestCurrency(@javax.annotation.Nullable String requestCurrency) {
    this.requestCurrency = requestCurrency;
  }

  public PostPayoutRefundRequest requestComment(@javax.annotation.Nullable String requestComment) {
    
    this.requestComment = requestComment;
    return this;
  }

  /**
   * Get requestComment
   * @return requestComment
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUEST_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestComment() {
    return requestComment;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestComment(@javax.annotation.Nullable String requestComment) {
    this.requestComment = requestComment;
  }

  public PostPayoutRefundRequest reasonCode(@javax.annotation.Nonnull ReasonCodeEnum reasonCode) {
    
    this.reasonCode = reasonCode;
    return this;
  }

  /**
   * The reason for the recall, as listed in the [Types of Recalls](/guide/transfers/sepa-recalls.html#types-of-recalls-reasoncode) article. 
   * @return reasonCode
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REASON_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ReasonCodeEnum getReasonCode() {
    return reasonCode;
  }


  @JsonProperty(JSON_PROPERTY_REASON_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReasonCode(@javax.annotation.Nonnull ReasonCodeEnum reasonCode) {
    this.reasonCode = reasonCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostPayoutRefundRequest postPayoutRefundRequest = (PostPayoutRefundRequest) o;
    return Objects.equals(this.payoutId, postPayoutRefundRequest.payoutId) &&
        Objects.equals(this.accessTag, postPayoutRefundRequest.accessTag) &&
        Objects.equals(this.payoutRefundTag, postPayoutRefundRequest.payoutRefundTag) &&
        Objects.equals(this.requestAmount, postPayoutRefundRequest.requestAmount) &&
        Objects.equals(this.requestCurrency, postPayoutRefundRequest.requestCurrency) &&
        Objects.equals(this.requestComment, postPayoutRefundRequest.requestComment) &&
        Objects.equals(this.reasonCode, postPayoutRefundRequest.reasonCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payoutId, accessTag, payoutRefundTag, requestAmount, requestCurrency, requestComment, reasonCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostPayoutRefundRequest {\n");
    sb.append("    payoutId: ").append(toIndentedString(payoutId)).append("\n");
    sb.append("    accessTag: ").append(toIndentedString(accessTag)).append("\n");
    sb.append("    payoutRefundTag: ").append(toIndentedString(payoutRefundTag)).append("\n");
    sb.append("    requestAmount: ").append(toIndentedString(requestAmount)).append("\n");
    sb.append("    requestCurrency: ").append(toIndentedString(requestCurrency)).append("\n");
    sb.append("    requestComment: ").append(toIndentedString(requestComment)).append("\n");
    sb.append("    reasonCode: ").append(toIndentedString(reasonCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

