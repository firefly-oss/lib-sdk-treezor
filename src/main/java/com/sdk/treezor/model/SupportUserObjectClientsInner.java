/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SupportUserObjectClientsInner
 */
@JsonPropertyOrder({
  SupportUserObjectClientsInner.JSON_PROPERTY_CLIENT_ID,
  SupportUserObjectClientsInner.JSON_PROPERTY_SCOPES,
  SupportUserObjectClientsInner.JSON_PROPERTY_RESOURCE_SET,
  SupportUserObjectClientsInner.JSON_PROPERTY_LAST_LOGIN_AT,
  SupportUserObjectClientsInner.JSON_PROPERTY_ACCEPTED_AT
})
@JsonTypeName("SupportUserObject_clients_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class SupportUserObjectClientsInner {
  public static final String JSON_PROPERTY_CLIENT_ID = "clientId";
  @javax.annotation.Nullable
  private String clientId;

  /**
   * Gets or Sets scopes
   */
  public enum ScopesEnum {
    READ_WRITE(String.valueOf("read_write")),
    
    READ_ONLY(String.valueOf("read_only")),
    
    ADMIN(String.valueOf("admin")),
    
    SUPPORT_USER_MANAGEMENT(String.valueOf("support_user_management")),
    
    LEGAL(String.valueOf("legal"));

    private String value;

    ScopesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ScopesEnum fromValue(String value) {
      for (ScopesEnum b : ScopesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SCOPES = "scopes";
  @javax.annotation.Nullable
  private List<ScopesEnum> scopes = new ArrayList<>();

  public static final String JSON_PROPERTY_RESOURCE_SET = "resourceSet";
  @javax.annotation.Nullable
  private List<String> resourceSet = new ArrayList<>();

  public static final String JSON_PROPERTY_LAST_LOGIN_AT = "lastLoginAt";
  @javax.annotation.Nullable
  private JsonNullable<OffsetDateTime> lastLoginAt = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_ACCEPTED_AT = "acceptedAt";
  @javax.annotation.Nullable
  private OffsetDateTime acceptedAt;

  public SupportUserObjectClientsInner() {
  }

  public SupportUserObjectClientsInner clientId(@javax.annotation.Nullable String clientId) {
    
    this.clientId = clientId;
    return this;
  }

  /**
   * Get clientId
   * @return clientId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientId() {
    return clientId;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientId(@javax.annotation.Nullable String clientId) {
    this.clientId = clientId;
  }

  public SupportUserObjectClientsInner scopes(@javax.annotation.Nullable List<ScopesEnum> scopes) {
    
    this.scopes = scopes;
    return this;
  }

  public SupportUserObjectClientsInner addScopesItem(ScopesEnum scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

  /**
   * Get scopes
   * @return scopes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ScopesEnum> getScopes() {
    return scopes;
  }


  @JsonProperty(JSON_PROPERTY_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScopes(@javax.annotation.Nullable List<ScopesEnum> scopes) {
    this.scopes = scopes;
  }

  public SupportUserObjectClientsInner resourceSet(@javax.annotation.Nullable List<String> resourceSet) {
    
    this.resourceSet = resourceSet;
    return this;
  }

  public SupportUserObjectClientsInner addResourceSetItem(String resourceSetItem) {
    if (this.resourceSet == null) {
      this.resourceSet = new ArrayList<>();
    }
    this.resourceSet.add(resourceSetItem);
    return this;
  }

  /**
   * Get resourceSet
   * @return resourceSet
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESOURCE_SET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getResourceSet() {
    return resourceSet;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_SET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResourceSet(@javax.annotation.Nullable List<String> resourceSet) {
    this.resourceSet = resourceSet;
  }

  public SupportUserObjectClientsInner lastLoginAt(@javax.annotation.Nullable OffsetDateTime lastLoginAt) {
    this.lastLoginAt = JsonNullable.<OffsetDateTime>of(lastLoginAt);
    
    return this;
  }

  /**
   * The date and time at which the support user was last connected.
   * @return lastLoginAt
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getLastLoginAt() {
        return lastLoginAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_LOGIN_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getLastLoginAt_JsonNullable() {
    return lastLoginAt;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_LOGIN_AT)
  public void setLastLoginAt_JsonNullable(JsonNullable<OffsetDateTime> lastLoginAt) {
    this.lastLoginAt = lastLoginAt;
  }

  public void setLastLoginAt(@javax.annotation.Nullable OffsetDateTime lastLoginAt) {
    this.lastLoginAt = JsonNullable.<OffsetDateTime>of(lastLoginAt);
  }

  public SupportUserObjectClientsInner acceptedAt(@javax.annotation.Nullable OffsetDateTime acceptedAt) {
    
    this.acceptedAt = acceptedAt;
    return this;
  }

  /**
   * The date and time at which the support user was created.
   * @return acceptedAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCEPTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getAcceptedAt() {
    return acceptedAt;
  }


  @JsonProperty(JSON_PROPERTY_ACCEPTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcceptedAt(@javax.annotation.Nullable OffsetDateTime acceptedAt) {
    this.acceptedAt = acceptedAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupportUserObjectClientsInner supportUserObjectClientsInner = (SupportUserObjectClientsInner) o;
    return Objects.equals(this.clientId, supportUserObjectClientsInner.clientId) &&
        Objects.equals(this.scopes, supportUserObjectClientsInner.scopes) &&
        Objects.equals(this.resourceSet, supportUserObjectClientsInner.resourceSet) &&
        equalsNullable(this.lastLoginAt, supportUserObjectClientsInner.lastLoginAt) &&
        Objects.equals(this.acceptedAt, supportUserObjectClientsInner.acceptedAt);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, scopes, resourceSet, hashCodeNullable(lastLoginAt), acceptedAt);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupportUserObjectClientsInner {\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    resourceSet: ").append(toIndentedString(resourceSet)).append("\n");
    sb.append("    lastLoginAt: ").append(toIndentedString(lastLoginAt)).append("\n");
    sb.append("    acceptedAt: ").append(toIndentedString(acceptedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

