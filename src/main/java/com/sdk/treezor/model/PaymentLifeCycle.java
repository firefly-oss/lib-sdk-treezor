/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaymentLifeCycle
 */
@JsonPropertyOrder({
  PaymentLifeCycle.JSON_PROPERTY_AUTHORIZATION_ISSUER_TIME,
  PaymentLifeCycle.JSON_PROPERTY_VALUE_DATE,
  PaymentLifeCycle.JSON_PROPERTY_PAYMENT_AMOUNT,
  PaymentLifeCycle.JSON_PROPERTY_PAYMENT_LOCAL_AMOUNT,
  PaymentLifeCycle.JSON_PROPERTY_PAYMENT_CURRENCY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class PaymentLifeCycle {
  public static final String JSON_PROPERTY_AUTHORIZATION_ISSUER_TIME = "authorizationIssuerTime";
  @javax.annotation.Nullable
  private String authorizationIssuerTime;

  public static final String JSON_PROPERTY_VALUE_DATE = "valueDate";
  @javax.annotation.Nullable
  private JsonNullable<String> valueDate = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PAYMENT_AMOUNT = "paymentAmount";
  @javax.annotation.Nullable
  private String paymentAmount;

  public static final String JSON_PROPERTY_PAYMENT_LOCAL_AMOUNT = "paymentLocalAmount";
  @javax.annotation.Nullable
  private String paymentLocalAmount;

  public static final String JSON_PROPERTY_PAYMENT_CURRENCY = "paymentCurrency";
  @javax.annotation.Nullable
  private String paymentCurrency;

  public PaymentLifeCycle() {
  }

  public PaymentLifeCycle authorizationIssuerTime(@javax.annotation.Nullable String authorizationIssuerTime) {
    
    this.authorizationIssuerTime = authorizationIssuerTime;
    return this;
  }

  /**
   * Get authorizationIssuerTime
   * @return authorizationIssuerTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHORIZATION_ISSUER_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthorizationIssuerTime() {
    return authorizationIssuerTime;
  }


  @JsonProperty(JSON_PROPERTY_AUTHORIZATION_ISSUER_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthorizationIssuerTime(@javax.annotation.Nullable String authorizationIssuerTime) {
    this.authorizationIssuerTime = authorizationIssuerTime;
  }

  public PaymentLifeCycle valueDate(@javax.annotation.Nullable String valueDate) {
    this.valueDate = JsonNullable.<String>of(valueDate);
    
    return this;
  }

  /**
   * Get valueDate
   * @return valueDate
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getValueDate() {
        return valueDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VALUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getValueDate_JsonNullable() {
    return valueDate;
  }
  
  @JsonProperty(JSON_PROPERTY_VALUE_DATE)
  public void setValueDate_JsonNullable(JsonNullable<String> valueDate) {
    this.valueDate = valueDate;
  }

  public void setValueDate(@javax.annotation.Nullable String valueDate) {
    this.valueDate = JsonNullable.<String>of(valueDate);
  }

  public PaymentLifeCycle paymentAmount(@javax.annotation.Nullable String paymentAmount) {
    
    this.paymentAmount = paymentAmount;
    return this;
  }

  /**
   * Get paymentAmount
   * @return paymentAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPaymentAmount() {
    return paymentAmount;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentAmount(@javax.annotation.Nullable String paymentAmount) {
    this.paymentAmount = paymentAmount;
  }

  public PaymentLifeCycle paymentLocalAmount(@javax.annotation.Nullable String paymentLocalAmount) {
    
    this.paymentLocalAmount = paymentLocalAmount;
    return this;
  }

  /**
   * Get paymentLocalAmount
   * @return paymentLocalAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_LOCAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPaymentLocalAmount() {
    return paymentLocalAmount;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_LOCAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentLocalAmount(@javax.annotation.Nullable String paymentLocalAmount) {
    this.paymentLocalAmount = paymentLocalAmount;
  }

  public PaymentLifeCycle paymentCurrency(@javax.annotation.Nullable String paymentCurrency) {
    
    this.paymentCurrency = paymentCurrency;
    return this;
  }

  /**
   * Get paymentCurrency
   * @return paymentCurrency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPaymentCurrency() {
    return paymentCurrency;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentCurrency(@javax.annotation.Nullable String paymentCurrency) {
    this.paymentCurrency = paymentCurrency;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentLifeCycle paymentLifeCycle = (PaymentLifeCycle) o;
    return Objects.equals(this.authorizationIssuerTime, paymentLifeCycle.authorizationIssuerTime) &&
        equalsNullable(this.valueDate, paymentLifeCycle.valueDate) &&
        Objects.equals(this.paymentAmount, paymentLifeCycle.paymentAmount) &&
        Objects.equals(this.paymentLocalAmount, paymentLifeCycle.paymentLocalAmount) &&
        Objects.equals(this.paymentCurrency, paymentLifeCycle.paymentCurrency);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorizationIssuerTime, hashCodeNullable(valueDate), paymentAmount, paymentLocalAmount, paymentCurrency);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentLifeCycle {\n");
    sb.append("    authorizationIssuerTime: ").append(toIndentedString(authorizationIssuerTime)).append("\n");
    sb.append("    valueDate: ").append(toIndentedString(valueDate)).append("\n");
    sb.append("    paymentAmount: ").append(toIndentedString(paymentAmount)).append("\n");
    sb.append("    paymentLocalAmount: ").append(toIndentedString(paymentLocalAmount)).append("\n");
    sb.append("    paymentCurrency: ").append(toIndentedString(paymentCurrency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

