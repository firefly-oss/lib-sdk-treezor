/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sdk.treezor.model.PutBeneficiaryRequestSddB2bWhitelistInner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PutBeneficiaryRequest
 */
@JsonPropertyOrder({
  PutBeneficiaryRequest.JSON_PROPERTY_ACCESS_TAG,
  PutBeneficiaryRequest.JSON_PROPERTY_TAG,
  PutBeneficiaryRequest.JSON_PROPERTY_NICK_NAME,
  PutBeneficiaryRequest.JSON_PROPERTY_NAME,
  PutBeneficiaryRequest.JSON_PROPERTY_ADDRESS,
  PutBeneficiaryRequest.JSON_PROPERTY_IBAN,
  PutBeneficiaryRequest.JSON_PROPERTY_BIC,
  PutBeneficiaryRequest.JSON_PROPERTY_IS_ACTIVE,
  PutBeneficiaryRequest.JSON_PROPERTY_SEPA_CREDITOR_IDENTIFIER,
  PutBeneficiaryRequest.JSON_PROPERTY_SDD_B2B_WHITELIST,
  PutBeneficiaryRequest.JSON_PROPERTY_SDD_CORE_BLACKLIST,
  PutBeneficiaryRequest.JSON_PROPERTY_USABLE_FOR_SCT
})
@JsonTypeName("putBeneficiary_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class PutBeneficiaryRequest {
  public static final String JSON_PROPERTY_ACCESS_TAG = "accessTag";
  @javax.annotation.Nullable
  private String accessTag;

  public static final String JSON_PROPERTY_TAG = "tag";
  @javax.annotation.Nullable
  private String tag;

  public static final String JSON_PROPERTY_NICK_NAME = "nickName";
  @javax.annotation.Nullable
  private String nickName;

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  @javax.annotation.Nullable
  private String address;

  public static final String JSON_PROPERTY_IBAN = "iban";
  @javax.annotation.Nullable
  private String iban;

  public static final String JSON_PROPERTY_BIC = "bic";
  @javax.annotation.Nullable
  private String bic;

  public static final String JSON_PROPERTY_IS_ACTIVE = "isActive";
  @javax.annotation.Nullable
  private Boolean isActive;

  public static final String JSON_PROPERTY_SEPA_CREDITOR_IDENTIFIER = "sepaCreditorIdentifier";
  @javax.annotation.Nullable
  private String sepaCreditorIdentifier;

  public static final String JSON_PROPERTY_SDD_B2B_WHITELIST = "sddB2bWhitelist";
  @javax.annotation.Nullable
  private List<PutBeneficiaryRequestSddB2bWhitelistInner> sddB2bWhitelist = new ArrayList<>();

  public static final String JSON_PROPERTY_SDD_CORE_BLACKLIST = "sddCoreBlacklist";
  @javax.annotation.Nullable
  private List<String> sddCoreBlacklist = new ArrayList<>();

  public static final String JSON_PROPERTY_USABLE_FOR_SCT = "usableForSct";
  @javax.annotation.Nullable
  private Boolean usableForSct = false;

  public PutBeneficiaryRequest() {
  }

  public PutBeneficiaryRequest accessTag(@javax.annotation.Nullable String accessTag) {
    
    this.accessTag = accessTag;
    return this;
  }

  /**
   * A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). 
   * @return accessTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccessTag() {
    return accessTag;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessTag(@javax.annotation.Nullable String accessTag) {
    this.accessTag = accessTag;
  }

  public PutBeneficiaryRequest tag(@javax.annotation.Nullable String tag) {
    
    this.tag = tag;
    return this;
  }

  /**
   * Custom data that could be used by caller to search theinstance. 
   * @return tag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTag() {
    return tag;
  }


  @JsonProperty(JSON_PROPERTY_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTag(@javax.annotation.Nullable String tag) {
    this.tag = tag;
  }

  public PutBeneficiaryRequest nickName(@javax.annotation.Nullable String nickName) {
    
    this.nickName = nickName;
    return this;
  }

  /**
   * Name choosen by end user to easily recognize the beneficiary. 
   * @return nickName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NICK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNickName() {
    return nickName;
  }


  @JsonProperty(JSON_PROPERTY_NICK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNickName(@javax.annotation.Nullable String nickName) {
    this.nickName = nickName;
  }

  public PutBeneficiaryRequest name(@javax.annotation.Nullable String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Beneficiary name, linked to bank account. Allowed characters are * &#x60;a&#x60; to &#x60;z&#x60; * &#x60;A&#x60; to &#x60;Z&#x60;  * &#x60;0&#x60; to &#x60;9&#x60;  * &#x60;/&#x60; &#x60;-&#x60; &#x60;?&#x60; &#x60;:&#x60; &#x60;(&#x60; &#x60;)&#x60; &#x60;.&#x60; &#x60;,&#x60; &#x60;&#39;&#x60; &#x60;+&#x60; &#x60;Space&#x60; 
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }

  public PutBeneficiaryRequest address(@javax.annotation.Nullable String address) {
    
    this.address = address;
    return this;
  }

  /**
   * Beneficiary address, linked to bank account.
   * @return address
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(@javax.annotation.Nullable String address) {
    this.address = address;
  }

  public PutBeneficiaryRequest iban(@javax.annotation.Nullable String iban) {
    
    this.iban = iban;
    return this;
  }

  /**
   * Beneficiary International Bank Account Number. Mandatory if usableForSct is true. 
   * @return iban
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIban() {
    return iban;
  }


  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIban(@javax.annotation.Nullable String iban) {
    this.iban = iban;
  }

  public PutBeneficiaryRequest bic(@javax.annotation.Nullable String bic) {
    
    this.bic = bic;
    return this;
  }

  /**
   * Beneficiary Bank Identifier Code. Mandatory if usableForSct is true. 
   * @return bic
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBic() {
    return bic;
  }


  @JsonProperty(JSON_PROPERTY_BIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBic(@javax.annotation.Nullable String bic) {
    this.bic = bic;
  }

  public PutBeneficiaryRequest isActive(@javax.annotation.Nullable Boolean isActive) {
    
    this.isActive = isActive;
    return this;
  }

  /**
   * Whether or not the Beneficiary is active.
   * @return isActive
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsActive() {
    return isActive;
  }


  @JsonProperty(JSON_PROPERTY_IS_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsActive(@javax.annotation.Nullable Boolean isActive) {
    this.isActive = isActive;
  }

  public PutBeneficiaryRequest sepaCreditorIdentifier(@javax.annotation.Nullable String sepaCreditorIdentifier) {
    
    this.sepaCreditorIdentifier = sepaCreditorIdentifier;
    return this;
  }

  /**
   * Beneficiary SEPA Creditor Identifier. Mandatory to validate incoming direct debit, useless other wise. Between 8 and 35 characters. If sddB2bWhitelist or sddCoreBlacklist is provided then sepaCreditorIdentifier is mandatory. 
   * @return sepaCreditorIdentifier
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEPA_CREDITOR_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSepaCreditorIdentifier() {
    return sepaCreditorIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_SEPA_CREDITOR_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSepaCreditorIdentifier(@javax.annotation.Nullable String sepaCreditorIdentifier) {
    this.sepaCreditorIdentifier = sepaCreditorIdentifier;
  }

  public PutBeneficiaryRequest sddB2bWhitelist(@javax.annotation.Nullable List<PutBeneficiaryRequestSddB2bWhitelistInner> sddB2bWhitelist) {
    
    this.sddB2bWhitelist = sddB2bWhitelist;
    return this;
  }

  public PutBeneficiaryRequest addSddB2bWhitelistItem(PutBeneficiaryRequestSddB2bWhitelistInner sddB2bWhitelistItem) {
    if (this.sddB2bWhitelist == null) {
      this.sddB2bWhitelist = new ArrayList<>();
    }
    this.sddB2bWhitelist.add(sddB2bWhitelistItem);
    return this;
  }

  /**
   * Each unique mandate reference, with its frequency type, must be explicitely allowed when doing B2B Direct Debit. Furthermore, a mandate not used during more than 36 months will be automatically rejected even if in the white list. 
   * @return sddB2bWhitelist
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SDD_B2B_WHITELIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PutBeneficiaryRequestSddB2bWhitelistInner> getSddB2bWhitelist() {
    return sddB2bWhitelist;
  }


  @JsonProperty(JSON_PROPERTY_SDD_B2B_WHITELIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSddB2bWhitelist(@javax.annotation.Nullable List<PutBeneficiaryRequestSddB2bWhitelistInner> sddB2bWhitelist) {
    this.sddB2bWhitelist = sddB2bWhitelist;
  }

  public PutBeneficiaryRequest sddCoreBlacklist(@javax.annotation.Nullable List<String> sddCoreBlacklist) {
    
    this.sddCoreBlacklist = sddCoreBlacklist;
    return this;
  }

  public PutBeneficiaryRequest addSddCoreBlacklistItem(String sddCoreBlacklistItem) {
    if (this.sddCoreBlacklist == null) {
      this.sddCoreBlacklist = new ArrayList<>();
    }
    this.sddCoreBlacklist.add(sddCoreBlacklistItem);
    return this;
  }

  /**
   * Core Direct Debit are accepted by default. If a Core mandate is to be refused on reception, it has to be added to this list. If wild char * (star) is used instead of a UMR, all Direct Debit from this beneficiary will be refused. 
   * @return sddCoreBlacklist
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SDD_CORE_BLACKLIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSddCoreBlacklist() {
    return sddCoreBlacklist;
  }


  @JsonProperty(JSON_PROPERTY_SDD_CORE_BLACKLIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSddCoreBlacklist(@javax.annotation.Nullable List<String> sddCoreBlacklist) {
    this.sddCoreBlacklist = sddCoreBlacklist;
  }

  public PutBeneficiaryRequest usableForSct(@javax.annotation.Nullable Boolean usableForSct) {
    
    this.usableForSct = usableForSct;
    return this;
  }

  /**
   * Indicated if the beneficiary can be used for SEPA Credit Transfer. This field is a conveniant way to filter all beneficiaries for a user that would like to do a Credit Transfer. Indeed, beneficaries are created automatically when receiving a Core Direct Debit and therefor by looking at the list you won&#39;t be able to idnetify which beneficary to use on SCT. 
   * @return usableForSct
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USABLE_FOR_SCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUsableForSct() {
    return usableForSct;
  }


  @JsonProperty(JSON_PROPERTY_USABLE_FOR_SCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsableForSct(@javax.annotation.Nullable Boolean usableForSct) {
    this.usableForSct = usableForSct;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutBeneficiaryRequest putBeneficiaryRequest = (PutBeneficiaryRequest) o;
    return Objects.equals(this.accessTag, putBeneficiaryRequest.accessTag) &&
        Objects.equals(this.tag, putBeneficiaryRequest.tag) &&
        Objects.equals(this.nickName, putBeneficiaryRequest.nickName) &&
        Objects.equals(this.name, putBeneficiaryRequest.name) &&
        Objects.equals(this.address, putBeneficiaryRequest.address) &&
        Objects.equals(this.iban, putBeneficiaryRequest.iban) &&
        Objects.equals(this.bic, putBeneficiaryRequest.bic) &&
        Objects.equals(this.isActive, putBeneficiaryRequest.isActive) &&
        Objects.equals(this.sepaCreditorIdentifier, putBeneficiaryRequest.sepaCreditorIdentifier) &&
        Objects.equals(this.sddB2bWhitelist, putBeneficiaryRequest.sddB2bWhitelist) &&
        Objects.equals(this.sddCoreBlacklist, putBeneficiaryRequest.sddCoreBlacklist) &&
        Objects.equals(this.usableForSct, putBeneficiaryRequest.usableForSct);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessTag, tag, nickName, name, address, iban, bic, isActive, sepaCreditorIdentifier, sddB2bWhitelist, sddCoreBlacklist, usableForSct);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutBeneficiaryRequest {\n");
    sb.append("    accessTag: ").append(toIndentedString(accessTag)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    nickName: ").append(toIndentedString(nickName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    bic: ").append(toIndentedString(bic)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    sepaCreditorIdentifier: ").append(toIndentedString(sepaCreditorIdentifier)).append("\n");
    sb.append("    sddB2bWhitelist: ").append(toIndentedString(sddB2bWhitelist)).append("\n");
    sb.append("    sddCoreBlacklist: ").append(toIndentedString(sddCoreBlacklist)).append("\n");
    sb.append("    usableForSct: ").append(toIndentedString(usableForSct)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

