/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CardPaymentMid
 */
@JsonPropertyOrder({
  CardPaymentMid.JSON_PROPERTY_VALUE,
  CardPaymentMid.JSON_PROPERTY_NAME,
  CardPaymentMid.JSON_PROPERTY_CITY,
  CardPaymentMid.JSON_PROPERTY_COUNTRY,
  CardPaymentMid.JSON_PROPERTY_ADDRESS,
  CardPaymentMid.JSON_PROPERTY_PAYMENT_COUNTRY
})
@JsonTypeName("CardPayment_mid")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class CardPaymentMid {
  public static final String JSON_PROPERTY_VALUE = "value";
  @javax.annotation.Nullable
  private String value;

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_CITY = "city";
  @javax.annotation.Nullable
  private JsonNullable<String> city = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COUNTRY = "country";
  @javax.annotation.Nullable
  private JsonNullable<String> country = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ADDRESS = "address";
  @javax.annotation.Nullable
  private JsonNullable<String> address = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PAYMENT_COUNTRY = "paymentCountry";
  @javax.annotation.Nullable
  private JsonNullable<String> paymentCountry = JsonNullable.<String>undefined();

  public CardPaymentMid() {
  }

  public CardPaymentMid value(@javax.annotation.Nullable String value) {
    
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(@javax.annotation.Nullable String value) {
    this.value = value;
  }

  public CardPaymentMid name(@javax.annotation.Nullable String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }

  public CardPaymentMid city(@javax.annotation.Nullable String city) {
    this.city = JsonNullable.<String>of(city);
    
    return this;
  }

  /**
   * Get city
   * @return city
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getCity() {
        return city.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCity_JsonNullable() {
    return city;
  }
  
  @JsonProperty(JSON_PROPERTY_CITY)
  public void setCity_JsonNullable(JsonNullable<String> city) {
    this.city = city;
  }

  public void setCity(@javax.annotation.Nullable String city) {
    this.city = JsonNullable.<String>of(city);
  }

  public CardPaymentMid country(@javax.annotation.Nullable String country) {
    this.country = JsonNullable.<String>of(country);
    
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getCountry() {
        return country.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCountry_JsonNullable() {
    return country;
  }
  
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  public void setCountry_JsonNullable(JsonNullable<String> country) {
    this.country = country;
  }

  public void setCountry(@javax.annotation.Nullable String country) {
    this.country = JsonNullable.<String>of(country);
  }

  public CardPaymentMid address(@javax.annotation.Nullable String address) {
    this.address = JsonNullable.<String>of(address);
    
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getAddress() {
        return address.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAddress_JsonNullable() {
    return address;
  }
  
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  public void setAddress_JsonNullable(JsonNullable<String> address) {
    this.address = address;
  }

  public void setAddress(@javax.annotation.Nullable String address) {
    this.address = JsonNullable.<String>of(address);
  }

  public CardPaymentMid paymentCountry(@javax.annotation.Nullable String paymentCountry) {
    this.paymentCountry = JsonNullable.<String>of(paymentCountry);
    
    return this;
  }

  /**
   * Get paymentCountry
   * @return paymentCountry
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPaymentCountry() {
        return paymentCountry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPaymentCountry_JsonNullable() {
    return paymentCountry;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_COUNTRY)
  public void setPaymentCountry_JsonNullable(JsonNullable<String> paymentCountry) {
    this.paymentCountry = paymentCountry;
  }

  public void setPaymentCountry(@javax.annotation.Nullable String paymentCountry) {
    this.paymentCountry = JsonNullable.<String>of(paymentCountry);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardPaymentMid cardPaymentMid = (CardPaymentMid) o;
    return Objects.equals(this.value, cardPaymentMid.value) &&
        Objects.equals(this.name, cardPaymentMid.name) &&
        equalsNullable(this.city, cardPaymentMid.city) &&
        equalsNullable(this.country, cardPaymentMid.country) &&
        equalsNullable(this.address, cardPaymentMid.address) &&
        equalsNullable(this.paymentCountry, cardPaymentMid.paymentCountry);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(value, name, hashCodeNullable(city), hashCodeNullable(country), hashCodeNullable(address), hashCodeNullable(paymentCountry));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardPaymentMid {\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    paymentCountry: ").append(toIndentedString(paymentCountry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

