/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateSupportUserRequest
 */
@JsonPropertyOrder({
  CreateSupportUserRequest.JSON_PROPERTY_USERNAME,
  CreateSupportUserRequest.JSON_PROPERTY_PASSWORD,
  CreateSupportUserRequest.JSON_PROPERTY_SCOPES,
  CreateSupportUserRequest.JSON_PROPERTY_SAML_KEY
})
@JsonTypeName("createSupportUser_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class CreateSupportUserRequest {
  public static final String JSON_PROPERTY_USERNAME = "username";
  @javax.annotation.Nullable
  private String username;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  @javax.annotation.Nullable
  private String password;

  /**
   * Gets or Sets scopes
   */
  public enum ScopesEnum {
    READ_WRITE(String.valueOf("read_write")),
    
    READ_ONLY(String.valueOf("read_only")),
    
    ADMIN(String.valueOf("admin")),
    
    SUPPORT_USER_MANAGEMENT(String.valueOf("support_user_management")),
    
    LEGAL(String.valueOf("legal"));

    private String value;

    ScopesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ScopesEnum fromValue(String value) {
      for (ScopesEnum b : ScopesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SCOPES = "scopes";
  @javax.annotation.Nullable
  private List<ScopesEnum> scopes = new ArrayList<>();

  public static final String JSON_PROPERTY_SAML_KEY = "samlKey";
  @javax.annotation.Nullable
  private String samlKey;

  public CreateSupportUserRequest() {
  }

  public CreateSupportUserRequest username(@javax.annotation.Nullable String username) {
    
    this.username = username;
    return this;
  }

  /**
   * The identifier the user will use for logging in to the Dashboard or your own backoffice.
   * @return username
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsername(@javax.annotation.Nullable String username) {
    this.username = username;
  }

  public CreateSupportUserRequest password(@javax.annotation.Nullable String password) {
    
    this.password = password;
    return this;
  }

  /**
   * The password the user will use for logging in to the Dashboard or your own backoffice. Expected in cleartext.
   * @return password
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassword(@javax.annotation.Nullable String password) {
    this.password = password;
  }

  public CreateSupportUserRequest scopes(@javax.annotation.Nullable List<ScopesEnum> scopes) {
    
    this.scopes = scopes;
    return this;
  }

  public CreateSupportUserRequest addScopesItem(ScopesEnum scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

  /**
   * Set of permissions for your Support User. Learn more in the [Scope &amp; Permissions](/guide/api-basics/authentication.html#scopes-permissions) article. 
   * @return scopes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ScopesEnum> getScopes() {
    return scopes;
  }


  @JsonProperty(JSON_PROPERTY_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScopes(@javax.annotation.Nullable List<ScopesEnum> scopes) {
    this.scopes = scopes;
  }

  public CreateSupportUserRequest samlKey(@javax.annotation.Nullable String samlKey) {
    
    this.samlKey = samlKey;
    return this;
  }

  /**
   * Optional key to link automatically a Support User to a [Dashboard](/guide/dashboard/introduction.html) OAuth2 client. 
   * @return samlKey
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SAML_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSamlKey() {
    return samlKey;
  }


  @JsonProperty(JSON_PROPERTY_SAML_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSamlKey(@javax.annotation.Nullable String samlKey) {
    this.samlKey = samlKey;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSupportUserRequest createSupportUserRequest = (CreateSupportUserRequest) o;
    return Objects.equals(this.username, createSupportUserRequest.username) &&
        Objects.equals(this.password, createSupportUserRequest.password) &&
        Objects.equals(this.scopes, createSupportUserRequest.scopes) &&
        Objects.equals(this.samlKey, createSupportUserRequest.samlKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, password, scopes, samlKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSupportUserRequest {\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    samlKey: ").append(toIndentedString(samlKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

