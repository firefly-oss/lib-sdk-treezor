/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StatementPayinRefund
 */
@JsonPropertyOrder({
  StatementPayinRefund.JSON_PROPERTY_PAYIN_REFUND_ID,
  StatementPayinRefund.JSON_PROPERTY_PAYIN_ID,
  StatementPayinRefund.JSON_PROPERTY_PAYIN_TAG,
  StatementPayinRefund.JSON_PROPERTY_LABEL,
  StatementPayinRefund.JSON_PROPERTY_IBAN_FULLNAME,
  StatementPayinRefund.JSON_PROPERTY_DBTR_I_B_A_N,
  StatementPayinRefund.JSON_PROPERTY_DEBTOR_NAME,
  StatementPayinRefund.JSON_PROPERTY_UNIQUE_MANDATE_REFERENCE,
  StatementPayinRefund.JSON_PROPERTY_ADDITIONAL_DATA
})
@JsonTypeName("statementPayinRefund")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class StatementPayinRefund {
  public static final String JSON_PROPERTY_PAYIN_REFUND_ID = "payinRefundId";
  @javax.annotation.Nullable
  private String payinRefundId;

  public static final String JSON_PROPERTY_PAYIN_ID = "payinId";
  @javax.annotation.Nullable
  private String payinId;

  public static final String JSON_PROPERTY_PAYIN_TAG = "payinTag";
  @javax.annotation.Nullable
  private JsonNullable<String> payinTag = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LABEL = "label";
  @javax.annotation.Nullable
  private JsonNullable<String> label = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IBAN_FULLNAME = "ibanFullname";
  @javax.annotation.Nullable
  private JsonNullable<String> ibanFullname = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DBTR_I_B_A_N = "dbtrIBAN";
  @javax.annotation.Nullable
  private JsonNullable<String> dbtrIBAN = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DEBTOR_NAME = "debtorName";
  @javax.annotation.Nullable
  private JsonNullable<String> debtorName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UNIQUE_MANDATE_REFERENCE = "uniqueMandateReference";
  @javax.annotation.Nullable
  private JsonNullable<String> uniqueMandateReference = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ADDITIONAL_DATA = "additionalData";
  @javax.annotation.Nullable
  private JsonNullable<List<String>> additionalData = JsonNullable.<List<String>>undefined();

  public StatementPayinRefund() {
  }

  public StatementPayinRefund payinRefundId(@javax.annotation.Nullable String payinRefundId) {
    
    this.payinRefundId = payinRefundId;
    return this;
  }

  /**
   * Get payinRefundId
   * @return payinRefundId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYIN_REFUND_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPayinRefundId() {
    return payinRefundId;
  }


  @JsonProperty(JSON_PROPERTY_PAYIN_REFUND_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayinRefundId(@javax.annotation.Nullable String payinRefundId) {
    this.payinRefundId = payinRefundId;
  }

  public StatementPayinRefund payinId(@javax.annotation.Nullable String payinId) {
    
    this.payinId = payinId;
    return this;
  }

  /**
   * Get payinId
   * @return payinId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYIN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPayinId() {
    return payinId;
  }


  @JsonProperty(JSON_PROPERTY_PAYIN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayinId(@javax.annotation.Nullable String payinId) {
    this.payinId = payinId;
  }

  public StatementPayinRefund payinTag(@javax.annotation.Nullable String payinTag) {
    this.payinTag = JsonNullable.<String>of(payinTag);
    
    return this;
  }

  /**
   * Get payinTag
   * @return payinTag
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPayinTag() {
        return payinTag.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYIN_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPayinTag_JsonNullable() {
    return payinTag;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYIN_TAG)
  public void setPayinTag_JsonNullable(JsonNullable<String> payinTag) {
    this.payinTag = payinTag;
  }

  public void setPayinTag(@javax.annotation.Nullable String payinTag) {
    this.payinTag = JsonNullable.<String>of(payinTag);
  }

  public StatementPayinRefund label(@javax.annotation.Nullable String label) {
    this.label = JsonNullable.<String>of(label);
    
    return this;
  }

  /**
   * Get label
   * @return label
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getLabel() {
        return label.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLabel_JsonNullable() {
    return label;
  }
  
  @JsonProperty(JSON_PROPERTY_LABEL)
  public void setLabel_JsonNullable(JsonNullable<String> label) {
    this.label = label;
  }

  public void setLabel(@javax.annotation.Nullable String label) {
    this.label = JsonNullable.<String>of(label);
  }

  public StatementPayinRefund ibanFullname(@javax.annotation.Nullable String ibanFullname) {
    this.ibanFullname = JsonNullable.<String>of(ibanFullname);
    
    return this;
  }

  /**
   * Get ibanFullname
   * @return ibanFullname
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getIbanFullname() {
        return ibanFullname.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBAN_FULLNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIbanFullname_JsonNullable() {
    return ibanFullname;
  }
  
  @JsonProperty(JSON_PROPERTY_IBAN_FULLNAME)
  public void setIbanFullname_JsonNullable(JsonNullable<String> ibanFullname) {
    this.ibanFullname = ibanFullname;
  }

  public void setIbanFullname(@javax.annotation.Nullable String ibanFullname) {
    this.ibanFullname = JsonNullable.<String>of(ibanFullname);
  }

  public StatementPayinRefund dbtrIBAN(@javax.annotation.Nullable String dbtrIBAN) {
    this.dbtrIBAN = JsonNullable.<String>of(dbtrIBAN);
    
    return this;
  }

  /**
   * Get dbtrIBAN
   * @return dbtrIBAN
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getDbtrIBAN() {
        return dbtrIBAN.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DBTR_I_B_A_N)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDbtrIBAN_JsonNullable() {
    return dbtrIBAN;
  }
  
  @JsonProperty(JSON_PROPERTY_DBTR_I_B_A_N)
  public void setDbtrIBAN_JsonNullable(JsonNullable<String> dbtrIBAN) {
    this.dbtrIBAN = dbtrIBAN;
  }

  public void setDbtrIBAN(@javax.annotation.Nullable String dbtrIBAN) {
    this.dbtrIBAN = JsonNullable.<String>of(dbtrIBAN);
  }

  public StatementPayinRefund debtorName(@javax.annotation.Nullable String debtorName) {
    this.debtorName = JsonNullable.<String>of(debtorName);
    
    return this;
  }

  /**
   * Get debtorName
   * @return debtorName
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getDebtorName() {
        return debtorName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEBTOR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDebtorName_JsonNullable() {
    return debtorName;
  }
  
  @JsonProperty(JSON_PROPERTY_DEBTOR_NAME)
  public void setDebtorName_JsonNullable(JsonNullable<String> debtorName) {
    this.debtorName = debtorName;
  }

  public void setDebtorName(@javax.annotation.Nullable String debtorName) {
    this.debtorName = JsonNullable.<String>of(debtorName);
  }

  public StatementPayinRefund uniqueMandateReference(@javax.annotation.Nullable String uniqueMandateReference) {
    this.uniqueMandateReference = JsonNullable.<String>of(uniqueMandateReference);
    
    return this;
  }

  /**
   * The unique reference that unambiguiously identify a mandate signed between the user and the beneficiary.                 See the [Unique Mandate Reference (UMR)](/guide/overview/glossary.html#unique-mandate-reference-umr) article for more information. 
   * @return uniqueMandateReference
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getUniqueMandateReference() {
        return uniqueMandateReference.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIQUE_MANDATE_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUniqueMandateReference_JsonNullable() {
    return uniqueMandateReference;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIQUE_MANDATE_REFERENCE)
  public void setUniqueMandateReference_JsonNullable(JsonNullable<String> uniqueMandateReference) {
    this.uniqueMandateReference = uniqueMandateReference;
  }

  public void setUniqueMandateReference(@javax.annotation.Nullable String uniqueMandateReference) {
    this.uniqueMandateReference = JsonNullable.<String>of(uniqueMandateReference);
  }

  public StatementPayinRefund additionalData(@javax.annotation.Nullable List<String> additionalData) {
    this.additionalData = JsonNullable.<List<String>>of(additionalData);
    
    return this;
  }

  public StatementPayinRefund addAdditionalDataItem(String additionalDataItem) {
    if (this.additionalData == null || !this.additionalData.isPresent()) {
      this.additionalData = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.additionalData.get().add(additionalDataItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get additionalData
   * @return additionalData
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public List<String> getAdditionalData() {
        return additionalData.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADDITIONAL_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getAdditionalData_JsonNullable() {
    return additionalData;
  }
  
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_DATA)
  public void setAdditionalData_JsonNullable(JsonNullable<List<String>> additionalData) {
    this.additionalData = additionalData;
  }

  public void setAdditionalData(@javax.annotation.Nullable List<String> additionalData) {
    this.additionalData = JsonNullable.<List<String>>of(additionalData);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatementPayinRefund statementPayinRefund = (StatementPayinRefund) o;
    return Objects.equals(this.payinRefundId, statementPayinRefund.payinRefundId) &&
        Objects.equals(this.payinId, statementPayinRefund.payinId) &&
        equalsNullable(this.payinTag, statementPayinRefund.payinTag) &&
        equalsNullable(this.label, statementPayinRefund.label) &&
        equalsNullable(this.ibanFullname, statementPayinRefund.ibanFullname) &&
        equalsNullable(this.dbtrIBAN, statementPayinRefund.dbtrIBAN) &&
        equalsNullable(this.debtorName, statementPayinRefund.debtorName) &&
        equalsNullable(this.uniqueMandateReference, statementPayinRefund.uniqueMandateReference) &&
        equalsNullable(this.additionalData, statementPayinRefund.additionalData);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(payinRefundId, payinId, hashCodeNullable(payinTag), hashCodeNullable(label), hashCodeNullable(ibanFullname), hashCodeNullable(dbtrIBAN), hashCodeNullable(debtorName), hashCodeNullable(uniqueMandateReference), hashCodeNullable(additionalData));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatementPayinRefund {\n");
    sb.append("    payinRefundId: ").append(toIndentedString(payinRefundId)).append("\n");
    sb.append("    payinId: ").append(toIndentedString(payinId)).append("\n");
    sb.append("    payinTag: ").append(toIndentedString(payinTag)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    ibanFullname: ").append(toIndentedString(ibanFullname)).append("\n");
    sb.append("    dbtrIBAN: ").append(toIndentedString(dbtrIBAN)).append("\n");
    sb.append("    debtorName: ").append(toIndentedString(debtorName)).append("\n");
    sb.append("    uniqueMandateReference: ").append(toIndentedString(uniqueMandateReference)).append("\n");
    sb.append("    additionalData: ").append(toIndentedString(additionalData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

