/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PutMidMetadataRequestInner
 */
@JsonPropertyOrder({
  PutMidMetadataRequestInner.JSON_PROPERTY_MID
})
@JsonTypeName("putMidMetadata_request_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class PutMidMetadataRequestInner {
  public static final String JSON_PROPERTY_MID = "mid";
  @javax.annotation.Nullable
  private Integer mid;

  public PutMidMetadataRequestInner() {
  }

  public PutMidMetadataRequestInner mid(@javax.annotation.Nullable Integer mid) {
    
    this.mid = mid;
    return this;
  }

  /**
   * Get mid
   * @return mid
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMid() {
    return mid;
  }


  @JsonProperty(JSON_PROPERTY_MID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMid(@javax.annotation.Nullable Integer mid) {
    this.mid = mid;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, String> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   * @param key the name of the property
   * @param value the value of the property
   * @return self reference
   */
  @JsonAnySetter
  public PutMidMetadataRequestInner putAdditionalProperty(String key, String value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, String>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) properties.
   * @return the additional (undeclared) properties
   */
  @JsonAnyGetter
  public Map<String, String> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   * @param key the name of the property
   * @return the additional (undeclared) property with the specified name
   */
  public String getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutMidMetadataRequestInner putMidMetadataRequestInner = (PutMidMetadataRequestInner) o;
    return Objects.equals(this.mid, putMidMetadataRequestInner.mid) &&
        Objects.equals(this.additionalProperties, putMidMetadataRequestInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mid, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutMidMetadataRequestInner {\n");
    sb.append("    mid: ").append(toIndentedString(mid)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

