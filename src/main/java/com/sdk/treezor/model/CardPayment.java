/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sdk.treezor.model.CardPaymentAuthorisationResponseCode;
import com.sdk.treezor.model.CardPaymentLocalAmount;
import com.sdk.treezor.model.CardPaymentMcc;
import com.sdk.treezor.model.CardPaymentMid;
import com.sdk.treezor.model.PaymentLifeCycle;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CardPayment
 */
@JsonPropertyOrder({
  CardPayment.JSON_PROPERTY_MCC,
  CardPayment.JSON_PROPERTY_MID,
  CardPayment.JSON_PROPERTY_LOCAL_AMOUNT,
  CardPayment.JSON_PROPERTY_AUTHORISATION_RESPONSE_CODE,
  CardPayment.JSON_PROPERTY_PAYMENT_LIFE_CYCLE,
  CardPayment.JSON_PROPERTY_PAYMENT_COUNTRY,
  CardPayment.JSON_PROPERTY_CARD_ID,
  CardPayment.JSON_PROPERTY_PUBLIC_TOKEN,
  CardPayment.JSON_PROPERTY_MASKED_PAN,
  CardPayment.JSON_PROPERTY_IS3_D_S,
  CardPayment.JSON_PROPERTY_3DS_EXEMPTION_TYPE,
  CardPayment.JSON_PROPERTY_OPTIMIZED_MERCHANT_NAME,
  CardPayment.JSON_PROPERTY_MERCHANT_LOGO,
  CardPayment.JSON_PROPERTY_MERCHANT_CATEGORY,
  CardPayment.JSON_PROPERTY_TRANSACTION_SUBTYPE,
  CardPayment.JSON_PROPERTY_AUTHORIZATION_NOTE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class CardPayment {
  public static final String JSON_PROPERTY_MCC = "mcc";
  @javax.annotation.Nullable
  private CardPaymentMcc mcc;

  public static final String JSON_PROPERTY_MID = "mid";
  @javax.annotation.Nullable
  private CardPaymentMid mid;

  public static final String JSON_PROPERTY_LOCAL_AMOUNT = "localAmount";
  @javax.annotation.Nullable
  private CardPaymentLocalAmount localAmount;

  public static final String JSON_PROPERTY_AUTHORISATION_RESPONSE_CODE = "authorisationResponseCode";
  @javax.annotation.Nullable
  private CardPaymentAuthorisationResponseCode authorisationResponseCode;

  public static final String JSON_PROPERTY_PAYMENT_LIFE_CYCLE = "paymentLifeCycle";
  @javax.annotation.Nullable
  private List<PaymentLifeCycle> paymentLifeCycle = new ArrayList<>();

  public static final String JSON_PROPERTY_PAYMENT_COUNTRY = "paymentCountry";
  @javax.annotation.Nullable
  private JsonNullable<String> paymentCountry = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CARD_ID = "cardId";
  @javax.annotation.Nullable
  private String cardId;

  public static final String JSON_PROPERTY_PUBLIC_TOKEN = "publicToken";
  @javax.annotation.Nullable
  private String publicToken;

  public static final String JSON_PROPERTY_MASKED_PAN = "maskedPan";
  @javax.annotation.Nullable
  private String maskedPan;

  public static final String JSON_PROPERTY_IS3_D_S = "is3DS";
  @javax.annotation.Nullable
  private JsonNullable<String> is3DS = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_3DS_EXEMPTION_TYPE = "3dsExemptionType";
  @javax.annotation.Nullable
  private JsonNullable<String> _3dsExemptionType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OPTIMIZED_MERCHANT_NAME = "optimizedMerchantName";
  @javax.annotation.Nullable
  private JsonNullable<String> optimizedMerchantName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MERCHANT_LOGO = "merchantLogo";
  @javax.annotation.Nullable
  private JsonNullable<String> merchantLogo = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MERCHANT_CATEGORY = "merchantCategory";
  @javax.annotation.Nullable
  private JsonNullable<String> merchantCategory = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TRANSACTION_SUBTYPE = "transactionSubtype";
  @javax.annotation.Nullable
  private JsonNullable<String> transactionSubtype = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTHORIZATION_NOTE = "authorizationNote";
  @javax.annotation.Nullable
  private String authorizationNote;

  public CardPayment() {
  }

  public CardPayment mcc(@javax.annotation.Nullable CardPaymentMcc mcc) {
    
    this.mcc = mcc;
    return this;
  }

  /**
   * Get mcc
   * @return mcc
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MCC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CardPaymentMcc getMcc() {
    return mcc;
  }


  @JsonProperty(JSON_PROPERTY_MCC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMcc(@javax.annotation.Nullable CardPaymentMcc mcc) {
    this.mcc = mcc;
  }

  public CardPayment mid(@javax.annotation.Nullable CardPaymentMid mid) {
    
    this.mid = mid;
    return this;
  }

  /**
   * Get mid
   * @return mid
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CardPaymentMid getMid() {
    return mid;
  }


  @JsonProperty(JSON_PROPERTY_MID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMid(@javax.annotation.Nullable CardPaymentMid mid) {
    this.mid = mid;
  }

  public CardPayment localAmount(@javax.annotation.Nullable CardPaymentLocalAmount localAmount) {
    
    this.localAmount = localAmount;
    return this;
  }

  /**
   * Get localAmount
   * @return localAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CardPaymentLocalAmount getLocalAmount() {
    return localAmount;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocalAmount(@javax.annotation.Nullable CardPaymentLocalAmount localAmount) {
    this.localAmount = localAmount;
  }

  public CardPayment authorisationResponseCode(@javax.annotation.Nullable CardPaymentAuthorisationResponseCode authorisationResponseCode) {
    
    this.authorisationResponseCode = authorisationResponseCode;
    return this;
  }

  /**
   * Get authorisationResponseCode
   * @return authorisationResponseCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHORISATION_RESPONSE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CardPaymentAuthorisationResponseCode getAuthorisationResponseCode() {
    return authorisationResponseCode;
  }


  @JsonProperty(JSON_PROPERTY_AUTHORISATION_RESPONSE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthorisationResponseCode(@javax.annotation.Nullable CardPaymentAuthorisationResponseCode authorisationResponseCode) {
    this.authorisationResponseCode = authorisationResponseCode;
  }

  public CardPayment paymentLifeCycle(@javax.annotation.Nullable List<PaymentLifeCycle> paymentLifeCycle) {
    
    this.paymentLifeCycle = paymentLifeCycle;
    return this;
  }

  public CardPayment addPaymentLifeCycleItem(PaymentLifeCycle paymentLifeCycleItem) {
    if (this.paymentLifeCycle == null) {
      this.paymentLifeCycle = new ArrayList<>();
    }
    this.paymentLifeCycle.add(paymentLifeCycleItem);
    return this;
  }

  /**
   * Get paymentLifeCycle
   * @return paymentLifeCycle
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_LIFE_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PaymentLifeCycle> getPaymentLifeCycle() {
    return paymentLifeCycle;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_LIFE_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentLifeCycle(@javax.annotation.Nullable List<PaymentLifeCycle> paymentLifeCycle) {
    this.paymentLifeCycle = paymentLifeCycle;
  }

  public CardPayment paymentCountry(@javax.annotation.Nullable String paymentCountry) {
    this.paymentCountry = JsonNullable.<String>of(paymentCountry);
    
    return this;
  }

  /**
   * Get paymentCountry
   * @return paymentCountry
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPaymentCountry() {
        return paymentCountry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPaymentCountry_JsonNullable() {
    return paymentCountry;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_COUNTRY)
  public void setPaymentCountry_JsonNullable(JsonNullable<String> paymentCountry) {
    this.paymentCountry = paymentCountry;
  }

  public void setPaymentCountry(@javax.annotation.Nullable String paymentCountry) {
    this.paymentCountry = JsonNullable.<String>of(paymentCountry);
  }

  public CardPayment cardId(@javax.annotation.Nullable String cardId) {
    
    this.cardId = cardId;
    return this;
  }

  /**
   * Get cardId
   * @return cardId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCardId() {
    return cardId;
  }


  @JsonProperty(JSON_PROPERTY_CARD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardId(@javax.annotation.Nullable String cardId) {
    this.cardId = cardId;
  }

  public CardPayment publicToken(@javax.annotation.Nullable String publicToken) {
    
    this.publicToken = publicToken;
    return this;
  }

  /**
   * Get publicToken
   * @return publicToken
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLIC_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPublicToken() {
    return publicToken;
  }


  @JsonProperty(JSON_PROPERTY_PUBLIC_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublicToken(@javax.annotation.Nullable String publicToken) {
    this.publicToken = publicToken;
  }

  public CardPayment maskedPan(@javax.annotation.Nullable String maskedPan) {
    
    this.maskedPan = maskedPan;
    return this;
  }

  /**
   * Get maskedPan
   * @return maskedPan
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MASKED_PAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMaskedPan() {
    return maskedPan;
  }


  @JsonProperty(JSON_PROPERTY_MASKED_PAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaskedPan(@javax.annotation.Nullable String maskedPan) {
    this.maskedPan = maskedPan;
  }

  public CardPayment is3DS(@javax.annotation.Nullable String is3DS) {
    this.is3DS = JsonNullable.<String>of(is3DS);
    
    return this;
  }

  /**
   * Get is3DS
   * @return is3DS
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getIs3DS() {
        return is3DS.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS3_D_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIs3DS_JsonNullable() {
    return is3DS;
  }
  
  @JsonProperty(JSON_PROPERTY_IS3_D_S)
  public void setIs3DS_JsonNullable(JsonNullable<String> is3DS) {
    this.is3DS = is3DS;
  }

  public void setIs3DS(@javax.annotation.Nullable String is3DS) {
    this.is3DS = JsonNullable.<String>of(is3DS);
  }

  public CardPayment _3dsExemptionType(@javax.annotation.Nullable String _3dsExemptionType) {
    this._3dsExemptionType = JsonNullable.<String>of(_3dsExemptionType);
    
    return this;
  }

  /**
   * Indicates why the transaction was exempted for 3DS authentication. See [3DS Exemption Type](/guide/cards/transactions.html#_3ds-exemption-type-3dsexemptiontype) for the value list. 
   * @return _3dsExemptionType
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String get3dsExemptionType() {
        return _3dsExemptionType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_3DS_EXEMPTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> get3dsExemptionType_JsonNullable() {
    return _3dsExemptionType;
  }
  
  @JsonProperty(JSON_PROPERTY_3DS_EXEMPTION_TYPE)
  public void set3dsExemptionType_JsonNullable(JsonNullable<String> _3dsExemptionType) {
    this._3dsExemptionType = _3dsExemptionType;
  }

  public void set3dsExemptionType(@javax.annotation.Nullable String _3dsExemptionType) {
    this._3dsExemptionType = JsonNullable.<String>of(_3dsExemptionType);
  }

  public CardPayment optimizedMerchantName(@javax.annotation.Nullable String optimizedMerchantName) {
    this.optimizedMerchantName = JsonNullable.<String>of(optimizedMerchantName);
    
    return this;
  }

  /**
   * Get optimizedMerchantName
   * @return optimizedMerchantName
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getOptimizedMerchantName() {
        return optimizedMerchantName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPTIMIZED_MERCHANT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOptimizedMerchantName_JsonNullable() {
    return optimizedMerchantName;
  }
  
  @JsonProperty(JSON_PROPERTY_OPTIMIZED_MERCHANT_NAME)
  public void setOptimizedMerchantName_JsonNullable(JsonNullable<String> optimizedMerchantName) {
    this.optimizedMerchantName = optimizedMerchantName;
  }

  public void setOptimizedMerchantName(@javax.annotation.Nullable String optimizedMerchantName) {
    this.optimizedMerchantName = JsonNullable.<String>of(optimizedMerchantName);
  }

  public CardPayment merchantLogo(@javax.annotation.Nullable String merchantLogo) {
    this.merchantLogo = JsonNullable.<String>of(merchantLogo);
    
    return this;
  }

  /**
   * Get merchantLogo
   * @return merchantLogo
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getMerchantLogo() {
        return merchantLogo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MERCHANT_LOGO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMerchantLogo_JsonNullable() {
    return merchantLogo;
  }
  
  @JsonProperty(JSON_PROPERTY_MERCHANT_LOGO)
  public void setMerchantLogo_JsonNullable(JsonNullable<String> merchantLogo) {
    this.merchantLogo = merchantLogo;
  }

  public void setMerchantLogo(@javax.annotation.Nullable String merchantLogo) {
    this.merchantLogo = JsonNullable.<String>of(merchantLogo);
  }

  public CardPayment merchantCategory(@javax.annotation.Nullable String merchantCategory) {
    this.merchantCategory = JsonNullable.<String>of(merchantCategory);
    
    return this;
  }

  /**
   * Get merchantCategory
   * @return merchantCategory
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getMerchantCategory() {
        return merchantCategory.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MERCHANT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMerchantCategory_JsonNullable() {
    return merchantCategory;
  }
  
  @JsonProperty(JSON_PROPERTY_MERCHANT_CATEGORY)
  public void setMerchantCategory_JsonNullable(JsonNullable<String> merchantCategory) {
    this.merchantCategory = merchantCategory;
  }

  public void setMerchantCategory(@javax.annotation.Nullable String merchantCategory) {
    this.merchantCategory = JsonNullable.<String>of(merchantCategory);
  }

  public CardPayment transactionSubtype(@javax.annotation.Nullable String transactionSubtype) {
    this.transactionSubtype = JsonNullable.<String>of(transactionSubtype);
    
    return this;
  }

  /**
   * Additional information regarding the type of card transaction. Values can be:   * &#x60;OFT&#x60; – Offline transaction   * &#x60;PRE&#x60; – Preauthorization   * &#x60;SEP&#x60; – Second presentment 
   * @return transactionSubtype
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getTransactionSubtype() {
        return transactionSubtype.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRANSACTION_SUBTYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTransactionSubtype_JsonNullable() {
    return transactionSubtype;
  }
  
  @JsonProperty(JSON_PROPERTY_TRANSACTION_SUBTYPE)
  public void setTransactionSubtype_JsonNullable(JsonNullable<String> transactionSubtype) {
    this.transactionSubtype = transactionSubtype;
  }

  public void setTransactionSubtype(@javax.annotation.Nullable String transactionSubtype) {
    this.transactionSubtype = JsonNullable.<String>of(transactionSubtype);
  }

  public CardPayment authorizationNote(@javax.annotation.Nullable String authorizationNote) {
    
    this.authorizationNote = authorizationNote;
    return this;
  }

  /**
   * Get authorizationNote
   * @return authorizationNote
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHORIZATION_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthorizationNote() {
    return authorizationNote;
  }


  @JsonProperty(JSON_PROPERTY_AUTHORIZATION_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthorizationNote(@javax.annotation.Nullable String authorizationNote) {
    this.authorizationNote = authorizationNote;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardPayment cardPayment = (CardPayment) o;
    return Objects.equals(this.mcc, cardPayment.mcc) &&
        Objects.equals(this.mid, cardPayment.mid) &&
        Objects.equals(this.localAmount, cardPayment.localAmount) &&
        Objects.equals(this.authorisationResponseCode, cardPayment.authorisationResponseCode) &&
        Objects.equals(this.paymentLifeCycle, cardPayment.paymentLifeCycle) &&
        equalsNullable(this.paymentCountry, cardPayment.paymentCountry) &&
        Objects.equals(this.cardId, cardPayment.cardId) &&
        Objects.equals(this.publicToken, cardPayment.publicToken) &&
        Objects.equals(this.maskedPan, cardPayment.maskedPan) &&
        equalsNullable(this.is3DS, cardPayment.is3DS) &&
        equalsNullable(this._3dsExemptionType, cardPayment._3dsExemptionType) &&
        equalsNullable(this.optimizedMerchantName, cardPayment.optimizedMerchantName) &&
        equalsNullable(this.merchantLogo, cardPayment.merchantLogo) &&
        equalsNullable(this.merchantCategory, cardPayment.merchantCategory) &&
        equalsNullable(this.transactionSubtype, cardPayment.transactionSubtype) &&
        Objects.equals(this.authorizationNote, cardPayment.authorizationNote);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(mcc, mid, localAmount, authorisationResponseCode, paymentLifeCycle, hashCodeNullable(paymentCountry), cardId, publicToken, maskedPan, hashCodeNullable(is3DS), hashCodeNullable(_3dsExemptionType), hashCodeNullable(optimizedMerchantName), hashCodeNullable(merchantLogo), hashCodeNullable(merchantCategory), hashCodeNullable(transactionSubtype), authorizationNote);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardPayment {\n");
    sb.append("    mcc: ").append(toIndentedString(mcc)).append("\n");
    sb.append("    mid: ").append(toIndentedString(mid)).append("\n");
    sb.append("    localAmount: ").append(toIndentedString(localAmount)).append("\n");
    sb.append("    authorisationResponseCode: ").append(toIndentedString(authorisationResponseCode)).append("\n");
    sb.append("    paymentLifeCycle: ").append(toIndentedString(paymentLifeCycle)).append("\n");
    sb.append("    paymentCountry: ").append(toIndentedString(paymentCountry)).append("\n");
    sb.append("    cardId: ").append(toIndentedString(cardId)).append("\n");
    sb.append("    publicToken: ").append(toIndentedString(publicToken)).append("\n");
    sb.append("    maskedPan: ").append(toIndentedString(maskedPan)).append("\n");
    sb.append("    is3DS: ").append(toIndentedString(is3DS)).append("\n");
    sb.append("    _3dsExemptionType: ").append(toIndentedString(_3dsExemptionType)).append("\n");
    sb.append("    optimizedMerchantName: ").append(toIndentedString(optimizedMerchantName)).append("\n");
    sb.append("    merchantLogo: ").append(toIndentedString(merchantLogo)).append("\n");
    sb.append("    merchantCategory: ").append(toIndentedString(merchantCategory)).append("\n");
    sb.append("    transactionSubtype: ").append(toIndentedString(transactionSubtype)).append("\n");
    sb.append("    authorizationNote: ").append(toIndentedString(authorizationNote)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

