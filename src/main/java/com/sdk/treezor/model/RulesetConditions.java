/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RulesetConditions
 */
@JsonPropertyOrder({
  RulesetConditions.JSON_PROPERTY_ALL,
  RulesetConditions.JSON_PROPERTY_ANY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class RulesetConditions {
  public static final String JSON_PROPERTY_ALL = "all";
  @javax.annotation.Nullable
  private List<Object> all = new ArrayList<>();

  public static final String JSON_PROPERTY_ANY = "any";
  @javax.annotation.Nullable
  private List<Object> any = new ArrayList<>();

  public RulesetConditions() {
  }

  public RulesetConditions all(@javax.annotation.Nullable List<Object> all) {
    
    this.all = all;
    return this;
  }

  public RulesetConditions addAllItem(Object allItem) {
    if (this.all == null) {
      this.all = new ArrayList<>();
    }
    this.all.add(allItem);
    return this;
  }

  /**
   * Get all
   * @return all
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getAll() {
    return all;
  }


  @JsonProperty(JSON_PROPERTY_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAll(@javax.annotation.Nullable List<Object> all) {
    this.all = all;
  }

  public RulesetConditions any(@javax.annotation.Nullable List<Object> any) {
    
    this.any = any;
    return this;
  }

  public RulesetConditions addAnyItem(Object anyItem) {
    if (this.any == null) {
      this.any = new ArrayList<>();
    }
    this.any.add(anyItem);
    return this;
  }

  /**
   * Get any
   * @return any
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getAny() {
    return any;
  }


  @JsonProperty(JSON_PROPERTY_ANY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAny(@javax.annotation.Nullable List<Object> any) {
    this.any = any;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RulesetConditions rulesetConditions = (RulesetConditions) o;
    return Objects.equals(this.all, rulesetConditions.all) &&
        Objects.equals(this.any, rulesetConditions.any);
  }

  @Override
  public int hashCode() {
    return Objects.hash(all, any);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RulesetConditions {\n");
    sb.append("    all: ").append(toIndentedString(all)).append("\n");
    sb.append("    any: ").append(toIndentedString(any)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

