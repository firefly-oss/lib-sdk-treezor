/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sdk.treezor.model.ScheduledPaymentFailedPaymentInner;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ScheduledPayment
 */
@JsonPropertyOrder({
  ScheduledPayment.JSON_PROPERTY_ID,
  ScheduledPayment.JSON_PROPERTY_STATUS,
  ScheduledPayment.JSON_PROPERTY_SCHEDULED_PAYMENT_NAME,
  ScheduledPayment.JSON_PROPERTY_WALLET_ID,
  ScheduledPayment.JSON_PROPERTY_BENEFICIARY_TYPE,
  ScheduledPayment.JSON_PROPERTY_BENEFICIARY,
  ScheduledPayment.JSON_PROPERTY_AMOUNT,
  ScheduledPayment.JSON_PROPERTY_TYPE,
  ScheduledPayment.JSON_PROPERTY_EXEC_AT,
  ScheduledPayment.JSON_PROPERTY_START_AT,
  ScheduledPayment.JSON_PROPERTY_END_AT,
  ScheduledPayment.JSON_PROPERTY_CCREATION_DATE,
  ScheduledPayment.JSON_PROPERTY_PERIOD,
  ScheduledPayment.JSON_PROPERTY_BENEFICIARY_LABEL,
  ScheduledPayment.JSON_PROPERTY_CURRENCY,
  ScheduledPayment.JSON_PROPERTY_USER_ID,
  ScheduledPayment.JSON_PROPERTY_AMR,
  ScheduledPayment.JSON_PROPERTY_FAILED_PAYMENT,
  ScheduledPayment.JSON_PROPERTY_END_TO_END_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class ScheduledPayment {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private UUID id;

  /**
   * The status of the Scheduled Payment.
   */
  public enum StatusEnum {
    CANCELED(String.valueOf("CANCELED")),
    
    VALIDATED(String.valueOf("VALIDATED"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nullable
  private StatusEnum status;

  public static final String JSON_PROPERTY_SCHEDULED_PAYMENT_NAME = "scheduledPaymentName";
  @javax.annotation.Nullable
  private String scheduledPaymentName;

  public static final String JSON_PROPERTY_WALLET_ID = "walletId";
  @javax.annotation.Nullable
  private Integer walletId;

  /**
   * The type of beneficiary for the operation. 
   */
  public enum BeneficiaryTypeEnum {
    PAYOUT(String.valueOf("payout")),
    
    WALLET_TRANSFER(String.valueOf("walletTransfer"));

    private String value;

    BeneficiaryTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BeneficiaryTypeEnum fromValue(String value) {
      for (BeneficiaryTypeEnum b : BeneficiaryTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_BENEFICIARY_TYPE = "beneficiaryType";
  @javax.annotation.Nullable
  private BeneficiaryTypeEnum beneficiaryType;

  public static final String JSON_PROPERTY_BENEFICIARY = "beneficiary";
  @javax.annotation.Nullable
  private Integer beneficiary;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nullable
  private Float amount;

  /**
   * The type of Scheduled Payment, which can be:  * &#x60;oneshot&#x60; – The payment will occur only once. * &#x60;periodic&#x60; – The payment will occur periodically over a defined timeframe. 
   */
  public enum TypeEnum {
    ONESHOT(String.valueOf("oneshot")),
    
    PERIODIC(String.valueOf("periodic"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nullable
  private TypeEnum type;

  public static final String JSON_PROPERTY_EXEC_AT = "execAt";
  @javax.annotation.Nullable
  private String execAt;

  public static final String JSON_PROPERTY_START_AT = "startAt";
  @javax.annotation.Nullable
  private String startAt;

  public static final String JSON_PROPERTY_END_AT = "endAt";
  @javax.annotation.Nullable
  private String endAt;

  public static final String JSON_PROPERTY_CCREATION_DATE = "ccreationDate";
  @javax.annotation.Nullable
  private OffsetDateTime ccreationDate;

  /**
   * The frequency at which a &#x60;periodic&#x60; Scheduled Payment is to occur. 
   */
  public enum PeriodEnum {
    WEEKLY(String.valueOf("weekly")),
    
    MONTHLY(String.valueOf("monthly")),
    
    QUARTERLY(String.valueOf("quarterly")),
    
    BI_ANNUAL(String.valueOf("bi-annual")),
    
    ANNUAL(String.valueOf("annual"));

    private String value;

    PeriodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PeriodEnum fromValue(String value) {
      for (PeriodEnum b : PeriodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PERIOD = "period";
  @javax.annotation.Nullable
  private PeriodEnum period;

  public static final String JSON_PROPERTY_BENEFICIARY_LABEL = "beneficiaryLabel";
  @javax.annotation.Nullable
  private String beneficiaryLabel;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  @javax.annotation.Nullable
  private String currency;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  @javax.annotation.Nullable
  private String userId;

  public static final String JSON_PROPERTY_AMR = "amr";
  @javax.annotation.Nullable
  private List<String> amr = new ArrayList<>();

  public static final String JSON_PROPERTY_FAILED_PAYMENT = "failedPayment";
  @javax.annotation.Nullable
  private List<ScheduledPaymentFailedPaymentInner> failedPayment = new ArrayList<>();

  public static final String JSON_PROPERTY_END_TO_END_ID = "endToEndId";
  @javax.annotation.Nullable
  private String endToEndId;

  public ScheduledPayment() {
  }

  public ScheduledPayment id(@javax.annotation.Nullable UUID id) {
    
    this.id = id;
    return this;
  }

  /**
   * The unique identifier of the Scheduled Payment order.
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable UUID id) {
    this.id = id;
  }

  public ScheduledPayment status(@javax.annotation.Nullable StatusEnum status) {
    
    this.status = status;
    return this;
  }

  /**
   * The status of the Scheduled Payment.
   * @return status
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(@javax.annotation.Nullable StatusEnum status) {
    this.status = status;
  }

  public ScheduledPayment scheduledPaymentName(@javax.annotation.Nullable String scheduledPaymentName) {
    
    this.scheduledPaymentName = scheduledPaymentName;
    return this;
  }

  /**
   * The label describing the goal of the Scheduled Payment.
   * @return scheduledPaymentName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCHEDULED_PAYMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getScheduledPaymentName() {
    return scheduledPaymentName;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULED_PAYMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduledPaymentName(@javax.annotation.Nullable String scheduledPaymentName) {
    this.scheduledPaymentName = scheduledPaymentName;
  }

  public ScheduledPayment walletId(@javax.annotation.Nullable Integer walletId) {
    
    this.walletId = walletId;
    return this;
  }

  /**
   * The unique identifier of the Wallet to be debited.
   * @return walletId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWalletId() {
    return walletId;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWalletId(@javax.annotation.Nullable Integer walletId) {
    this.walletId = walletId;
  }

  public ScheduledPayment beneficiaryType(@javax.annotation.Nullable BeneficiaryTypeEnum beneficiaryType) {
    
    this.beneficiaryType = beneficiaryType;
    return this;
  }

  /**
   * The type of beneficiary for the operation. 
   * @return beneficiaryType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BENEFICIARY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BeneficiaryTypeEnum getBeneficiaryType() {
    return beneficiaryType;
  }


  @JsonProperty(JSON_PROPERTY_BENEFICIARY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeneficiaryType(@javax.annotation.Nullable BeneficiaryTypeEnum beneficiaryType) {
    this.beneficiaryType = beneficiaryType;
  }

  public ScheduledPayment beneficiary(@javax.annotation.Nullable Integer beneficiary) {
    
    this.beneficiary = beneficiary;
    return this;
  }

  /**
   * The unique identifier of the beneficiary of the Scheduled Payment, which can be either &#x60;beneficiaryId&#x60; for Payouts or &#x60;beneficiaryWalletId&#x60; for Wallet-to-Wallet transfers. 
   * @return beneficiary
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BENEFICIARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBeneficiary() {
    return beneficiary;
  }


  @JsonProperty(JSON_PROPERTY_BENEFICIARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeneficiary(@javax.annotation.Nullable Integer beneficiary) {
    this.beneficiary = beneficiary;
  }

  public ScheduledPayment amount(@javax.annotation.Nullable Float amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * The amount of the Scheduled Payment.
   * @return amount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(@javax.annotation.Nullable Float amount) {
    this.amount = amount;
  }

  public ScheduledPayment type(@javax.annotation.Nullable TypeEnum type) {
    
    this.type = type;
    return this;
  }

  /**
   * The type of Scheduled Payment, which can be:  * &#x60;oneshot&#x60; – The payment will occur only once. * &#x60;periodic&#x60; – The payment will occur periodically over a defined timeframe. 
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(@javax.annotation.Nullable TypeEnum type) {
    this.type = type;
  }

  public ScheduledPayment execAt(@javax.annotation.Nullable String execAt) {
    
    this.execAt = execAt;
    return this;
  }

  /**
   * The date on which the a &#x60;oneshot&#x60; Scheduled Payment is to be executed. This date must be set at least one day in the future. Format: YYYY-MM-DD. 
   * @return execAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXEC_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExecAt() {
    return execAt;
  }


  @JsonProperty(JSON_PROPERTY_EXEC_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecAt(@javax.annotation.Nullable String execAt) {
    this.execAt = execAt;
  }

  public ScheduledPayment startAt(@javax.annotation.Nullable String startAt) {
    
    this.startAt = startAt;
    return this;
  }

  /**
   * The date from which a &#x60;periodic&#x60; Scheduled Payment execution starts. This date must be set at least one day in the future. Format: YYYY-MM-DD. 
   * @return startAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartAt() {
    return startAt;
  }


  @JsonProperty(JSON_PROPERTY_START_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartAt(@javax.annotation.Nullable String startAt) {
    this.startAt = startAt;
  }

  public ScheduledPayment endAt(@javax.annotation.Nullable String endAt) {
    
    this.endAt = endAt;
    return this;
  }

  /**
   * The date on which a &#x60;periodic&#x60; Scheduled Payment ends. This date must be set after the &#x60;startAt&#x60; date. Format: YYYY-MM-DD. 
   * @return endAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndAt() {
    return endAt;
  }


  @JsonProperty(JSON_PROPERTY_END_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndAt(@javax.annotation.Nullable String endAt) {
    this.endAt = endAt;
  }

  public ScheduledPayment ccreationDate(@javax.annotation.Nullable OffsetDateTime ccreationDate) {
    
    this.ccreationDate = ccreationDate;
    return this;
  }

  /**
   * The date and time at which the Scheduled Payment was created.
   * @return ccreationDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CCREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCcreationDate() {
    return ccreationDate;
  }


  @JsonProperty(JSON_PROPERTY_CCREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCcreationDate(@javax.annotation.Nullable OffsetDateTime ccreationDate) {
    this.ccreationDate = ccreationDate;
  }

  public ScheduledPayment period(@javax.annotation.Nullable PeriodEnum period) {
    
    this.period = period;
    return this;
  }

  /**
   * The frequency at which a &#x60;periodic&#x60; Scheduled Payment is to occur. 
   * @return period
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PeriodEnum getPeriod() {
    return period;
  }


  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeriod(@javax.annotation.Nullable PeriodEnum period) {
    this.period = period;
  }

  public ScheduledPayment beneficiaryLabel(@javax.annotation.Nullable String beneficiaryLabel) {
    
    this.beneficiaryLabel = beneficiaryLabel;
    return this;
  }

  /**
   * The label that will be displayed for the Scheduled Payments, regardless of the type.
   * @return beneficiaryLabel
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BENEFICIARY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBeneficiaryLabel() {
    return beneficiaryLabel;
  }


  @JsonProperty(JSON_PROPERTY_BENEFICIARY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeneficiaryLabel(@javax.annotation.Nullable String beneficiaryLabel) {
    this.beneficiaryLabel = beneficiaryLabel;
  }

  public ScheduledPayment currency(@javax.annotation.Nullable String currency) {
    
    this.currency = currency;
    return this;
  }

  /**
   * The currency of the Scheduled Payments. Can only be &#x60;EUR&#x60;. 
   * @return currency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
  }

  public ScheduledPayment userId(@javax.annotation.Nullable String userId) {
    
    this.userId = userId;
    return this;
  }

  /**
   * The unique identifier of the User owning the Wallet to debit.
   * @return userId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
  }

  public ScheduledPayment amr(@javax.annotation.Nullable List<String> amr) {
    
    this.amr = amr;
    return this;
  }

  public ScheduledPayment addAmrItem(String amrItem) {
    if (this.amr == null) {
      this.amr = new ArrayList<>();
    }
    this.amr.add(amrItem);
    return this;
  }

  /**
   * The type of SCA for per-operation SCA (e.g., &#x60;CLOUD_PIN&#x60;, &#x60;HYBRID_PIN&#x60;, &#x60;DEVICE_BIOMETRIC&#x60;). 
   * @return amr
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAmr() {
    return amr;
  }


  @JsonProperty(JSON_PROPERTY_AMR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmr(@javax.annotation.Nullable List<String> amr) {
    this.amr = amr;
  }

  public ScheduledPayment failedPayment(@javax.annotation.Nullable List<ScheduledPaymentFailedPaymentInner> failedPayment) {
    
    this.failedPayment = failedPayment;
    return this;
  }

  public ScheduledPayment addFailedPaymentItem(ScheduledPaymentFailedPaymentInner failedPaymentItem) {
    if (this.failedPayment == null) {
      this.failedPayment = new ArrayList<>();
    }
    this.failedPayment.add(failedPaymentItem);
    return this;
  }

  /**
   * Get failedPayment
   * @return failedPayment
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FAILED_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ScheduledPaymentFailedPaymentInner> getFailedPayment() {
    return failedPayment;
  }


  @JsonProperty(JSON_PROPERTY_FAILED_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailedPayment(@javax.annotation.Nullable List<ScheduledPaymentFailedPaymentInner> failedPayment) {
    this.failedPayment = failedPayment;
  }

  public ScheduledPayment endToEndId(@javax.annotation.Nullable String endToEndId) {
    
    this.endToEndId = endToEndId;
    return this;
  }

  /**
   * The end-to-end identifier, for Payouts only.    Allowed characters: alphanumeric and &#x60;/&#x60; &#x60;-&#x60; &#x60;?&#x60; &#x60;:&#x60; &#x60;(&#x60; &#x60;)&#x60; &#x60;.&#x60; &#x60;,&#x60; &#x60;+&#x60; &#x60; &#x60; (space).  Musn&#39;t start nor end with &#x60;/&#x60;, and musn&#39;t contain &#x60;//&#x60;. 
   * @return endToEndId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_TO_END_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndToEndId() {
    return endToEndId;
  }


  @JsonProperty(JSON_PROPERTY_END_TO_END_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndToEndId(@javax.annotation.Nullable String endToEndId) {
    this.endToEndId = endToEndId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduledPayment scheduledPayment = (ScheduledPayment) o;
    return Objects.equals(this.id, scheduledPayment.id) &&
        Objects.equals(this.status, scheduledPayment.status) &&
        Objects.equals(this.scheduledPaymentName, scheduledPayment.scheduledPaymentName) &&
        Objects.equals(this.walletId, scheduledPayment.walletId) &&
        Objects.equals(this.beneficiaryType, scheduledPayment.beneficiaryType) &&
        Objects.equals(this.beneficiary, scheduledPayment.beneficiary) &&
        Objects.equals(this.amount, scheduledPayment.amount) &&
        Objects.equals(this.type, scheduledPayment.type) &&
        Objects.equals(this.execAt, scheduledPayment.execAt) &&
        Objects.equals(this.startAt, scheduledPayment.startAt) &&
        Objects.equals(this.endAt, scheduledPayment.endAt) &&
        Objects.equals(this.ccreationDate, scheduledPayment.ccreationDate) &&
        Objects.equals(this.period, scheduledPayment.period) &&
        Objects.equals(this.beneficiaryLabel, scheduledPayment.beneficiaryLabel) &&
        Objects.equals(this.currency, scheduledPayment.currency) &&
        Objects.equals(this.userId, scheduledPayment.userId) &&
        Objects.equals(this.amr, scheduledPayment.amr) &&
        Objects.equals(this.failedPayment, scheduledPayment.failedPayment) &&
        Objects.equals(this.endToEndId, scheduledPayment.endToEndId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, status, scheduledPaymentName, walletId, beneficiaryType, beneficiary, amount, type, execAt, startAt, endAt, ccreationDate, period, beneficiaryLabel, currency, userId, amr, failedPayment, endToEndId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduledPayment {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    scheduledPaymentName: ").append(toIndentedString(scheduledPaymentName)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    beneficiaryType: ").append(toIndentedString(beneficiaryType)).append("\n");
    sb.append("    beneficiary: ").append(toIndentedString(beneficiary)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    execAt: ").append(toIndentedString(execAt)).append("\n");
    sb.append("    startAt: ").append(toIndentedString(startAt)).append("\n");
    sb.append("    endAt: ").append(toIndentedString(endAt)).append("\n");
    sb.append("    ccreationDate: ").append(toIndentedString(ccreationDate)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    beneficiaryLabel: ").append(toIndentedString(beneficiaryLabel)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    amr: ").append(toIndentedString(amr)).append("\n");
    sb.append("    failedPayment: ").append(toIndentedString(failedPayment)).append("\n");
    sb.append("    endToEndId: ").append(toIndentedString(endToEndId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

