/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostVirtualIbanRequest
 */
@JsonPropertyOrder({
  PostVirtualIbanRequest.JSON_PROPERTY_WALLET_ID,
  PostVirtualIbanRequest.JSON_PROPERTY_TYPE_ID,
  PostVirtualIbanRequest.JSON_PROPERTY_TAG,
  PostVirtualIbanRequest.JSON_PROPERTY_ACCESS_TAG,
  PostVirtualIbanRequest.JSON_PROPERTY_VALID_FROM,
  PostVirtualIbanRequest.JSON_PROPERTY_VALID_TO,
  PostVirtualIbanRequest.JSON_PROPERTY_MAX_USAGE,
  PostVirtualIbanRequest.JSON_PROPERTY_MAX_AMOUNT,
  PostVirtualIbanRequest.JSON_PROPERTY_REFERENCE
})
@JsonTypeName("postVirtualIban_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class PostVirtualIbanRequest {
  public static final String JSON_PROPERTY_WALLET_ID = "walletId";
  @javax.annotation.Nonnull
  private Integer walletId;

  /**
   * The type of IBAN, allowing for a specific transfer direction.  Can be: &lt;ul&gt;&lt;li&gt;&#x60;1&#x60; for &#x60;SDDR&#x60; [SEPA Direct Debit](/guide/transfers/direct-debit.html)&lt;/li&gt;&lt;li&gt;&#x60;2&#x60; for &#x60;SCTR&#x60; [SEPA Credit Transfer](/guide/transfers/credit-transfer.html#received-credit-transfers-sctr)&lt;/li&gt;&lt;/ul&gt; 
   */
  public enum TypeIdEnum {
    NUMBER_1(Integer.valueOf(1)),
    
    NUMBER_2(Integer.valueOf(2));

    private Integer value;

    TypeIdEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeIdEnum fromValue(Integer value) {
      for (TypeIdEnum b : TypeIdEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE_ID = "typeId";
  @javax.annotation.Nonnull
  private TypeIdEnum typeId;

  public static final String JSON_PROPERTY_TAG = "tag";
  @javax.annotation.Nullable
  private String tag;

  public static final String JSON_PROPERTY_ACCESS_TAG = "accessTag";
  @javax.annotation.Nullable
  private String accessTag;

  public static final String JSON_PROPERTY_VALID_FROM = "validFrom";
  @javax.annotation.Nullable
  private String validFrom;

  public static final String JSON_PROPERTY_VALID_TO = "validTo";
  @javax.annotation.Nullable
  private String validTo;

  public static final String JSON_PROPERTY_MAX_USAGE = "maxUsage";
  @javax.annotation.Nullable
  private Integer maxUsage;

  public static final String JSON_PROPERTY_MAX_AMOUNT = "maxAmount";
  @javax.annotation.Nullable
  private BigDecimal maxAmount;

  public static final String JSON_PROPERTY_REFERENCE = "reference";
  @javax.annotation.Nullable
  private String reference;

  public PostVirtualIbanRequest() {
  }

  public PostVirtualIbanRequest walletId(@javax.annotation.Nonnull Integer walletId) {
    
    this.walletId = walletId;
    return this;
  }

  /**
   * The unique identifier of the Wallet to which the Virtual IBAN is associated. Must be a &#x60;walletType&#x60; of &#x60;9&#x60; or &#x60;10&#x60;. 
   * @return walletId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getWalletId() {
    return walletId;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWalletId(@javax.annotation.Nonnull Integer walletId) {
    this.walletId = walletId;
  }

  public PostVirtualIbanRequest typeId(@javax.annotation.Nonnull TypeIdEnum typeId) {
    
    this.typeId = typeId;
    return this;
  }

  /**
   * The type of IBAN, allowing for a specific transfer direction.  Can be: &lt;ul&gt;&lt;li&gt;&#x60;1&#x60; for &#x60;SDDR&#x60; [SEPA Direct Debit](/guide/transfers/direct-debit.html)&lt;/li&gt;&lt;li&gt;&#x60;2&#x60; for &#x60;SCTR&#x60; [SEPA Credit Transfer](/guide/transfers/credit-transfer.html#received-credit-transfers-sctr)&lt;/li&gt;&lt;/ul&gt; 
   * @return typeId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeIdEnum getTypeId() {
    return typeId;
  }


  @JsonProperty(JSON_PROPERTY_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTypeId(@javax.annotation.Nonnull TypeIdEnum typeId) {
    this.typeId = typeId;
  }

  public PostVirtualIbanRequest tag(@javax.annotation.Nullable String tag) {
    
    this.tag = tag;
    return this;
  }

  /**
   * Custom attribute that you can use as you see fit.  Learn more in the [Object tags](/guide/api-basics/objects-tags.html) article. 
   * @return tag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTag() {
    return tag;
  }


  @JsonProperty(JSON_PROPERTY_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTag(@javax.annotation.Nullable String tag) {
    this.tag = tag;
  }

  public PostVirtualIbanRequest accessTag(@javax.annotation.Nullable String accessTag) {
    
    this.accessTag = accessTag;
    return this;
  }

  /**
   * A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). 
   * @return accessTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccessTag() {
    return accessTag;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessTag(@javax.annotation.Nullable String accessTag) {
    this.accessTag = accessTag;
  }

  public PostVirtualIbanRequest validFrom(@javax.annotation.Nullable String validFrom) {
    
    this.validFrom = validFrom;
    return this;
  }

  /**
   * The date from which the Virtual IBAN validity starts. Defaults to today&#39;s date and must be set in the future.  Format: &#x60;YYYY-MM-DD&#x60; 
   * @return validFrom
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALID_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValidFrom() {
    return validFrom;
  }


  @JsonProperty(JSON_PROPERTY_VALID_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidFrom(@javax.annotation.Nullable String validFrom) {
    this.validFrom = validFrom;
  }

  public PostVirtualIbanRequest validTo(@javax.annotation.Nullable String validTo) {
    
    this.validTo = validTo;
    return this;
  }

  /**
   * The date from which the Virtual IBAN validity ends. Must be set after the &#x60;validFrom&#x60; date.  Format: &#x60;YYYY-MM-DD&#x60; 
   * @return validTo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALID_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValidTo() {
    return validTo;
  }


  @JsonProperty(JSON_PROPERTY_VALID_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidTo(@javax.annotation.Nullable String validTo) {
    this.validTo = validTo;
  }

  public PostVirtualIbanRequest maxUsage(@javax.annotation.Nullable Integer maxUsage) {
    
    this.maxUsage = maxUsage;
    return this;
  }

  /**
   * The maximum number of transactions allowed (&#x60;0&#x60; &#x3D; unlimited).  
   * @return maxUsage
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxUsage() {
    return maxUsage;
  }


  @JsonProperty(JSON_PROPERTY_MAX_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxUsage(@javax.annotation.Nullable Integer maxUsage) {
    this.maxUsage = maxUsage;
  }

  public PostVirtualIbanRequest maxAmount(@javax.annotation.Nullable BigDecimal maxAmount) {
    
    this.maxAmount = maxAmount;
    return this;
  }

  /**
   * The maximum cumulated amount of all transactions (&#x60;\&quot;0.00\&quot;&#x60; &#x3D; unlimited). 
   * @return maxAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMaxAmount() {
    return maxAmount;
  }


  @JsonProperty(JSON_PROPERTY_MAX_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxAmount(@javax.annotation.Nullable BigDecimal maxAmount) {
    this.maxAmount = maxAmount;
  }

  public PostVirtualIbanRequest reference(@javax.annotation.Nullable String reference) {
    
    this.reference = reference;
    return this;
  }

  /**
   * Custom field for your internal reference of the Virtual IBAN. 
   * @return reference
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReference() {
    return reference;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReference(@javax.annotation.Nullable String reference) {
    this.reference = reference;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostVirtualIbanRequest postVirtualIbanRequest = (PostVirtualIbanRequest) o;
    return Objects.equals(this.walletId, postVirtualIbanRequest.walletId) &&
        Objects.equals(this.typeId, postVirtualIbanRequest.typeId) &&
        Objects.equals(this.tag, postVirtualIbanRequest.tag) &&
        Objects.equals(this.accessTag, postVirtualIbanRequest.accessTag) &&
        Objects.equals(this.validFrom, postVirtualIbanRequest.validFrom) &&
        Objects.equals(this.validTo, postVirtualIbanRequest.validTo) &&
        Objects.equals(this.maxUsage, postVirtualIbanRequest.maxUsage) &&
        Objects.equals(this.maxAmount, postVirtualIbanRequest.maxAmount) &&
        Objects.equals(this.reference, postVirtualIbanRequest.reference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(walletId, typeId, tag, accessTag, validFrom, validTo, maxUsage, maxAmount, reference);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostVirtualIbanRequest {\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    typeId: ").append(toIndentedString(typeId)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    accessTag: ").append(toIndentedString(accessTag)).append("\n");
    sb.append("    validFrom: ").append(toIndentedString(validFrom)).append("\n");
    sb.append("    validTo: ").append(toIndentedString(validTo)).append("\n");
    sb.append("    maxUsage: ").append(toIndentedString(maxUsage)).append("\n");
    sb.append("    maxAmount: ").append(toIndentedString(maxAmount)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

