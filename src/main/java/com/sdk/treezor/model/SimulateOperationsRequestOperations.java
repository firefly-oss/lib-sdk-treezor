/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SimulateOperationsRequestOperations
 */
@JsonPropertyOrder({
  SimulateOperationsRequestOperations.JSON_PROPERTY_PAYIN,
  SimulateOperationsRequestOperations.JSON_PROPERTY_PAYINREFUND,
  SimulateOperationsRequestOperations.JSON_PROPERTY_PAYOUT,
  SimulateOperationsRequestOperations.JSON_PROPERTY_PAYOUTREFUND,
  SimulateOperationsRequestOperations.JSON_PROPERTY_TRANSFER,
  SimulateOperationsRequestOperations.JSON_PROPERTY_TRANSFERREFUND,
  SimulateOperationsRequestOperations.JSON_PROPERTY_CARDTRANSACTION,
  SimulateOperationsRequestOperations.JSON_PROPERTY_TRANSFERFEES,
  SimulateOperationsRequestOperations.JSON_PROPERTY_TRANSFERCREDITNOTE
})
@JsonTypeName("simulateOperations_request_operations")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class SimulateOperationsRequestOperations {
  public static final String JSON_PROPERTY_PAYIN = "payin";
  @javax.annotation.Nullable
  private Integer payin;

  public static final String JSON_PROPERTY_PAYINREFUND = "payinrefund";
  @javax.annotation.Nullable
  private Integer payinrefund;

  public static final String JSON_PROPERTY_PAYOUT = "payout";
  @javax.annotation.Nullable
  private Integer payout;

  public static final String JSON_PROPERTY_PAYOUTREFUND = "payoutrefund";
  @javax.annotation.Nullable
  private Integer payoutrefund;

  public static final String JSON_PROPERTY_TRANSFER = "transfer";
  @javax.annotation.Nullable
  private Integer transfer;

  public static final String JSON_PROPERTY_TRANSFERREFUND = "transferrefund";
  @javax.annotation.Nullable
  private Integer transferrefund;

  public static final String JSON_PROPERTY_CARDTRANSACTION = "cardtransaction";
  @javax.annotation.Nullable
  private Integer cardtransaction;

  public static final String JSON_PROPERTY_TRANSFERFEES = "transferfees";
  @javax.annotation.Nullable
  private Integer transferfees;

  public static final String JSON_PROPERTY_TRANSFERCREDITNOTE = "transfercreditnote";
  @javax.annotation.Nullable
  private Integer transfercreditnote;

  public SimulateOperationsRequestOperations() {
  }

  public SimulateOperationsRequestOperations payin(@javax.annotation.Nullable Integer payin) {
    
    this.payin = payin;
    return this;
  }

  /**
   * The number of payin operations to generate.
   * @return payin
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPayin() {
    return payin;
  }


  @JsonProperty(JSON_PROPERTY_PAYIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayin(@javax.annotation.Nullable Integer payin) {
    this.payin = payin;
  }

  public SimulateOperationsRequestOperations payinrefund(@javax.annotation.Nullable Integer payinrefund) {
    
    this.payinrefund = payinrefund;
    return this;
  }

  /**
   * The number of payin refunds to generate. Must be lower than or equal to the number of payins.
   * @return payinrefund
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYINREFUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPayinrefund() {
    return payinrefund;
  }


  @JsonProperty(JSON_PROPERTY_PAYINREFUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayinrefund(@javax.annotation.Nullable Integer payinrefund) {
    this.payinrefund = payinrefund;
  }

  public SimulateOperationsRequestOperations payout(@javax.annotation.Nullable Integer payout) {
    
    this.payout = payout;
    return this;
  }

  /**
   * The number of payout operations to generate.
   * @return payout
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPayout() {
    return payout;
  }


  @JsonProperty(JSON_PROPERTY_PAYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayout(@javax.annotation.Nullable Integer payout) {
    this.payout = payout;
  }

  public SimulateOperationsRequestOperations payoutrefund(@javax.annotation.Nullable Integer payoutrefund) {
    
    this.payoutrefund = payoutrefund;
    return this;
  }

  /**
   * The number of payout refunds to generate. Must be lower than or equal to the number of payouts.
   * @return payoutrefund
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYOUTREFUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPayoutrefund() {
    return payoutrefund;
  }


  @JsonProperty(JSON_PROPERTY_PAYOUTREFUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayoutrefund(@javax.annotation.Nullable Integer payoutrefund) {
    this.payoutrefund = payoutrefund;
  }

  public SimulateOperationsRequestOperations transfer(@javax.annotation.Nullable Integer transfer) {
    
    this.transfer = transfer;
    return this;
  }

  /**
   * The number of wallet-to-wallet transfers to generate.
   * @return transfer
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTransfer() {
    return transfer;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransfer(@javax.annotation.Nullable Integer transfer) {
    this.transfer = transfer;
  }

  public SimulateOperationsRequestOperations transferrefund(@javax.annotation.Nullable Integer transferrefund) {
    
    this.transferrefund = transferrefund;
    return this;
  }

  /**
   * Deprecated. Don&#39;t use.
   * @return transferrefund
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSFERREFUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTransferrefund() {
    return transferrefund;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFERREFUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransferrefund(@javax.annotation.Nullable Integer transferrefund) {
    this.transferrefund = transferrefund;
  }

  public SimulateOperationsRequestOperations cardtransaction(@javax.annotation.Nullable Integer cardtransaction) {
    
    this.cardtransaction = cardtransaction;
    return this;
  }

  /**
   * The number of card transaction operations to generate.
   * @return cardtransaction
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARDTRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCardtransaction() {
    return cardtransaction;
  }


  @JsonProperty(JSON_PROPERTY_CARDTRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardtransaction(@javax.annotation.Nullable Integer cardtransaction) {
    this.cardtransaction = cardtransaction;
  }

  public SimulateOperationsRequestOperations transferfees(@javax.annotation.Nullable Integer transferfees) {
    
    this.transferfees = transferfees;
    return this;
  }

  /**
   * The number of wallet-to-wallet transfers to generate with a &#x60;transferTypeId&#x60; of &#x60;3&#x60;.
   * @return transferfees
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSFERFEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTransferfees() {
    return transferfees;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFERFEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransferfees(@javax.annotation.Nullable Integer transferfees) {
    this.transferfees = transferfees;
  }

  public SimulateOperationsRequestOperations transfercreditnote(@javax.annotation.Nullable Integer transfercreditnote) {
    
    this.transfercreditnote = transfercreditnote;
    return this;
  }

  /**
   * The number of wallet-to-wallet transfers to generate with a &#x60;transferTypeId&#x60; of &#x60;4&#x60;.
   * @return transfercreditnote
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSFERCREDITNOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTransfercreditnote() {
    return transfercreditnote;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFERCREDITNOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransfercreditnote(@javax.annotation.Nullable Integer transfercreditnote) {
    this.transfercreditnote = transfercreditnote;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimulateOperationsRequestOperations simulateOperationsRequestOperations = (SimulateOperationsRequestOperations) o;
    return Objects.equals(this.payin, simulateOperationsRequestOperations.payin) &&
        Objects.equals(this.payinrefund, simulateOperationsRequestOperations.payinrefund) &&
        Objects.equals(this.payout, simulateOperationsRequestOperations.payout) &&
        Objects.equals(this.payoutrefund, simulateOperationsRequestOperations.payoutrefund) &&
        Objects.equals(this.transfer, simulateOperationsRequestOperations.transfer) &&
        Objects.equals(this.transferrefund, simulateOperationsRequestOperations.transferrefund) &&
        Objects.equals(this.cardtransaction, simulateOperationsRequestOperations.cardtransaction) &&
        Objects.equals(this.transferfees, simulateOperationsRequestOperations.transferfees) &&
        Objects.equals(this.transfercreditnote, simulateOperationsRequestOperations.transfercreditnote);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payin, payinrefund, payout, payoutrefund, transfer, transferrefund, cardtransaction, transferfees, transfercreditnote);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimulateOperationsRequestOperations {\n");
    sb.append("    payin: ").append(toIndentedString(payin)).append("\n");
    sb.append("    payinrefund: ").append(toIndentedString(payinrefund)).append("\n");
    sb.append("    payout: ").append(toIndentedString(payout)).append("\n");
    sb.append("    payoutrefund: ").append(toIndentedString(payoutrefund)).append("\n");
    sb.append("    transfer: ").append(toIndentedString(transfer)).append("\n");
    sb.append("    transferrefund: ").append(toIndentedString(transferrefund)).append("\n");
    sb.append("    cardtransaction: ").append(toIndentedString(cardtransaction)).append("\n");
    sb.append("    transferfees: ").append(toIndentedString(transferfees)).append("\n");
    sb.append("    transfercreditnote: ").append(toIndentedString(transfercreditnote)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

