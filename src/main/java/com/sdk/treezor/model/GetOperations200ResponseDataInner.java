/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sdk.treezor.model.GetOperations200ResponseDataInnerAmount;
import com.sdk.treezor.model.GetOperations200ResponseDataInnerDate;
import com.sdk.treezor.model.GetOperations200ResponseDataInnerMetadata;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GetOperations200ResponseDataInner
 */
@JsonPropertyOrder({
  GetOperations200ResponseDataInner.JSON_PROPERTY_OPERATION_TYPE,
  GetOperations200ResponseDataInner.JSON_PROPERTY_AMOUNT,
  GetOperations200ResponseDataInner.JSON_PROPERTY_STATUS,
  GetOperations200ResponseDataInner.JSON_PROPERTY_WALLET_ID,
  GetOperations200ResponseDataInner.JSON_PROPERTY_DIRECTION,
  GetOperations200ResponseDataInner.JSON_PROPERTY_OBJECT_ID,
  GetOperations200ResponseDataInner.JSON_PROPERTY_LABEL,
  GetOperations200ResponseDataInner.JSON_PROPERTY_METADATA,
  GetOperations200ResponseDataInner.JSON_PROPERTY_DATE,
  GetOperations200ResponseDataInner.JSON_PROPERTY_INITIAL_FLOW
})
@JsonTypeName("getOperations_200_response_data_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class GetOperations200ResponseDataInner {
  /**
   * Type of operation. 
   */
  public enum OperationTypeEnum {
    BANK_DIRECT_DEBIT(String.valueOf("bankDirectDebit")),
    
    BANK_TRANSFER(String.valueOf("bankTransfer")),
    
    CARD_TOPUP(String.valueOf("cardTopup")),
    
    CARD_TRANSACTION(String.valueOf("cardTransaction")),
    
    CHECK(String.valueOf("check")),
    
    CREDIT_NOTE(String.valueOf("creditNote")),
    
    FEES(String.valueOf("fees")),
    
    INT_BANK_TRANSFER(String.valueOf("intBankTransfer")),
    
    INSTANT_BANK_TRANSFER(String.valueOf("instantBankTransfer")),
    
    OTHER(String.valueOf("other")),
    
    PAYIN_REFUND(String.valueOf("payinRefund")),
    
    PAYOUT_REFUND(String.valueOf("payoutRefund")),
    
    TRANSFER_REFUND(String.valueOf("transferRefund")),
    
    WALLET_TRANSFER(String.valueOf("walletTransfer"));

    private String value;

    OperationTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OperationTypeEnum fromValue(String value) {
      for (OperationTypeEnum b : OperationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OPERATION_TYPE = "operationType";
  @javax.annotation.Nullable
  private OperationTypeEnum operationType;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nullable
  private GetOperations200ResponseDataInnerAmount amount;

  /**
   * operation status
   */
  public enum StatusEnum {
    AUTHORIZED(String.valueOf("AUTHORIZED")),
    
    CANCELED(String.valueOf("CANCELED")),
    
    DECLINED(String.valueOf("DECLINED")),
    
    SETTLED(String.valueOf("SETTLED"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nullable
  private StatusEnum status;

  public static final String JSON_PROPERTY_WALLET_ID = "walletId";
  @javax.annotation.Nullable
  private Long walletId;

  /**
   * Direction of operation credit or debit
   */
  public enum DirectionEnum {
    CREDIT(String.valueOf("CREDIT")),
    
    DEBIT(String.valueOf("DEBIT"));

    private String value;

    DirectionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DirectionEnum fromValue(String value) {
      for (DirectionEnum b : DirectionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DIRECTION = "direction";
  @javax.annotation.Nullable
  private DirectionEnum direction;

  public static final String JSON_PROPERTY_OBJECT_ID = "objectId";
  @javax.annotation.Nullable
  private Long objectId;

  public static final String JSON_PROPERTY_LABEL = "label";
  @javax.annotation.Nullable
  private JsonNullable<String> label = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METADATA = "metadata";
  @javax.annotation.Nullable
  private GetOperations200ResponseDataInnerMetadata metadata;

  public static final String JSON_PROPERTY_DATE = "date";
  @javax.annotation.Nullable
  private GetOperations200ResponseDataInnerDate date;

  /**
   * Context about the technical conext of the initial operation.
   */
  public enum InitialFlowEnum {
    CARD_TRANSACTION(String.valueOf("cardTransaction")),
    
    CHARGEBACK(String.valueOf("chargeback")),
    
    PAYIN(String.valueOf("payin")),
    
    PAYIN_REFUND(String.valueOf("payinRefund")),
    
    PAYOUT(String.valueOf("payout")),
    
    PAYOUT_REFUND(String.valueOf("payoutRefund")),
    
    TRANSFER(String.valueOf("transfer"));

    private String value;

    InitialFlowEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InitialFlowEnum fromValue(String value) {
      for (InitialFlowEnum b : InitialFlowEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INITIAL_FLOW = "initialFlow";
  @javax.annotation.Nullable
  private InitialFlowEnum initialFlow;

  public GetOperations200ResponseDataInner() {
  }

  public GetOperations200ResponseDataInner operationType(@javax.annotation.Nullable OperationTypeEnum operationType) {
    
    this.operationType = operationType;
    return this;
  }

  /**
   * Type of operation. 
   * @return operationType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPERATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OperationTypeEnum getOperationType() {
    return operationType;
  }


  @JsonProperty(JSON_PROPERTY_OPERATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperationType(@javax.annotation.Nullable OperationTypeEnum operationType) {
    this.operationType = operationType;
  }

  public GetOperations200ResponseDataInner amount(@javax.annotation.Nullable GetOperations200ResponseDataInnerAmount amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GetOperations200ResponseDataInnerAmount getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(@javax.annotation.Nullable GetOperations200ResponseDataInnerAmount amount) {
    this.amount = amount;
  }

  public GetOperations200ResponseDataInner status(@javax.annotation.Nullable StatusEnum status) {
    
    this.status = status;
    return this;
  }

  /**
   * operation status
   * @return status
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(@javax.annotation.Nullable StatusEnum status) {
    this.status = status;
  }

  public GetOperations200ResponseDataInner walletId(@javax.annotation.Nullable Long walletId) {
    
    this.walletId = walletId;
    return this;
  }

  /**
   * ID of the wallet impacted
   * @return walletId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getWalletId() {
    return walletId;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWalletId(@javax.annotation.Nullable Long walletId) {
    this.walletId = walletId;
  }

  public GetOperations200ResponseDataInner direction(@javax.annotation.Nullable DirectionEnum direction) {
    
    this.direction = direction;
    return this;
  }

  /**
   * Direction of operation credit or debit
   * @return direction
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DirectionEnum getDirection() {
    return direction;
  }


  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirection(@javax.annotation.Nullable DirectionEnum direction) {
    this.direction = direction;
  }

  public GetOperations200ResponseDataInner objectId(@javax.annotation.Nullable Long objectId) {
    
    this.objectId = objectId;
    return this;
  }

  /**
   * The unique identifier of the Treezor object that contains the initial operation 
   * @return objectId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getObjectId() {
    return objectId;
  }


  @JsonProperty(JSON_PROPERTY_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObjectId(@javax.annotation.Nullable Long objectId) {
    this.objectId = objectId;
  }

  public GetOperations200ResponseDataInner label(@javax.annotation.Nullable String label) {
    this.label = JsonNullable.<String>of(label);
    
    return this;
  }

  /**
   * The tag attached to the operation
   * @return label
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getLabel() {
        return label.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLabel_JsonNullable() {
    return label;
  }
  
  @JsonProperty(JSON_PROPERTY_LABEL)
  public void setLabel_JsonNullable(JsonNullable<String> label) {
    this.label = label;
  }

  public void setLabel(@javax.annotation.Nullable String label) {
    this.label = JsonNullable.<String>of(label);
  }

  public GetOperations200ResponseDataInner metadata(@javax.annotation.Nullable GetOperations200ResponseDataInnerMetadata metadata) {
    
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GetOperations200ResponseDataInnerMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(@javax.annotation.Nullable GetOperations200ResponseDataInnerMetadata metadata) {
    this.metadata = metadata;
  }

  public GetOperations200ResponseDataInner date(@javax.annotation.Nullable GetOperations200ResponseDataInnerDate date) {
    
    this.date = date;
    return this;
  }

  /**
   * Get date
   * @return date
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GetOperations200ResponseDataInnerDate getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(@javax.annotation.Nullable GetOperations200ResponseDataInnerDate date) {
    this.date = date;
  }

  public GetOperations200ResponseDataInner initialFlow(@javax.annotation.Nullable InitialFlowEnum initialFlow) {
    
    this.initialFlow = initialFlow;
    return this;
  }

  /**
   * Context about the technical conext of the initial operation.
   * @return initialFlow
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InitialFlowEnum getInitialFlow() {
    return initialFlow;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialFlow(@javax.annotation.Nullable InitialFlowEnum initialFlow) {
    this.initialFlow = initialFlow;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetOperations200ResponseDataInner getOperations200ResponseDataInner = (GetOperations200ResponseDataInner) o;
    return Objects.equals(this.operationType, getOperations200ResponseDataInner.operationType) &&
        Objects.equals(this.amount, getOperations200ResponseDataInner.amount) &&
        Objects.equals(this.status, getOperations200ResponseDataInner.status) &&
        Objects.equals(this.walletId, getOperations200ResponseDataInner.walletId) &&
        Objects.equals(this.direction, getOperations200ResponseDataInner.direction) &&
        Objects.equals(this.objectId, getOperations200ResponseDataInner.objectId) &&
        equalsNullable(this.label, getOperations200ResponseDataInner.label) &&
        Objects.equals(this.metadata, getOperations200ResponseDataInner.metadata) &&
        Objects.equals(this.date, getOperations200ResponseDataInner.date) &&
        Objects.equals(this.initialFlow, getOperations200ResponseDataInner.initialFlow);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(operationType, amount, status, walletId, direction, objectId, hashCodeNullable(label), metadata, date, initialFlow);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetOperations200ResponseDataInner {\n");
    sb.append("    operationType: ").append(toIndentedString(operationType)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    objectId: ").append(toIndentedString(objectId)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    initialFlow: ").append(toIndentedString(initialFlow)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

