/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DocumentObjectDocumentsInner
 */
@JsonPropertyOrder({
  DocumentObjectDocumentsInner.JSON_PROPERTY_DOCUMENT_ID,
  DocumentObjectDocumentsInner.JSON_PROPERTY_DOCUMENT_TAG,
  DocumentObjectDocumentsInner.JSON_PROPERTY_USER_ID,
  DocumentObjectDocumentsInner.JSON_PROPERTY_USER_FIRSTNAME,
  DocumentObjectDocumentsInner.JSON_PROPERTY_USER_LASTNAME,
  DocumentObjectDocumentsInner.JSON_PROPERTY_NAME,
  DocumentObjectDocumentsInner.JSON_PROPERTY_DOCUMENT_STATUS,
  DocumentObjectDocumentsInner.JSON_PROPERTY_DOCUMENT_TYPE_ID,
  DocumentObjectDocumentsInner.JSON_PROPERTY_DOCUMENT_TYPE,
  DocumentObjectDocumentsInner.JSON_PROPERTY_FILE_NAME,
  DocumentObjectDocumentsInner.JSON_PROPERTY_THUMBFILE_NAME,
  DocumentObjectDocumentsInner.JSON_PROPERTY_CREATED_DATE,
  DocumentObjectDocumentsInner.JSON_PROPERTY_MODIFIED_DATE,
  DocumentObjectDocumentsInner.JSON_PROPERTY_CODE_STATUS,
  DocumentObjectDocumentsInner.JSON_PROPERTY_INFORMATION_STATUS,
  DocumentObjectDocumentsInner.JSON_PROPERTY_RESIDENCE_ID,
  DocumentObjectDocumentsInner.JSON_PROPERTY_TEMPORARY_URL,
  DocumentObjectDocumentsInner.JSON_PROPERTY_TEMPORARY_URL_THUMB
})
@JsonTypeName("DocumentObject_documents_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class DocumentObjectDocumentsInner {
  public static final String JSON_PROPERTY_DOCUMENT_ID = "documentId";
  @javax.annotation.Nullable
  private Integer documentId;

  public static final String JSON_PROPERTY_DOCUMENT_TAG = "documentTag";
  @javax.annotation.Nullable
  private String documentTag;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  @javax.annotation.Nullable
  private Integer userId;

  public static final String JSON_PROPERTY_USER_FIRSTNAME = "userFirstname";
  @javax.annotation.Nullable
  private String userFirstname;

  public static final String JSON_PROPERTY_USER_LASTNAME = "userLastname";
  @javax.annotation.Nullable
  private String userLastname;

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nullable
  private String name;

  /**
   * The status of the document. See [Document Status](/guide/user-verification/documents.html#status-documentstatus) for more information. 
   */
  public enum DocumentStatusEnum {
    CANCELED(String.valueOf("CANCELED")),
    
    PENDING(String.valueOf("PENDING")),
    
    VALIDATED(String.valueOf("VALIDATED"));

    private String value;

    DocumentStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DocumentStatusEnum fromValue(String value) {
      for (DocumentStatusEnum b : DocumentStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DOCUMENT_STATUS = "documentStatus";
  @javax.annotation.Nullable
  private DocumentStatusEnum documentStatus;

  public static final String JSON_PROPERTY_DOCUMENT_TYPE_ID = "documentTypeId";
  @javax.annotation.Nullable
  private Integer documentTypeId;

  public static final String JSON_PROPERTY_DOCUMENT_TYPE = "documentType";
  @javax.annotation.Nullable
  private String documentType;

  public static final String JSON_PROPERTY_FILE_NAME = "fileName";
  @javax.annotation.Nullable
  private String fileName;

  public static final String JSON_PROPERTY_THUMBFILE_NAME = "thumbfileName";
  @javax.annotation.Nullable
  private String thumbfileName;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  @javax.annotation.Nullable
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  @javax.annotation.Nullable
  private OffsetDateTime modifiedDate;

  /**
   * The status code of the document. See [Status](/guide/user-verification/documents.html#status-documentstatus) for more information. 
   */
  public enum CodeStatusEnum {
    _600001(String.valueOf("600001")),
    
    _600002(String.valueOf("600002")),
    
    _600003(String.valueOf("600003")),
    
    _600004(String.valueOf("600004")),
    
    _600005(String.valueOf("600005")),
    
    _600006(String.valueOf("600006")),
    
    _600007(String.valueOf("600007")),
    
    _600008(String.valueOf("600008")),
    
    _600009(String.valueOf("600009")),
    
    _600010(String.valueOf("600010")),
    
    _600011(String.valueOf("600011")),
    
    _600012(String.valueOf("600012")),
    
    _600013(String.valueOf("600013")),
    
    _600014(String.valueOf("600014")),
    
    _600015(String.valueOf("600015")),
    
    _600016(String.valueOf("600016")),
    
    _600017(String.valueOf("600017"));

    private String value;

    CodeStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CodeStatusEnum fromValue(String value) {
      for (CodeStatusEnum b : CodeStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CODE_STATUS = "codeStatus";
  @javax.annotation.Nullable
  private CodeStatusEnum codeStatus;

  public static final String JSON_PROPERTY_INFORMATION_STATUS = "informationStatus";
  @javax.annotation.Nullable
  private String informationStatus;

  public static final String JSON_PROPERTY_RESIDENCE_ID = "residenceId";
  @javax.annotation.Nullable
  private Long residenceId;

  public static final String JSON_PROPERTY_TEMPORARY_URL = "temporaryUrl";
  @javax.annotation.Nullable
  private String temporaryUrl;

  public static final String JSON_PROPERTY_TEMPORARY_URL_THUMB = "temporaryUrlThumb";
  @javax.annotation.Nullable
  private String temporaryUrlThumb;

  public DocumentObjectDocumentsInner() {
  }

  public DocumentObjectDocumentsInner documentId(@javax.annotation.Nullable Integer documentId) {
    
    this.documentId = documentId;
    return this;
  }

  /**
   * The unique identifier of the Document.
   * @return documentId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDocumentId() {
    return documentId;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentId(@javax.annotation.Nullable Integer documentId) {
    this.documentId = documentId;
  }

  public DocumentObjectDocumentsInner documentTag(@javax.annotation.Nullable String documentTag) {
    
    this.documentTag = documentTag;
    return this;
  }

  /**
   * Custom attribute to use as you see fit. Learn more in the [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.  Format: hc characters and &#x60;/&#x60; &#x60;!&#x60; &#x60;-&#x60; &#x60;_&#x60; &#x60;.&#x60; &#x60;*&#x60; &#x60;&#39;&#x60; &#x60;(&#x60; &#x60;)&#x60; 
   * @return documentTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocumentTag() {
    return documentTag;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentTag(@javax.annotation.Nullable String documentTag) {
    this.documentTag = documentTag;
  }

  public DocumentObjectDocumentsInner userId(@javax.annotation.Nullable Integer userId) {
    
    this.userId = userId;
    return this;
  }

  /**
   * The unique identifier of the User the document belongs to.
   * @return userId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(@javax.annotation.Nullable Integer userId) {
    this.userId = userId;
  }

  public DocumentObjectDocumentsInner userFirstname(@javax.annotation.Nullable String userFirstname) {
    
    this.userFirstname = userFirstname;
    return this;
  }

  /**
   * Get userFirstname
   * @return userFirstname
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_FIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserFirstname() {
    return userFirstname;
  }


  @JsonProperty(JSON_PROPERTY_USER_FIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserFirstname(@javax.annotation.Nullable String userFirstname) {
    this.userFirstname = userFirstname;
  }

  public DocumentObjectDocumentsInner userLastname(@javax.annotation.Nullable String userLastname) {
    
    this.userLastname = userLastname;
    return this;
  }

  /**
   * Get userLastname
   * @return userLastname
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_LASTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserLastname() {
    return userLastname;
  }


  @JsonProperty(JSON_PROPERTY_USER_LASTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserLastname(@javax.annotation.Nullable String userLastname) {
    this.userLastname = userLastname;
  }

  public DocumentObjectDocumentsInner name(@javax.annotation.Nullable String name) {
    
    this.name = name;
    return this;
  }

  /**
   * The name of the document.
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }

  public DocumentObjectDocumentsInner documentStatus(@javax.annotation.Nullable DocumentStatusEnum documentStatus) {
    
    this.documentStatus = documentStatus;
    return this;
  }

  /**
   * The status of the document. See [Document Status](/guide/user-verification/documents.html#status-documentstatus) for more information. 
   * @return documentStatus
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentStatusEnum getDocumentStatus() {
    return documentStatus;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentStatus(@javax.annotation.Nullable DocumentStatusEnum documentStatus) {
    this.documentStatus = documentStatus;
  }

  public DocumentObjectDocumentsInner documentTypeId(@javax.annotation.Nullable Integer documentTypeId) {
    
    this.documentTypeId = documentTypeId;
    return this;
  }

  /**
   * The id of the type of Document.   See [Document types](/guide/user-verification/documents.html#types-documenttypeid) for the list of values. 
   * @return documentTypeId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDocumentTypeId() {
    return documentTypeId;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentTypeId(@javax.annotation.Nullable Integer documentTypeId) {
    this.documentTypeId = documentTypeId;
  }

  public DocumentObjectDocumentsInner documentType(@javax.annotation.Nullable String documentType) {
    
    this.documentType = documentType;
    return this;
  }

  /**
   * The type of the Document.  See [Document types](/guide/user-verification/documents.html#types-documenttypeid) for the list of values. 
   * @return documentType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocumentType() {
    return documentType;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentType(@javax.annotation.Nullable String documentType) {
    this.documentType = documentType;
  }

  public DocumentObjectDocumentsInner fileName(@javax.annotation.Nullable String fileName) {
    
    this.fileName = fileName;
    return this;
  }

  /**
   * Get fileName
   * @return fileName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFileName() {
    return fileName;
  }


  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileName(@javax.annotation.Nullable String fileName) {
    this.fileName = fileName;
  }

  public DocumentObjectDocumentsInner thumbfileName(@javax.annotation.Nullable String thumbfileName) {
    
    this.thumbfileName = thumbfileName;
    return this;
  }

  /**
   * Get thumbfileName
   * @return thumbfileName
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THUMBFILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getThumbfileName() {
    return thumbfileName;
  }


  @JsonProperty(JSON_PROPERTY_THUMBFILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThumbfileName(@javax.annotation.Nullable String thumbfileName) {
    this.thumbfileName = thumbfileName;
  }

  public DocumentObjectDocumentsInner createdDate(@javax.annotation.Nullable OffsetDateTime createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Date and time at which the document was created.  Format: &#x60;YYYY-MM-DD HH:mm:ss&#x60; 
   * @return createdDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedDate(@javax.annotation.Nullable OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public DocumentObjectDocumentsInner modifiedDate(@javax.annotation.Nullable OffsetDateTime modifiedDate) {
    
    this.modifiedDate = modifiedDate;
    return this;
  }

  /**
   * Date and time at which the document was last updated.  Format: &#x60;YYYY-MM-DD HH:mm:ss&#x60; 
   * @return modifiedDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModifiedDate(@javax.annotation.Nullable OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public DocumentObjectDocumentsInner codeStatus(@javax.annotation.Nullable CodeStatusEnum codeStatus) {
    
    this.codeStatus = codeStatus;
    return this;
  }

  /**
   * The status code of the document. See [Status](/guide/user-verification/documents.html#status-documentstatus) for more information. 
   * @return codeStatus
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CodeStatusEnum getCodeStatus() {
    return codeStatus;
  }


  @JsonProperty(JSON_PROPERTY_CODE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodeStatus(@javax.annotation.Nullable CodeStatusEnum codeStatus) {
    this.codeStatus = codeStatus;
  }

  public DocumentObjectDocumentsInner informationStatus(@javax.annotation.Nullable String informationStatus) {
    
    this.informationStatus = informationStatus;
    return this;
  }

  /**
   * Additional information about the document status, if any.
   * @return informationStatus
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INFORMATION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInformationStatus() {
    return informationStatus;
  }


  @JsonProperty(JSON_PROPERTY_INFORMATION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInformationStatus(@javax.annotation.Nullable String informationStatus) {
    this.informationStatus = informationStatus;
  }

  public DocumentObjectDocumentsInner residenceId(@javax.annotation.Nullable Long residenceId) {
    
    this.residenceId = residenceId;
    return this;
  }

  /**
   * The unique identifier of the User&#39;s [Tax Residence](/guide/user-verification/tax-residence.html).   Only available for &#x60;documentTypeId&#x60; is &#x60;24&#x60; or &#x60;25&#x60;.  
   * @return residenceId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESIDENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getResidenceId() {
    return residenceId;
  }


  @JsonProperty(JSON_PROPERTY_RESIDENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResidenceId(@javax.annotation.Nullable Long residenceId) {
    this.residenceId = residenceId;
  }

  public DocumentObjectDocumentsInner temporaryUrl(@javax.annotation.Nullable String temporaryUrl) {
    
    this.temporaryUrl = temporaryUrl;
    return this;
  }

  /**
   * Get temporaryUrl
   * @return temporaryUrl
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEMPORARY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTemporaryUrl() {
    return temporaryUrl;
  }


  @JsonProperty(JSON_PROPERTY_TEMPORARY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemporaryUrl(@javax.annotation.Nullable String temporaryUrl) {
    this.temporaryUrl = temporaryUrl;
  }

  public DocumentObjectDocumentsInner temporaryUrlThumb(@javax.annotation.Nullable String temporaryUrlThumb) {
    
    this.temporaryUrlThumb = temporaryUrlThumb;
    return this;
  }

  /**
   * Get temporaryUrlThumb
   * @return temporaryUrlThumb
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEMPORARY_URL_THUMB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTemporaryUrlThumb() {
    return temporaryUrlThumb;
  }


  @JsonProperty(JSON_PROPERTY_TEMPORARY_URL_THUMB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemporaryUrlThumb(@javax.annotation.Nullable String temporaryUrlThumb) {
    this.temporaryUrlThumb = temporaryUrlThumb;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentObjectDocumentsInner documentObjectDocumentsInner = (DocumentObjectDocumentsInner) o;
    return Objects.equals(this.documentId, documentObjectDocumentsInner.documentId) &&
        Objects.equals(this.documentTag, documentObjectDocumentsInner.documentTag) &&
        Objects.equals(this.userId, documentObjectDocumentsInner.userId) &&
        Objects.equals(this.userFirstname, documentObjectDocumentsInner.userFirstname) &&
        Objects.equals(this.userLastname, documentObjectDocumentsInner.userLastname) &&
        Objects.equals(this.name, documentObjectDocumentsInner.name) &&
        Objects.equals(this.documentStatus, documentObjectDocumentsInner.documentStatus) &&
        Objects.equals(this.documentTypeId, documentObjectDocumentsInner.documentTypeId) &&
        Objects.equals(this.documentType, documentObjectDocumentsInner.documentType) &&
        Objects.equals(this.fileName, documentObjectDocumentsInner.fileName) &&
        Objects.equals(this.thumbfileName, documentObjectDocumentsInner.thumbfileName) &&
        Objects.equals(this.createdDate, documentObjectDocumentsInner.createdDate) &&
        Objects.equals(this.modifiedDate, documentObjectDocumentsInner.modifiedDate) &&
        Objects.equals(this.codeStatus, documentObjectDocumentsInner.codeStatus) &&
        Objects.equals(this.informationStatus, documentObjectDocumentsInner.informationStatus) &&
        Objects.equals(this.residenceId, documentObjectDocumentsInner.residenceId) &&
        Objects.equals(this.temporaryUrl, documentObjectDocumentsInner.temporaryUrl) &&
        Objects.equals(this.temporaryUrlThumb, documentObjectDocumentsInner.temporaryUrlThumb);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentId, documentTag, userId, userFirstname, userLastname, name, documentStatus, documentTypeId, documentType, fileName, thumbfileName, createdDate, modifiedDate, codeStatus, informationStatus, residenceId, temporaryUrl, temporaryUrlThumb);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentObjectDocumentsInner {\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    documentTag: ").append(toIndentedString(documentTag)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userFirstname: ").append(toIndentedString(userFirstname)).append("\n");
    sb.append("    userLastname: ").append(toIndentedString(userLastname)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    documentStatus: ").append(toIndentedString(documentStatus)).append("\n");
    sb.append("    documentTypeId: ").append(toIndentedString(documentTypeId)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    thumbfileName: ").append(toIndentedString(thumbfileName)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    codeStatus: ").append(toIndentedString(codeStatus)).append("\n");
    sb.append("    informationStatus: ").append(toIndentedString(informationStatus)).append("\n");
    sb.append("    residenceId: ").append(toIndentedString(residenceId)).append("\n");
    sb.append("    temporaryUrl: ").append(toIndentedString(temporaryUrl)).append("\n");
    sb.append("    temporaryUrlThumb: ").append(toIndentedString(temporaryUrlThumb)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

