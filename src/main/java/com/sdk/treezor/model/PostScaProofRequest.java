/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostScaProofRequest
 */
@JsonPropertyOrder({
  PostScaProofRequest.JSON_PROPERTY_SCA_WALLET_ID,
  PostScaProofRequest.JSON_PROPERTY_URL,
  PostScaProofRequest.JSON_PROPERTY_BODY
})
@JsonTypeName("postScaProof_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class PostScaProofRequest {
  public static final String JSON_PROPERTY_SCA_WALLET_ID = "scaWalletId";
  @javax.annotation.Nonnull
  private String scaWalletId;

  public static final String JSON_PROPERTY_URL = "url";
  @javax.annotation.Nullable
  private String url;

  public static final String JSON_PROPERTY_BODY = "body";
  @javax.annotation.Nullable
  private Object body;

  public PostScaProofRequest() {
  }

  public PostScaProofRequest scaWalletId(@javax.annotation.Nonnull String scaWalletId) {
    
    this.scaWalletId = scaWalletId;
    return this;
  }

  /**
   * The unique identifier of the SCA Wallet from which the scaProof is to be created. 
   * @return scaWalletId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SCA_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getScaWalletId() {
    return scaWalletId;
  }


  @JsonProperty(JSON_PROPERTY_SCA_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setScaWalletId(@javax.annotation.Nonnull String scaWalletId) {
    this.scaWalletId = scaWalletId;
  }

  public PostScaProofRequest url(@javax.annotation.Nullable String url) {
    
    this.url = url;
    return this;
  }

  /**
   * The URL of the endpoint for which the sensitive action is to be secured with an SCA. 
   * @return url
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(@javax.annotation.Nullable String url) {
    this.url = url;
  }

  public PostScaProofRequest body(@javax.annotation.Nullable Object body) {
    
    this.body = body;
    return this;
  }

  /**
   * Data to sign in the SCA proof body.   See the [Per Operation](/guide/strong-customer-authentication/securing-endpoints.html#per-operation) table to know which data to sign for each endpoint. 
   * @return body
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BODY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getBody() {
    return body;
  }


  @JsonProperty(JSON_PROPERTY_BODY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBody(@javax.annotation.Nullable Object body) {
    this.body = body;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostScaProofRequest postScaProofRequest = (PostScaProofRequest) o;
    return Objects.equals(this.scaWalletId, postScaProofRequest.scaWalletId) &&
        Objects.equals(this.url, postScaProofRequest.url) &&
        Objects.equals(this.body, postScaProofRequest.body);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scaWalletId, url, body);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostScaProofRequest {\n");
    sb.append("    scaWalletId: ").append(toIndentedString(scaWalletId)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

