/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateDocumentsRequest
 */
@JsonPropertyOrder({
  CreateDocumentsRequest.JSON_PROPERTY_DOCUMENT_TAG,
  CreateDocumentsRequest.JSON_PROPERTY_ACCESS_TAG,
  CreateDocumentsRequest.JSON_PROPERTY_USER_ID,
  CreateDocumentsRequest.JSON_PROPERTY_RESIDENCE_ID,
  CreateDocumentsRequest.JSON_PROPERTY_DOCUMENT_TYPE_ID,
  CreateDocumentsRequest.JSON_PROPERTY_NAME,
  CreateDocumentsRequest.JSON_PROPERTY_FILE_CONTENT_BASE64
})
@JsonTypeName("createDocuments_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class CreateDocumentsRequest {
  public static final String JSON_PROPERTY_DOCUMENT_TAG = "documentTag";
  @javax.annotation.Nullable
  private String documentTag;

  public static final String JSON_PROPERTY_ACCESS_TAG = "accessTag";
  @javax.annotation.Nullable
  private String accessTag;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  @javax.annotation.Nonnull
  private Integer userId;

  public static final String JSON_PROPERTY_RESIDENCE_ID = "residenceId";
  @javax.annotation.Nullable
  private Long residenceId;

  public static final String JSON_PROPERTY_DOCUMENT_TYPE_ID = "documentTypeId";
  @javax.annotation.Nonnull
  private Integer documentTypeId;

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_FILE_CONTENT_BASE64 = "fileContentBase64";
  @javax.annotation.Nonnull
  private byte[] fileContentBase64;

  public CreateDocumentsRequest() {
  }

  public CreateDocumentsRequest documentTag(@javax.annotation.Nullable String documentTag) {
    
    this.documentTag = documentTag;
    return this;
  }

  /**
   * Custom attribute to use as you see fit. Learn more in the [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.  Max length: 250 characters   Format: hc characters and &#x60;/&#x60; &#x60;!&#x60; &#x60;-&#x60; &#x60;_&#x60; &#x60;.&#x60; &#x60;*&#x60; &#x60;&#39;&#x60; &#x60;(&#x60; &#x60;)&#x60; 
   * @return documentTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocumentTag() {
    return documentTag;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentTag(@javax.annotation.Nullable String documentTag) {
    this.documentTag = documentTag;
  }

  public CreateDocumentsRequest accessTag(@javax.annotation.Nullable String accessTag) {
    
    this.accessTag = accessTag;
    return this;
  }

  /**
   * A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). 
   * @return accessTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccessTag() {
    return accessTag;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessTag(@javax.annotation.Nullable String accessTag) {
    this.accessTag = accessTag;
  }

  public CreateDocumentsRequest userId(@javax.annotation.Nonnull Integer userId) {
    
    this.userId = userId;
    return this;
  }

  /**
   * The unique identifier of the User the document belongs to.
   * @return userId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserId(@javax.annotation.Nonnull Integer userId) {
    this.userId = userId;
  }

  public CreateDocumentsRequest residenceId(@javax.annotation.Nullable Long residenceId) {
    
    this.residenceId = residenceId;
    return this;
  }

  /**
   * The unique identifier of the User&#39;s [Tax Residence](/guide/user-verification/tax-residence.html).   Required if the document &#x60;documentTypeId&#x60; is &#x60;24&#x60; or &#x60;25&#x60;. Shouldn&#39;t be provided otherwise. 
   * minimum: 1
   * @return residenceId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESIDENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getResidenceId() {
    return residenceId;
  }


  @JsonProperty(JSON_PROPERTY_RESIDENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResidenceId(@javax.annotation.Nullable Long residenceId) {
    this.residenceId = residenceId;
  }

  public CreateDocumentsRequest documentTypeId(@javax.annotation.Nonnull Integer documentTypeId) {
    
    this.documentTypeId = documentTypeId;
    return this;
  }

  /**
   * The id of the type of Document.   See [Document types](/guide/user-verification/documents.html#types-documenttypeid) for the list of values. 
   * @return documentTypeId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DOCUMENT_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDocumentTypeId() {
    return documentTypeId;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDocumentTypeId(@javax.annotation.Nonnull Integer documentTypeId) {
    this.documentTypeId = documentTypeId;
  }

  public CreateDocumentsRequest name(@javax.annotation.Nonnull String name) {
    
    this.name = name;
    return this;
  }

  /**
   * The name of the document.
   * @return name
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }

  public CreateDocumentsRequest fileContentBase64(@javax.annotation.Nonnull byte[] fileContentBase64) {
    
    this.fileContentBase64 = fileContentBase64;
    return this;
  }

  /**
   * The file encoded in standard base64 (RFC 4648).
   * @return fileContentBase64
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FILE_CONTENT_BASE64)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public byte[] getFileContentBase64() {
    return fileContentBase64;
  }


  @JsonProperty(JSON_PROPERTY_FILE_CONTENT_BASE64)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFileContentBase64(@javax.annotation.Nonnull byte[] fileContentBase64) {
    this.fileContentBase64 = fileContentBase64;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDocumentsRequest createDocumentsRequest = (CreateDocumentsRequest) o;
    return Objects.equals(this.documentTag, createDocumentsRequest.documentTag) &&
        Objects.equals(this.accessTag, createDocumentsRequest.accessTag) &&
        Objects.equals(this.userId, createDocumentsRequest.userId) &&
        Objects.equals(this.residenceId, createDocumentsRequest.residenceId) &&
        Objects.equals(this.documentTypeId, createDocumentsRequest.documentTypeId) &&
        Objects.equals(this.name, createDocumentsRequest.name) &&
        Arrays.equals(this.fileContentBase64, createDocumentsRequest.fileContentBase64);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentTag, accessTag, userId, residenceId, documentTypeId, name, Arrays.hashCode(fileContentBase64));
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDocumentsRequest {\n");
    sb.append("    documentTag: ").append(toIndentedString(documentTag)).append("\n");
    sb.append("    accessTag: ").append(toIndentedString(accessTag)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    residenceId: ").append(toIndentedString(residenceId)).append("\n");
    sb.append("    documentTypeId: ").append(toIndentedString(documentTypeId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    fileContentBase64: ").append(toIndentedString(fileContentBase64)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

