/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MerchantIdGroupObjectMerchantIdRestrictionGroupsInner
 */
@JsonPropertyOrder({
  MerchantIdGroupObjectMerchantIdRestrictionGroupsInner.JSON_PROPERTY_ID,
  MerchantIdGroupObjectMerchantIdRestrictionGroupsInner.JSON_PROPERTY_NAME,
  MerchantIdGroupObjectMerchantIdRestrictionGroupsInner.JSON_PROPERTY_IS_WHITELIST,
  MerchantIdGroupObjectMerchantIdRestrictionGroupsInner.JSON_PROPERTY_MERCHANTS,
  MerchantIdGroupObjectMerchantIdRestrictionGroupsInner.JSON_PROPERTY_STATUS,
  MerchantIdGroupObjectMerchantIdRestrictionGroupsInner.JSON_PROPERTY_START_DATE,
  MerchantIdGroupObjectMerchantIdRestrictionGroupsInner.JSON_PROPERTY_CREATED_DATE
})
@JsonTypeName("MerchantIdGroupObject_merchantIdRestrictionGroups_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class MerchantIdGroupObjectMerchantIdRestrictionGroupsInner {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private Integer id;

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_IS_WHITELIST = "isWhitelist";
  @javax.annotation.Nullable
  private Boolean isWhitelist = true;

  public static final String JSON_PROPERTY_MERCHANTS = "merchants";
  @javax.annotation.Nullable
  private List<String> merchants = new ArrayList<>();

  /**
   * The status of the Merchant ID restriction group.
   */
  public enum StatusEnum {
    CANCELED(String.valueOf("CANCELED")),
    
    PENDING(String.valueOf("PENDING")),
    
    VALIDATED(String.valueOf("VALIDATED"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nullable
  private StatusEnum status;

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  @javax.annotation.Nullable
  private OffsetDateTime startDate;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  @javax.annotation.Nullable
  private OffsetDateTime createdDate;

  public MerchantIdGroupObjectMerchantIdRestrictionGroupsInner() {
  }

  public MerchantIdGroupObjectMerchantIdRestrictionGroupsInner id(@javax.annotation.Nullable Integer id) {
    
    this.id = id;
    return this;
  }

  /**
   * The unique identifier of the Merchant ID restriction group.
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable Integer id) {
    this.id = id;
  }

  public MerchantIdGroupObjectMerchantIdRestrictionGroupsInner name(@javax.annotation.Nullable String name) {
    
    this.name = name;
    return this;
  }

  /**
   * The name of the Merchant ID restriction group.
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }

  public MerchantIdGroupObjectMerchantIdRestrictionGroupsInner isWhitelist(@javax.annotation.Nullable Boolean isWhitelist) {
    
    this.isWhitelist = isWhitelist;
    return this;
  }

  /**
   * Indicates the kind of restriction:  * &#x60;true&#x60; (default) – Allows only a specified list of merchant ids(whitelist) * &#x60;false&#x60; – Allows all merchant ids except the specified list (blacklist) 
   * @return isWhitelist
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_WHITELIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsWhitelist() {
    return isWhitelist;
  }


  @JsonProperty(JSON_PROPERTY_IS_WHITELIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsWhitelist(@javax.annotation.Nullable Boolean isWhitelist) {
    this.isWhitelist = isWhitelist;
  }

  public MerchantIdGroupObjectMerchantIdRestrictionGroupsInner merchants(@javax.annotation.Nullable List<String> merchants) {
    
    this.merchants = merchants;
    return this;
  }

  public MerchantIdGroupObjectMerchantIdRestrictionGroupsInner addMerchantsItem(String merchantsItem) {
    if (this.merchants == null) {
      this.merchants = new ArrayList<>();
    }
    this.merchants.add(merchantsItem);
    return this;
  }

  /**
   * List of Merchant IDs (each item is a string).
   * @return merchants
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERCHANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getMerchants() {
    return merchants;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchants(@javax.annotation.Nullable List<String> merchants) {
    this.merchants = merchants;
  }

  public MerchantIdGroupObjectMerchantIdRestrictionGroupsInner status(@javax.annotation.Nullable StatusEnum status) {
    
    this.status = status;
    return this;
  }

  /**
   * The status of the Merchant ID restriction group.
   * @return status
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(@javax.annotation.Nullable StatusEnum status) {
    this.status = status;
  }

  public MerchantIdGroupObjectMerchantIdRestrictionGroupsInner startDate(@javax.annotation.Nullable OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

  /**
   * The date and time at which the restriction starts.   Format: &#x60;YYYY-MM-DD HH:mm:ss&#x60; 
   * @return startDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(@javax.annotation.Nullable OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public MerchantIdGroupObjectMerchantIdRestrictionGroupsInner createdDate(@javax.annotation.Nullable OffsetDateTime createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

  /**
   * The date and time at which the restriction group was created.   Format: &#x60;YYYY-MM-DD HH:mm:ss&#x60; 
   * @return createdDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedDate(@javax.annotation.Nullable OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MerchantIdGroupObjectMerchantIdRestrictionGroupsInner merchantIdGroupObjectMerchantIdRestrictionGroupsInner = (MerchantIdGroupObjectMerchantIdRestrictionGroupsInner) o;
    return Objects.equals(this.id, merchantIdGroupObjectMerchantIdRestrictionGroupsInner.id) &&
        Objects.equals(this.name, merchantIdGroupObjectMerchantIdRestrictionGroupsInner.name) &&
        Objects.equals(this.isWhitelist, merchantIdGroupObjectMerchantIdRestrictionGroupsInner.isWhitelist) &&
        Objects.equals(this.merchants, merchantIdGroupObjectMerchantIdRestrictionGroupsInner.merchants) &&
        Objects.equals(this.status, merchantIdGroupObjectMerchantIdRestrictionGroupsInner.status) &&
        Objects.equals(this.startDate, merchantIdGroupObjectMerchantIdRestrictionGroupsInner.startDate) &&
        Objects.equals(this.createdDate, merchantIdGroupObjectMerchantIdRestrictionGroupsInner.createdDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, isWhitelist, merchants, status, startDate, createdDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MerchantIdGroupObjectMerchantIdRestrictionGroupsInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isWhitelist: ").append(toIndentedString(isWhitelist)).append("\n");
    sb.append("    merchants: ").append(toIndentedString(merchants)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

