/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PutDigitalizedRequest
 */
@JsonPropertyOrder({
  PutDigitalizedRequest.JSON_PROPERTY_STATUS,
  PutDigitalizedRequest.JSON_PROPERTY_REASON_CODE
})
@JsonTypeName("putDigitalized_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class PutDigitalizedRequest {
  /**
   * The new status for the payment Token. 
   */
  public enum StatusEnum {
    SUSPEND(String.valueOf("suspend")),
    
    UNSUSPEND(String.valueOf("unsuspend"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nonnull
  private StatusEnum status;

  /**
   * The reason code for the action. See the [corresponding article](/guide/cards/x-pay-google-apple.html#parameters) for the definition of each value. 
   */
  public enum ReasonCodeEnum {
    F(String.valueOf("F")),
    
    L(String.valueOf("L")),
    
    S(String.valueOf("S")),
    
    T(String.valueOf("T")),
    
    Z(String.valueOf("Z"));

    private String value;

    ReasonCodeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReasonCodeEnum fromValue(String value) {
      for (ReasonCodeEnum b : ReasonCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REASON_CODE = "reasonCode";
  @javax.annotation.Nonnull
  private ReasonCodeEnum reasonCode;

  public PutDigitalizedRequest() {
  }

  public PutDigitalizedRequest status(@javax.annotation.Nonnull StatusEnum status) {
    
    this.status = status;
    return this;
  }

  /**
   * The new status for the payment Token. 
   * @return status
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@javax.annotation.Nonnull StatusEnum status) {
    this.status = status;
  }

  public PutDigitalizedRequest reasonCode(@javax.annotation.Nonnull ReasonCodeEnum reasonCode) {
    
    this.reasonCode = reasonCode;
    return this;
  }

  /**
   * The reason code for the action. See the [corresponding article](/guide/cards/x-pay-google-apple.html#parameters) for the definition of each value. 
   * @return reasonCode
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REASON_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ReasonCodeEnum getReasonCode() {
    return reasonCode;
  }


  @JsonProperty(JSON_PROPERTY_REASON_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReasonCode(@javax.annotation.Nonnull ReasonCodeEnum reasonCode) {
    this.reasonCode = reasonCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutDigitalizedRequest putDigitalizedRequest = (PutDigitalizedRequest) o;
    return Objects.equals(this.status, putDigitalizedRequest.status) &&
        Objects.equals(this.reasonCode, putDigitalizedRequest.reasonCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, reasonCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutDigitalizedRequest {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    reasonCode: ").append(toIndentedString(reasonCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

