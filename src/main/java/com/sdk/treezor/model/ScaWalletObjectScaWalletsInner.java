/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sdk.treezor.model.ScaWalletObjectScaWalletsInnerMobileWallet;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ScaWalletObjectScaWalletsInner
 */
@JsonPropertyOrder({
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_ID,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_STATUS,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_SUB_STATUS,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_PASSCODE_STATUS,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_LOCKED,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_LOCK_REASONS,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_LOCK_MESSAGE,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_SETTINGS_PROFILE,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_MOBILE_WALLET,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_ACTIVATION_CODE,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_CREATION_DATE,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_DELETION_DATE,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_ACTIVATION_CODE_EXPIRY_DATE,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_AUTHENTICATION_METHODS,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_INVALID_ACTIVATION_ATTEMPTS,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_USER_ID,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_SCA_WALLET_TAG,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_CLIENT_ID,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_ACTIVATION_DATE,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_LOCK_DATE,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_UNLOCK_DATE,
  ScaWalletObjectScaWalletsInner.JSON_PROPERTY_RESET_PIN_DATE
})
@JsonTypeName("ScaWalletObject_scaWallets_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class ScaWalletObjectScaWalletsInner {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private String id;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    CREATING(String.valueOf("CREATING")),
    
    CREATED(String.valueOf("CREATED")),
    
    INITIALIZING(String.valueOf("INITIALIZING")),
    
    ACTIVE(String.valueOf("ACTIVE")),
    
    DELETED(String.valueOf("DELETED"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nullable
  private JsonNullable<StatusEnum> status = JsonNullable.<StatusEnum>undefined();

  /**
   * Gets or Sets subStatus
   */
  public enum SubStatusEnum {
    CREATING_IN_PROGRESS(String.valueOf("CREATING_IN_PROGRESS")),
    
    CREATED_BLOCKED(String.valueOf("CREATED_BLOCKED")),
    
    CREATED_READY(String.valueOf("CREATED_READY")),
    
    INITIALIZING_MOBILE(String.valueOf("INITIALIZING_MOBILE")),
    
    ACTIVATED_LOGGED_IN(String.valueOf("ACTIVATED_LOGGED_IN")),
    
    ACTIVATED_LOGGED_OUT(String.valueOf("ACTIVATED_LOGGED_OUT")),
    
    DELETED_BY_ISSUER(String.valueOf("DELETED_BY_ISSUER")),
    
    DELETED_UNINSTALLED(String.valueOf("DELETED_UNINSTALLED"));

    private String value;

    SubStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SubStatusEnum fromValue(String value) {
      for (SubStatusEnum b : SubStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_SUB_STATUS = "subStatus";
  @javax.annotation.Nullable
  private JsonNullable<SubStatusEnum> subStatus = JsonNullable.<SubStatusEnum>undefined();

  /**
   * Gets or Sets passcodeStatus
   */
  public enum PasscodeStatusEnum {
    NONE(String.valueOf("NONE")),
    
    NOT_SET(String.valueOf("NOT_SET")),
    
    SET(String.valueOf("SET")),
    
    TO_BE_CHANGED(String.valueOf("TO_BE_CHANGED"));

    private String value;

    PasscodeStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PasscodeStatusEnum fromValue(String value) {
      for (PasscodeStatusEnum b : PasscodeStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_PASSCODE_STATUS = "passcodeStatus";
  @javax.annotation.Nullable
  private JsonNullable<PasscodeStatusEnum> passcodeStatus = JsonNullable.<PasscodeStatusEnum>undefined();

  public static final String JSON_PROPERTY_LOCKED = "locked";
  @javax.annotation.Nullable
  private JsonNullable<Boolean> locked = JsonNullable.<Boolean>undefined();

  /**
   * Gets or Sets lockReasons
   */
  public enum LockReasonsEnum {
    FRAUDULENT_USE_SUSPECTED_BY_CLIENT(String.valueOf("FRAUDULENT_USE_SUSPECTED_BY_CLIENT")),
    
    FRAUDULENT_USE_SUSPECTED_BY_ISSUER(String.valueOf("FRAUDULENT_USE_SUSPECTED_BY_ISSUER")),
    
    INCIDENT(String.valueOf("INCIDENT")),
    
    ISSUER(String.valueOf("ISSUER")),
    
    LOST_DEVICE(String.valueOf("LOST_DEVICE")),
    
    STOLEN_DEVICE(String.valueOf("STOLEN_DEVICE")),
    
    TERMINATE_SERVICE(String.valueOf("TERMINATE_SERVICE"));

    private String value;

    LockReasonsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LockReasonsEnum fromValue(String value) {
      for (LockReasonsEnum b : LockReasonsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LOCK_REASONS = "lockReasons";
  @javax.annotation.Nullable
  private JsonNullable<List<LockReasonsEnum>> lockReasons = JsonNullable.<List<LockReasonsEnum>>undefined();

  public static final String JSON_PROPERTY_LOCK_MESSAGE = "lockMessage";
  @javax.annotation.Nullable
  private JsonNullable<String> lockMessage = JsonNullable.<String>undefined();

  /**
   * Gets or Sets settingsProfile
   */
  public enum SettingsProfileEnum {
    DEFAULT(String.valueOf("default")),
    
    WEBAUTHN(String.valueOf("webauthn"));

    private String value;

    SettingsProfileEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SettingsProfileEnum fromValue(String value) {
      for (SettingsProfileEnum b : SettingsProfileEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_SETTINGS_PROFILE = "settingsProfile";
  @javax.annotation.Nullable
  private JsonNullable<SettingsProfileEnum> settingsProfile = JsonNullable.<SettingsProfileEnum>undefined();

  public static final String JSON_PROPERTY_MOBILE_WALLET = "mobileWallet";
  @javax.annotation.Nullable
  private ScaWalletObjectScaWalletsInnerMobileWallet mobileWallet;

  public static final String JSON_PROPERTY_ACTIVATION_CODE = "activationCode";
  @javax.annotation.Nullable
  private String activationCode;

  public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
  @javax.annotation.Nullable
  private JsonNullable<OffsetDateTime> creationDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_DELETION_DATE = "deletionDate";
  @javax.annotation.Nullable
  private JsonNullable<OffsetDateTime> deletionDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_ACTIVATION_CODE_EXPIRY_DATE = "activationCodeExpiryDate";
  @javax.annotation.Nullable
  private JsonNullable<OffsetDateTime> activationCodeExpiryDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_AUTHENTICATION_METHODS = "authenticationMethods";
  @javax.annotation.Nullable
  private JsonNullable<List<Object>> authenticationMethods = JsonNullable.<List<Object>>undefined();

  public static final String JSON_PROPERTY_INVALID_ACTIVATION_ATTEMPTS = "invalidActivationAttempts";
  @javax.annotation.Nullable
  private JsonNullable<String> invalidActivationAttempts = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USER_ID = "userId";
  @javax.annotation.Nullable
  private JsonNullable<String> userId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SCA_WALLET_TAG = "scaWalletTag";
  @javax.annotation.Nullable
  private JsonNullable<String> scaWalletTag = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_ID = "clientId";
  @javax.annotation.Nullable
  private String clientId;

  public static final String JSON_PROPERTY_ACTIVATION_DATE = "activationDate";
  @javax.annotation.Nullable
  private JsonNullable<OffsetDateTime> activationDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_LOCK_DATE = "lockDate";
  @javax.annotation.Nullable
  private JsonNullable<OffsetDateTime> lockDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_UNLOCK_DATE = "unlockDate";
  @javax.annotation.Nullable
  private JsonNullable<OffsetDateTime> unlockDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_RESET_PIN_DATE = "resetPinDate";
  @javax.annotation.Nullable
  private JsonNullable<OffsetDateTime> resetPinDate = JsonNullable.<OffsetDateTime>undefined();

  public ScaWalletObjectScaWalletsInner() {
  }

  public ScaWalletObjectScaWalletsInner id(@javax.annotation.Nullable String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }

  public ScaWalletObjectScaWalletsInner status(@javax.annotation.Nullable StatusEnum status) {
    this.status = JsonNullable.<StatusEnum>of(status);
    
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public StatusEnum getStatus() {
        return status.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<StatusEnum> getStatus_JsonNullable() {
    return status;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS)
  public void setStatus_JsonNullable(JsonNullable<StatusEnum> status) {
    this.status = status;
  }

  public void setStatus(@javax.annotation.Nullable StatusEnum status) {
    this.status = JsonNullable.<StatusEnum>of(status);
  }

  public ScaWalletObjectScaWalletsInner subStatus(@javax.annotation.Nullable SubStatusEnum subStatus) {
    this.subStatus = JsonNullable.<SubStatusEnum>of(subStatus);
    
    return this;
  }

  /**
   * Get subStatus
   * @return subStatus
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public SubStatusEnum getSubStatus() {
        return subStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUB_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SubStatusEnum> getSubStatus_JsonNullable() {
    return subStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_SUB_STATUS)
  public void setSubStatus_JsonNullable(JsonNullable<SubStatusEnum> subStatus) {
    this.subStatus = subStatus;
  }

  public void setSubStatus(@javax.annotation.Nullable SubStatusEnum subStatus) {
    this.subStatus = JsonNullable.<SubStatusEnum>of(subStatus);
  }

  public ScaWalletObjectScaWalletsInner passcodeStatus(@javax.annotation.Nullable PasscodeStatusEnum passcodeStatus) {
    this.passcodeStatus = JsonNullable.<PasscodeStatusEnum>of(passcodeStatus);
    
    return this;
  }

  /**
   * Get passcodeStatus
   * @return passcodeStatus
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public PasscodeStatusEnum getPasscodeStatus() {
        return passcodeStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSCODE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PasscodeStatusEnum> getPasscodeStatus_JsonNullable() {
    return passcodeStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSCODE_STATUS)
  public void setPasscodeStatus_JsonNullable(JsonNullable<PasscodeStatusEnum> passcodeStatus) {
    this.passcodeStatus = passcodeStatus;
  }

  public void setPasscodeStatus(@javax.annotation.Nullable PasscodeStatusEnum passcodeStatus) {
    this.passcodeStatus = JsonNullable.<PasscodeStatusEnum>of(passcodeStatus);
  }

  public ScaWalletObjectScaWalletsInner locked(@javax.annotation.Nullable Boolean locked) {
    this.locked = JsonNullable.<Boolean>of(locked);
    
    return this;
  }

  /**
   * Get locked
   * @return locked
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getLocked() {
        return locked.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getLocked_JsonNullable() {
    return locked;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCKED)
  public void setLocked_JsonNullable(JsonNullable<Boolean> locked) {
    this.locked = locked;
  }

  public void setLocked(@javax.annotation.Nullable Boolean locked) {
    this.locked = JsonNullable.<Boolean>of(locked);
  }

  public ScaWalletObjectScaWalletsInner lockReasons(@javax.annotation.Nullable List<LockReasonsEnum> lockReasons) {
    this.lockReasons = JsonNullable.<List<LockReasonsEnum>>of(lockReasons);
    
    return this;
  }

  public ScaWalletObjectScaWalletsInner addLockReasonsItem(LockReasonsEnum lockReasonsItem) {
    if (this.lockReasons == null || !this.lockReasons.isPresent()) {
      this.lockReasons = JsonNullable.<List<LockReasonsEnum>>of(new ArrayList<>());
    }
    try {
      this.lockReasons.get().add(lockReasonsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get lockReasons
   * @return lockReasons
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public List<LockReasonsEnum> getLockReasons() {
        return lockReasons.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCK_REASONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LockReasonsEnum>> getLockReasons_JsonNullable() {
    return lockReasons;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCK_REASONS)
  public void setLockReasons_JsonNullable(JsonNullable<List<LockReasonsEnum>> lockReasons) {
    this.lockReasons = lockReasons;
  }

  public void setLockReasons(@javax.annotation.Nullable List<LockReasonsEnum> lockReasons) {
    this.lockReasons = JsonNullable.<List<LockReasonsEnum>>of(lockReasons);
  }

  public ScaWalletObjectScaWalletsInner lockMessage(@javax.annotation.Nullable String lockMessage) {
    this.lockMessage = JsonNullable.<String>of(lockMessage);
    
    return this;
  }

  /**
   * Get lockMessage
   * @return lockMessage
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getLockMessage() {
        return lockMessage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCK_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLockMessage_JsonNullable() {
    return lockMessage;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCK_MESSAGE)
  public void setLockMessage_JsonNullable(JsonNullable<String> lockMessage) {
    this.lockMessage = lockMessage;
  }

  public void setLockMessage(@javax.annotation.Nullable String lockMessage) {
    this.lockMessage = JsonNullable.<String>of(lockMessage);
  }

  public ScaWalletObjectScaWalletsInner settingsProfile(@javax.annotation.Nullable SettingsProfileEnum settingsProfile) {
    this.settingsProfile = JsonNullable.<SettingsProfileEnum>of(settingsProfile);
    
    return this;
  }

  /**
   * Get settingsProfile
   * @return settingsProfile
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public SettingsProfileEnum getSettingsProfile() {
        return settingsProfile.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SETTINGS_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SettingsProfileEnum> getSettingsProfile_JsonNullable() {
    return settingsProfile;
  }
  
  @JsonProperty(JSON_PROPERTY_SETTINGS_PROFILE)
  public void setSettingsProfile_JsonNullable(JsonNullable<SettingsProfileEnum> settingsProfile) {
    this.settingsProfile = settingsProfile;
  }

  public void setSettingsProfile(@javax.annotation.Nullable SettingsProfileEnum settingsProfile) {
    this.settingsProfile = JsonNullable.<SettingsProfileEnum>of(settingsProfile);
  }

  public ScaWalletObjectScaWalletsInner mobileWallet(@javax.annotation.Nullable ScaWalletObjectScaWalletsInnerMobileWallet mobileWallet) {
    
    this.mobileWallet = mobileWallet;
    return this;
  }

  /**
   * Get mobileWallet
   * @return mobileWallet
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MOBILE_WALLET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ScaWalletObjectScaWalletsInnerMobileWallet getMobileWallet() {
    return mobileWallet;
  }


  @JsonProperty(JSON_PROPERTY_MOBILE_WALLET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMobileWallet(@javax.annotation.Nullable ScaWalletObjectScaWalletsInnerMobileWallet mobileWallet) {
    this.mobileWallet = mobileWallet;
  }

  public ScaWalletObjectScaWalletsInner activationCode(@javax.annotation.Nullable String activationCode) {
    
    this.activationCode = activationCode;
    return this;
  }

  /**
   * Get activationCode
   * @return activationCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVATION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getActivationCode() {
    return activationCode;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVATION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActivationCode(@javax.annotation.Nullable String activationCode) {
    this.activationCode = activationCode;
  }

  public ScaWalletObjectScaWalletsInner creationDate(@javax.annotation.Nullable OffsetDateTime creationDate) {
    this.creationDate = JsonNullable.<OffsetDateTime>of(creationDate);
    
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getCreationDate() {
        return creationDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getCreationDate_JsonNullable() {
    return creationDate;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  public void setCreationDate_JsonNullable(JsonNullable<OffsetDateTime> creationDate) {
    this.creationDate = creationDate;
  }

  public void setCreationDate(@javax.annotation.Nullable OffsetDateTime creationDate) {
    this.creationDate = JsonNullable.<OffsetDateTime>of(creationDate);
  }

  public ScaWalletObjectScaWalletsInner deletionDate(@javax.annotation.Nullable OffsetDateTime deletionDate) {
    this.deletionDate = JsonNullable.<OffsetDateTime>of(deletionDate);
    
    return this;
  }

  /**
   * Get deletionDate
   * @return deletionDate
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getDeletionDate() {
        return deletionDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DELETION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getDeletionDate_JsonNullable() {
    return deletionDate;
  }
  
  @JsonProperty(JSON_PROPERTY_DELETION_DATE)
  public void setDeletionDate_JsonNullable(JsonNullable<OffsetDateTime> deletionDate) {
    this.deletionDate = deletionDate;
  }

  public void setDeletionDate(@javax.annotation.Nullable OffsetDateTime deletionDate) {
    this.deletionDate = JsonNullable.<OffsetDateTime>of(deletionDate);
  }

  public ScaWalletObjectScaWalletsInner activationCodeExpiryDate(@javax.annotation.Nullable OffsetDateTime activationCodeExpiryDate) {
    this.activationCodeExpiryDate = JsonNullable.<OffsetDateTime>of(activationCodeExpiryDate);
    
    return this;
  }

  /**
   * Get activationCodeExpiryDate
   * @return activationCodeExpiryDate
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getActivationCodeExpiryDate() {
        return activationCodeExpiryDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACTIVATION_CODE_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getActivationCodeExpiryDate_JsonNullable() {
    return activationCodeExpiryDate;
  }
  
  @JsonProperty(JSON_PROPERTY_ACTIVATION_CODE_EXPIRY_DATE)
  public void setActivationCodeExpiryDate_JsonNullable(JsonNullable<OffsetDateTime> activationCodeExpiryDate) {
    this.activationCodeExpiryDate = activationCodeExpiryDate;
  }

  public void setActivationCodeExpiryDate(@javax.annotation.Nullable OffsetDateTime activationCodeExpiryDate) {
    this.activationCodeExpiryDate = JsonNullable.<OffsetDateTime>of(activationCodeExpiryDate);
  }

  public ScaWalletObjectScaWalletsInner authenticationMethods(@javax.annotation.Nullable List<Object> authenticationMethods) {
    this.authenticationMethods = JsonNullable.<List<Object>>of(authenticationMethods);
    
    return this;
  }

  public ScaWalletObjectScaWalletsInner addAuthenticationMethodsItem(Object authenticationMethodsItem) {
    if (this.authenticationMethods == null || !this.authenticationMethods.isPresent()) {
      this.authenticationMethods = JsonNullable.<List<Object>>of(new ArrayList<>());
    }
    try {
      this.authenticationMethods.get().add(authenticationMethodsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get authenticationMethods
   * @return authenticationMethods
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public List<Object> getAuthenticationMethods() {
        return authenticationMethods.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_METHODS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Object>> getAuthenticationMethods_JsonNullable() {
    return authenticationMethods;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_METHODS)
  public void setAuthenticationMethods_JsonNullable(JsonNullable<List<Object>> authenticationMethods) {
    this.authenticationMethods = authenticationMethods;
  }

  public void setAuthenticationMethods(@javax.annotation.Nullable List<Object> authenticationMethods) {
    this.authenticationMethods = JsonNullable.<List<Object>>of(authenticationMethods);
  }

  public ScaWalletObjectScaWalletsInner invalidActivationAttempts(@javax.annotation.Nullable String invalidActivationAttempts) {
    this.invalidActivationAttempts = JsonNullable.<String>of(invalidActivationAttempts);
    
    return this;
  }

  /**
   * Get invalidActivationAttempts
   * @return invalidActivationAttempts
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getInvalidActivationAttempts() {
        return invalidActivationAttempts.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INVALID_ACTIVATION_ATTEMPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInvalidActivationAttempts_JsonNullable() {
    return invalidActivationAttempts;
  }
  
  @JsonProperty(JSON_PROPERTY_INVALID_ACTIVATION_ATTEMPTS)
  public void setInvalidActivationAttempts_JsonNullable(JsonNullable<String> invalidActivationAttempts) {
    this.invalidActivationAttempts = invalidActivationAttempts;
  }

  public void setInvalidActivationAttempts(@javax.annotation.Nullable String invalidActivationAttempts) {
    this.invalidActivationAttempts = JsonNullable.<String>of(invalidActivationAttempts);
  }

  public ScaWalletObjectScaWalletsInner userId(@javax.annotation.Nullable String userId) {
    this.userId = JsonNullable.<String>of(userId);
    
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getUserId() {
        return userId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUserId_JsonNullable() {
    return userId;
  }
  
  @JsonProperty(JSON_PROPERTY_USER_ID)
  public void setUserId_JsonNullable(JsonNullable<String> userId) {
    this.userId = userId;
  }

  public void setUserId(@javax.annotation.Nullable String userId) {
    this.userId = JsonNullable.<String>of(userId);
  }

  public ScaWalletObjectScaWalletsInner scaWalletTag(@javax.annotation.Nullable String scaWalletTag) {
    this.scaWalletTag = JsonNullable.<String>of(scaWalletTag);
    
    return this;
  }

  /**
   * Get scaWalletTag
   * @return scaWalletTag
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getScaWalletTag() {
        return scaWalletTag.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SCA_WALLET_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getScaWalletTag_JsonNullable() {
    return scaWalletTag;
  }
  
  @JsonProperty(JSON_PROPERTY_SCA_WALLET_TAG)
  public void setScaWalletTag_JsonNullable(JsonNullable<String> scaWalletTag) {
    this.scaWalletTag = scaWalletTag;
  }

  public void setScaWalletTag(@javax.annotation.Nullable String scaWalletTag) {
    this.scaWalletTag = JsonNullable.<String>of(scaWalletTag);
  }

  public ScaWalletObjectScaWalletsInner clientId(@javax.annotation.Nullable String clientId) {
    
    this.clientId = clientId;
    return this;
  }

  /**
   * Get clientId
   * @return clientId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientId() {
    return clientId;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientId(@javax.annotation.Nullable String clientId) {
    this.clientId = clientId;
  }

  public ScaWalletObjectScaWalletsInner activationDate(@javax.annotation.Nullable OffsetDateTime activationDate) {
    this.activationDate = JsonNullable.<OffsetDateTime>of(activationDate);
    
    return this;
  }

  /**
   * Get activationDate
   * @return activationDate
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getActivationDate() {
        return activationDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACTIVATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getActivationDate_JsonNullable() {
    return activationDate;
  }
  
  @JsonProperty(JSON_PROPERTY_ACTIVATION_DATE)
  public void setActivationDate_JsonNullable(JsonNullable<OffsetDateTime> activationDate) {
    this.activationDate = activationDate;
  }

  public void setActivationDate(@javax.annotation.Nullable OffsetDateTime activationDate) {
    this.activationDate = JsonNullable.<OffsetDateTime>of(activationDate);
  }

  public ScaWalletObjectScaWalletsInner lockDate(@javax.annotation.Nullable OffsetDateTime lockDate) {
    this.lockDate = JsonNullable.<OffsetDateTime>of(lockDate);
    
    return this;
  }

  /**
   * The date and time at which the SCA Wallet was locked. 
   * @return lockDate
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getLockDate() {
        return lockDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCK_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getLockDate_JsonNullable() {
    return lockDate;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCK_DATE)
  public void setLockDate_JsonNullable(JsonNullable<OffsetDateTime> lockDate) {
    this.lockDate = lockDate;
  }

  public void setLockDate(@javax.annotation.Nullable OffsetDateTime lockDate) {
    this.lockDate = JsonNullable.<OffsetDateTime>of(lockDate);
  }

  public ScaWalletObjectScaWalletsInner unlockDate(@javax.annotation.Nullable OffsetDateTime unlockDate) {
    this.unlockDate = JsonNullable.<OffsetDateTime>of(unlockDate);
    
    return this;
  }

  /**
   * The date and time at which the SCA Wallet was unlocked. 
   * @return unlockDate
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getUnlockDate() {
        return unlockDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNLOCK_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getUnlockDate_JsonNullable() {
    return unlockDate;
  }
  
  @JsonProperty(JSON_PROPERTY_UNLOCK_DATE)
  public void setUnlockDate_JsonNullable(JsonNullable<OffsetDateTime> unlockDate) {
    this.unlockDate = unlockDate;
  }

  public void setUnlockDate(@javax.annotation.Nullable OffsetDateTime unlockDate) {
    this.unlockDate = JsonNullable.<OffsetDateTime>of(unlockDate);
  }

  public ScaWalletObjectScaWalletsInner resetPinDate(@javax.annotation.Nullable OffsetDateTime resetPinDate) {
    this.resetPinDate = JsonNullable.<OffsetDateTime>of(resetPinDate);
    
    return this;
  }

  /**
   * The date and time at which the SCA Wallet PIN was reset. 
   * @return resetPinDate
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getResetPinDate() {
        return resetPinDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESET_PIN_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getResetPinDate_JsonNullable() {
    return resetPinDate;
  }
  
  @JsonProperty(JSON_PROPERTY_RESET_PIN_DATE)
  public void setResetPinDate_JsonNullable(JsonNullable<OffsetDateTime> resetPinDate) {
    this.resetPinDate = resetPinDate;
  }

  public void setResetPinDate(@javax.annotation.Nullable OffsetDateTime resetPinDate) {
    this.resetPinDate = JsonNullable.<OffsetDateTime>of(resetPinDate);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScaWalletObjectScaWalletsInner scaWalletObjectScaWalletsInner = (ScaWalletObjectScaWalletsInner) o;
    return Objects.equals(this.id, scaWalletObjectScaWalletsInner.id) &&
        equalsNullable(this.status, scaWalletObjectScaWalletsInner.status) &&
        equalsNullable(this.subStatus, scaWalletObjectScaWalletsInner.subStatus) &&
        equalsNullable(this.passcodeStatus, scaWalletObjectScaWalletsInner.passcodeStatus) &&
        equalsNullable(this.locked, scaWalletObjectScaWalletsInner.locked) &&
        equalsNullable(this.lockReasons, scaWalletObjectScaWalletsInner.lockReasons) &&
        equalsNullable(this.lockMessage, scaWalletObjectScaWalletsInner.lockMessage) &&
        equalsNullable(this.settingsProfile, scaWalletObjectScaWalletsInner.settingsProfile) &&
        Objects.equals(this.mobileWallet, scaWalletObjectScaWalletsInner.mobileWallet) &&
        Objects.equals(this.activationCode, scaWalletObjectScaWalletsInner.activationCode) &&
        equalsNullable(this.creationDate, scaWalletObjectScaWalletsInner.creationDate) &&
        equalsNullable(this.deletionDate, scaWalletObjectScaWalletsInner.deletionDate) &&
        equalsNullable(this.activationCodeExpiryDate, scaWalletObjectScaWalletsInner.activationCodeExpiryDate) &&
        equalsNullable(this.authenticationMethods, scaWalletObjectScaWalletsInner.authenticationMethods) &&
        equalsNullable(this.invalidActivationAttempts, scaWalletObjectScaWalletsInner.invalidActivationAttempts) &&
        equalsNullable(this.userId, scaWalletObjectScaWalletsInner.userId) &&
        equalsNullable(this.scaWalletTag, scaWalletObjectScaWalletsInner.scaWalletTag) &&
        Objects.equals(this.clientId, scaWalletObjectScaWalletsInner.clientId) &&
        equalsNullable(this.activationDate, scaWalletObjectScaWalletsInner.activationDate) &&
        equalsNullable(this.lockDate, scaWalletObjectScaWalletsInner.lockDate) &&
        equalsNullable(this.unlockDate, scaWalletObjectScaWalletsInner.unlockDate) &&
        equalsNullable(this.resetPinDate, scaWalletObjectScaWalletsInner.resetPinDate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, hashCodeNullable(status), hashCodeNullable(subStatus), hashCodeNullable(passcodeStatus), hashCodeNullable(locked), hashCodeNullable(lockReasons), hashCodeNullable(lockMessage), hashCodeNullable(settingsProfile), mobileWallet, activationCode, hashCodeNullable(creationDate), hashCodeNullable(deletionDate), hashCodeNullable(activationCodeExpiryDate), hashCodeNullable(authenticationMethods), hashCodeNullable(invalidActivationAttempts), hashCodeNullable(userId), hashCodeNullable(scaWalletTag), clientId, hashCodeNullable(activationDate), hashCodeNullable(lockDate), hashCodeNullable(unlockDate), hashCodeNullable(resetPinDate));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScaWalletObjectScaWalletsInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subStatus: ").append(toIndentedString(subStatus)).append("\n");
    sb.append("    passcodeStatus: ").append(toIndentedString(passcodeStatus)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    lockReasons: ").append(toIndentedString(lockReasons)).append("\n");
    sb.append("    lockMessage: ").append(toIndentedString(lockMessage)).append("\n");
    sb.append("    settingsProfile: ").append(toIndentedString(settingsProfile)).append("\n");
    sb.append("    mobileWallet: ").append(toIndentedString(mobileWallet)).append("\n");
    sb.append("    activationCode: ").append(toIndentedString(activationCode)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    deletionDate: ").append(toIndentedString(deletionDate)).append("\n");
    sb.append("    activationCodeExpiryDate: ").append(toIndentedString(activationCodeExpiryDate)).append("\n");
    sb.append("    authenticationMethods: ").append(toIndentedString(authenticationMethods)).append("\n");
    sb.append("    invalidActivationAttempts: ").append(toIndentedString(invalidActivationAttempts)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    scaWalletTag: ").append(toIndentedString(scaWalletTag)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    activationDate: ").append(toIndentedString(activationDate)).append("\n");
    sb.append("    lockDate: ").append(toIndentedString(lockDate)).append("\n");
    sb.append("    unlockDate: ").append(toIndentedString(unlockDate)).append("\n");
    sb.append("    resetPinDate: ").append(toIndentedString(resetPinDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

