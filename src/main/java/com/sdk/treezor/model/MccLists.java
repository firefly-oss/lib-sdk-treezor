/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sdk.treezor.model.MccList;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MccLists
 */
@JsonPropertyOrder({
  MccLists.JSON_PROPERTY_MCC_LISTS,
  MccLists.JSON_PROPERTY_NEXT_PAGE_TOKEN
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class MccLists {
  public static final String JSON_PROPERTY_MCC_LISTS = "mccLists";
  @javax.annotation.Nullable
  private List<MccList> mccLists = new ArrayList<>();

  public static final String JSON_PROPERTY_NEXT_PAGE_TOKEN = "nextPageToken";
  @javax.annotation.Nullable
  private JsonNullable<String> nextPageToken = JsonNullable.<String>undefined();

  public MccLists() {
  }

  public MccLists mccLists(@javax.annotation.Nullable List<MccList> mccLists) {
    
    this.mccLists = mccLists;
    return this;
  }

  public MccLists addMccListsItem(MccList mccListsItem) {
    if (this.mccLists == null) {
      this.mccLists = new ArrayList<>();
    }
    this.mccLists.add(mccListsItem);
    return this;
  }

  /**
   * Get mccLists
   * @return mccLists
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MCC_LISTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<MccList> getMccLists() {
    return mccLists;
  }


  @JsonProperty(JSON_PROPERTY_MCC_LISTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMccLists(@javax.annotation.Nullable List<MccList> mccLists) {
    this.mccLists = mccLists;
  }

  public MccLists nextPageToken(@javax.annotation.Nullable String nextPageToken) {
    this.nextPageToken = JsonNullable.<String>of(nextPageToken);
    
    return this;
  }

  /**
   * The pagination cursor to use as a query parameter to get to the next page of results.
   * @return nextPageToken
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getNextPageToken() {
        return nextPageToken.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NEXT_PAGE_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNextPageToken_JsonNullable() {
    return nextPageToken;
  }
  
  @JsonProperty(JSON_PROPERTY_NEXT_PAGE_TOKEN)
  public void setNextPageToken_JsonNullable(JsonNullable<String> nextPageToken) {
    this.nextPageToken = nextPageToken;
  }

  public void setNextPageToken(@javax.annotation.Nullable String nextPageToken) {
    this.nextPageToken = JsonNullable.<String>of(nextPageToken);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MccLists mccLists = (MccLists) o;
    return Objects.equals(this.mccLists, mccLists.mccLists) &&
        equalsNullable(this.nextPageToken, mccLists.nextPageToken);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(mccLists, hashCodeNullable(nextPageToken));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MccLists {\n");
    sb.append("    mccLists: ").append(toIndentedString(mccLists)).append("\n");
    sb.append("    nextPageToken: ").append(toIndentedString(nextPageToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

