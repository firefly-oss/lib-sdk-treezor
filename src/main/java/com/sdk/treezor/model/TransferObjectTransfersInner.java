/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TransferObjectTransfersInner
 */
@JsonPropertyOrder({
  TransferObjectTransfersInner.JSON_PROPERTY_TRANSFER_ID,
  TransferObjectTransfersInner.JSON_PROPERTY_TRANSFER_STATUS,
  TransferObjectTransfersInner.JSON_PROPERTY_TRANSFER_TAG,
  TransferObjectTransfersInner.JSON_PROPERTY_WALLET_ID,
  TransferObjectTransfersInner.JSON_PROPERTY_WALLET_TYPE_ID,
  TransferObjectTransfersInner.JSON_PROPERTY_BENEFICIARY_WALLET_ID,
  TransferObjectTransfersInner.JSON_PROPERTY_BENEFICIARY_WALLET_TYPE_ID,
  TransferObjectTransfersInner.JSON_PROPERTY_WALLET_EVENT_NAME,
  TransferObjectTransfersInner.JSON_PROPERTY_WALLET_ALIAS,
  TransferObjectTransfersInner.JSON_PROPERTY_BENEFICIARY_WALLET_EVENT_NAME,
  TransferObjectTransfersInner.JSON_PROPERTY_BENEFICIARY_WALLET_ALIAS,
  TransferObjectTransfersInner.JSON_PROPERTY_AMOUNT,
  TransferObjectTransfersInner.JSON_PROPERTY_CURRENCY,
  TransferObjectTransfersInner.JSON_PROPERTY_LABEL,
  TransferObjectTransfersInner.JSON_PROPERTY_TRANSFER_TYPE_ID,
  TransferObjectTransfersInner.JSON_PROPERTY_CREATED_DATE,
  TransferObjectTransfersInner.JSON_PROPERTY_MODIFIED_DATE,
  TransferObjectTransfersInner.JSON_PROPERTY_TOTAL_ROWS,
  TransferObjectTransfersInner.JSON_PROPERTY_FOREIGN_ID,
  TransferObjectTransfersInner.JSON_PROPERTY_PARTNER_FEE,
  TransferObjectTransfersInner.JSON_PROPERTY_CODE_STATUS,
  TransferObjectTransfersInner.JSON_PROPERTY_INFORMATION_STATUS,
  TransferObjectTransfersInner.JSON_PROPERTY_METADATA
})
@JsonTypeName("TransferObject_transfers_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class TransferObjectTransfersInner {
  public static final String JSON_PROPERTY_TRANSFER_ID = "transferId";
  @javax.annotation.Nullable
  private Integer transferId;

  /**
   * The status of the Transfer. See [Transfer statuses](/guide/transfers/introduction.html#transfer-statuses-codestatus) for more information. 
   */
  public enum TransferStatusEnum {
    CANCELED(String.valueOf("CANCELED")),
    
    PENDING(String.valueOf("PENDING")),
    
    VALIDATED(String.valueOf("VALIDATED"));

    private String value;

    TransferStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TransferStatusEnum fromValue(String value) {
      for (TransferStatusEnum b : TransferStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TRANSFER_STATUS = "transferStatus";
  @javax.annotation.Nullable
  private TransferStatusEnum transferStatus;

  public static final String JSON_PROPERTY_TRANSFER_TAG = "transferTag";
  @javax.annotation.Nullable
  private String transferTag;

  public static final String JSON_PROPERTY_WALLET_ID = "walletId";
  @javax.annotation.Nullable
  private Integer walletId;

  /**
   * The type of the debited Wallet:  * &#x60;9&#x60; – Electronic Money Wallet  * &#x60;10&#x60; – Payment Account Wallet 
   */
  public enum WalletTypeIdEnum {
    NUMBER_9(Integer.valueOf(9)),
    
    NUMBER_10(Integer.valueOf(10)),
    
    NUMBER_15(Integer.valueOf(15));

    private Integer value;

    WalletTypeIdEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static WalletTypeIdEnum fromValue(Integer value) {
      for (WalletTypeIdEnum b : WalletTypeIdEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_WALLET_TYPE_ID = "walletTypeId";
  @javax.annotation.Nullable
  private WalletTypeIdEnum walletTypeId;

  public static final String JSON_PROPERTY_BENEFICIARY_WALLET_ID = "beneficiaryWalletId";
  @javax.annotation.Nullable
  private Integer beneficiaryWalletId;

  /**
   * The type of Wallet. Learn more in the [Wallet Types](/guide/wallets/introduction.html#types-of-wallets) documentation. 
   */
  public enum BeneficiaryWalletTypeIdEnum {
    NUMBER_9(Integer.valueOf(9)),
    
    NUMBER_10(Integer.valueOf(10)),
    
    NUMBER_15(Integer.valueOf(15));

    private Integer value;

    BeneficiaryWalletTypeIdEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BeneficiaryWalletTypeIdEnum fromValue(Integer value) {
      for (BeneficiaryWalletTypeIdEnum b : BeneficiaryWalletTypeIdEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_BENEFICIARY_WALLET_TYPE_ID = "beneficiaryWalletTypeId";
  @javax.annotation.Nullable
  private BeneficiaryWalletTypeIdEnum beneficiaryWalletTypeId;

  public static final String JSON_PROPERTY_WALLET_EVENT_NAME = "walletEventName";
  @javax.annotation.Nullable
  private String walletEventName;

  public static final String JSON_PROPERTY_WALLET_ALIAS = "walletAlias";
  @javax.annotation.Nullable
  private String walletAlias;

  public static final String JSON_PROPERTY_BENEFICIARY_WALLET_EVENT_NAME = "beneficiaryWalletEventName";
  @javax.annotation.Nullable
  private String beneficiaryWalletEventName;

  public static final String JSON_PROPERTY_BENEFICIARY_WALLET_ALIAS = "beneficiaryWalletAlias";
  @javax.annotation.Nullable
  private String beneficiaryWalletAlias;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nullable
  private String amount;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  @javax.annotation.Nullable
  private String currency;

  public static final String JSON_PROPERTY_LABEL = "label";
  @javax.annotation.Nullable
  private String label;

  /**
   * The type of transfer: * &#x60;1&#x60; – Wallet to wallet  * &#x60;2&#x60; – Card transaction * &#x60;3&#x60; – Client fees * &#x60;4&#x60; – Credit note 
   */
  public enum TransferTypeIdEnum {
    NUMBER_1(Integer.valueOf(1)),
    
    NUMBER_2(Integer.valueOf(2)),
    
    NUMBER_3(Integer.valueOf(3)),
    
    NUMBER_4(Integer.valueOf(4));

    private Integer value;

    TransferTypeIdEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TransferTypeIdEnum fromValue(Integer value) {
      for (TransferTypeIdEnum b : TransferTypeIdEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TRANSFER_TYPE_ID = "transferTypeId";
  @javax.annotation.Nullable
  private TransferTypeIdEnum transferTypeId;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  @javax.annotation.Nullable
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  @javax.annotation.Nullable
  private OffsetDateTime modifiedDate;

  public static final String JSON_PROPERTY_TOTAL_ROWS = "totalRows";
  @javax.annotation.Nullable
  private Integer totalRows;

  public static final String JSON_PROPERTY_FOREIGN_ID = "foreignId";
  @javax.annotation.Nullable
  private String foreignId;

  public static final String JSON_PROPERTY_PARTNER_FEE = "partnerFee";
  @javax.annotation.Nullable
  private String partnerFee;

  /**
   * The code for the status of the transfer. See [Transfer statuses](/guide/transfers/introduction.html#transfer-statuses-codestatus) for more information. 
   */
  public enum CodeStatusEnum {
    _150001(String.valueOf("150001")),
    
    _150002(String.valueOf("150002")),
    
    _150003(String.valueOf("150003")),
    
    _150004(String.valueOf("150004")),
    
    _150005(String.valueOf("150005")),
    
    _150006(String.valueOf("150006"));

    private String value;

    CodeStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CodeStatusEnum fromValue(String value) {
      for (CodeStatusEnum b : CodeStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CODE_STATUS = "codeStatus";
  @javax.annotation.Nullable
  private CodeStatusEnum codeStatus;

  public static final String JSON_PROPERTY_INFORMATION_STATUS = "informationStatus";
  @javax.annotation.Nullable
  private String informationStatus;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  @javax.annotation.Nullable
  private String metadata;

  public TransferObjectTransfersInner() {
  }

  public TransferObjectTransfersInner transferId(@javax.annotation.Nullable Integer transferId) {
    
    this.transferId = transferId;
    return this;
  }

  /**
   * The unique identifier of the Transfer.
   * @return transferId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSFER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTransferId() {
    return transferId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransferId(@javax.annotation.Nullable Integer transferId) {
    this.transferId = transferId;
  }

  public TransferObjectTransfersInner transferStatus(@javax.annotation.Nullable TransferStatusEnum transferStatus) {
    
    this.transferStatus = transferStatus;
    return this;
  }

  /**
   * The status of the Transfer. See [Transfer statuses](/guide/transfers/introduction.html#transfer-statuses-codestatus) for more information. 
   * @return transferStatus
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSFER_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TransferStatusEnum getTransferStatus() {
    return transferStatus;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFER_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransferStatus(@javax.annotation.Nullable TransferStatusEnum transferStatus) {
    this.transferStatus = transferStatus;
  }

  public TransferObjectTransfersInner transferTag(@javax.annotation.Nullable String transferTag) {
    
    this.transferTag = transferTag;
    return this;
  }

  /**
   * Custom attribute to use as you see fit. Learn more in the [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.  Format: hc characters and &#x60;/&#x60; &#x60;!&#x60; &#x60;-&#x60; &#x60;_&#x60; &#x60;.&#x60; &#x60;*&#x60; &#x60;&#39;&#x60; &#x60;(&#x60; &#x60;)&#x60; 
   * @return transferTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSFER_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransferTag() {
    return transferTag;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFER_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransferTag(@javax.annotation.Nullable String transferTag) {
    this.transferTag = transferTag;
  }

  public TransferObjectTransfersInner walletId(@javax.annotation.Nullable Integer walletId) {
    
    this.walletId = walletId;
    return this;
  }

  /**
   * The unique identifier of the debited Wallet.
   * @return walletId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWalletId() {
    return walletId;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWalletId(@javax.annotation.Nullable Integer walletId) {
    this.walletId = walletId;
  }

  public TransferObjectTransfersInner walletTypeId(@javax.annotation.Nullable WalletTypeIdEnum walletTypeId) {
    
    this.walletTypeId = walletTypeId;
    return this;
  }

  /**
   * The type of the debited Wallet:  * &#x60;9&#x60; – Electronic Money Wallet  * &#x60;10&#x60; – Payment Account Wallet 
   * @return walletTypeId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WALLET_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WalletTypeIdEnum getWalletTypeId() {
    return walletTypeId;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWalletTypeId(@javax.annotation.Nullable WalletTypeIdEnum walletTypeId) {
    this.walletTypeId = walletTypeId;
  }

  public TransferObjectTransfersInner beneficiaryWalletId(@javax.annotation.Nullable Integer beneficiaryWalletId) {
    
    this.beneficiaryWalletId = beneficiaryWalletId;
    return this;
  }

  /**
   * The unique identifier of the credited Wallet.
   * @return beneficiaryWalletId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BENEFICIARY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBeneficiaryWalletId() {
    return beneficiaryWalletId;
  }


  @JsonProperty(JSON_PROPERTY_BENEFICIARY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeneficiaryWalletId(@javax.annotation.Nullable Integer beneficiaryWalletId) {
    this.beneficiaryWalletId = beneficiaryWalletId;
  }

  public TransferObjectTransfersInner beneficiaryWalletTypeId(@javax.annotation.Nullable BeneficiaryWalletTypeIdEnum beneficiaryWalletTypeId) {
    
    this.beneficiaryWalletTypeId = beneficiaryWalletTypeId;
    return this;
  }

  /**
   * The type of Wallet. Learn more in the [Wallet Types](/guide/wallets/introduction.html#types-of-wallets) documentation. 
   * @return beneficiaryWalletTypeId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BENEFICIARY_WALLET_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BeneficiaryWalletTypeIdEnum getBeneficiaryWalletTypeId() {
    return beneficiaryWalletTypeId;
  }


  @JsonProperty(JSON_PROPERTY_BENEFICIARY_WALLET_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeneficiaryWalletTypeId(@javax.annotation.Nullable BeneficiaryWalletTypeIdEnum beneficiaryWalletTypeId) {
    this.beneficiaryWalletTypeId = beneficiaryWalletTypeId;
  }

  public TransferObjectTransfersInner walletEventName(@javax.annotation.Nullable String walletEventName) {
    
    this.walletEventName = walletEventName;
    return this;
  }

  /**
   * The name of the debited Wallet.
   * @return walletEventName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WALLET_EVENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWalletEventName() {
    return walletEventName;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_EVENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWalletEventName(@javax.annotation.Nullable String walletEventName) {
    this.walletEventName = walletEventName;
  }

  public TransferObjectTransfersInner walletAlias(@javax.annotation.Nullable String walletAlias) {
    
    this.walletAlias = walletAlias;
    return this;
  }

  /**
   * Get walletAlias
   * @return walletAlias
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WALLET_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWalletAlias() {
    return walletAlias;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWalletAlias(@javax.annotation.Nullable String walletAlias) {
    this.walletAlias = walletAlias;
  }

  public TransferObjectTransfersInner beneficiaryWalletEventName(@javax.annotation.Nullable String beneficiaryWalletEventName) {
    
    this.beneficiaryWalletEventName = beneficiaryWalletEventName;
    return this;
  }

  /**
   * The name of the credited Wallet.
   * @return beneficiaryWalletEventName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BENEFICIARY_WALLET_EVENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBeneficiaryWalletEventName() {
    return beneficiaryWalletEventName;
  }


  @JsonProperty(JSON_PROPERTY_BENEFICIARY_WALLET_EVENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeneficiaryWalletEventName(@javax.annotation.Nullable String beneficiaryWalletEventName) {
    this.beneficiaryWalletEventName = beneficiaryWalletEventName;
  }

  public TransferObjectTransfersInner beneficiaryWalletAlias(@javax.annotation.Nullable String beneficiaryWalletAlias) {
    
    this.beneficiaryWalletAlias = beneficiaryWalletAlias;
    return this;
  }

  /**
   * Get beneficiaryWalletAlias
   * @return beneficiaryWalletAlias
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BENEFICIARY_WALLET_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBeneficiaryWalletAlias() {
    return beneficiaryWalletAlias;
  }


  @JsonProperty(JSON_PROPERTY_BENEFICIARY_WALLET_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeneficiaryWalletAlias(@javax.annotation.Nullable String beneficiaryWalletAlias) {
    this.beneficiaryWalletAlias = beneficiaryWalletAlias;
  }

  public TransferObjectTransfersInner amount(@javax.annotation.Nullable String amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * The amount of the transfer.
   * @return amount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(@javax.annotation.Nullable String amount) {
    this.amount = amount;
  }

  public TransferObjectTransfersInner currency(@javax.annotation.Nullable String currency) {
    
    this.currency = currency;
    return this;
  }

  /**
   * The currency of the transfer.
   * @return currency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
  }

  public TransferObjectTransfersInner label(@javax.annotation.Nullable String label) {
    
    this.label = label;
    return this;
  }

  /**
   * The label of the transfer, to display on the receiver&#39;s statement for instance. 
   * @return label
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(@javax.annotation.Nullable String label) {
    this.label = label;
  }

  public TransferObjectTransfersInner transferTypeId(@javax.annotation.Nullable TransferTypeIdEnum transferTypeId) {
    
    this.transferTypeId = transferTypeId;
    return this;
  }

  /**
   * The type of transfer: * &#x60;1&#x60; – Wallet to wallet  * &#x60;2&#x60; – Card transaction * &#x60;3&#x60; – Client fees * &#x60;4&#x60; – Credit note 
   * @return transferTypeId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSFER_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TransferTypeIdEnum getTransferTypeId() {
    return transferTypeId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFER_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransferTypeId(@javax.annotation.Nullable TransferTypeIdEnum transferTypeId) {
    this.transferTypeId = transferTypeId;
  }

  public TransferObjectTransfersInner createdDate(@javax.annotation.Nullable OffsetDateTime createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

  /**
   * The date and time at which the transfer is created.   Format: &#x60;YYYY-MM-DD HH:mm:ss&#x60; 
   * @return createdDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedDate(@javax.annotation.Nullable OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public TransferObjectTransfersInner modifiedDate(@javax.annotation.Nullable OffsetDateTime modifiedDate) {
    
    this.modifiedDate = modifiedDate;
    return this;
  }

  /**
   * The date and time at which the transfer is updated.   Format: &#x60;YYYY-MM-DD HH:mm:ss&#x60; 
   * @return modifiedDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModifiedDate(@javax.annotation.Nullable OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public TransferObjectTransfersInner totalRows(@javax.annotation.Nullable Integer totalRows) {
    
    this.totalRows = totalRows;
    return this;
  }

  /**
   * The total numbers of objects matching your search, for pagination purposes. Only valued in the first object of the returned page, &#x60;null&#x60; otherwise. 
   * @return totalRows
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalRows() {
    return totalRows;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalRows(@javax.annotation.Nullable Integer totalRows) {
    this.totalRows = totalRows;
  }

  public TransferObjectTransfersInner foreignId(@javax.annotation.Nullable String foreignId) {
    
    this.foreignId = foreignId;
    return this;
  }

  /**
   * Get foreignId
   * @return foreignId
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOREIGN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getForeignId() {
    return foreignId;
  }


  @JsonProperty(JSON_PROPERTY_FOREIGN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setForeignId(@javax.annotation.Nullable String foreignId) {
    this.foreignId = foreignId;
  }

  public TransferObjectTransfersInner partnerFee(@javax.annotation.Nullable String partnerFee) {
    
    this.partnerFee = partnerFee;
    return this;
  }

  /**
   * Get partnerFee
   * @return partnerFee
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTNER_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPartnerFee() {
    return partnerFee;
  }


  @JsonProperty(JSON_PROPERTY_PARTNER_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPartnerFee(@javax.annotation.Nullable String partnerFee) {
    this.partnerFee = partnerFee;
  }

  public TransferObjectTransfersInner codeStatus(@javax.annotation.Nullable CodeStatusEnum codeStatus) {
    
    this.codeStatus = codeStatus;
    return this;
  }

  /**
   * The code for the status of the transfer. See [Transfer statuses](/guide/transfers/introduction.html#transfer-statuses-codestatus) for more information. 
   * @return codeStatus
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CodeStatusEnum getCodeStatus() {
    return codeStatus;
  }


  @JsonProperty(JSON_PROPERTY_CODE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodeStatus(@javax.annotation.Nullable CodeStatusEnum codeStatus) {
    this.codeStatus = codeStatus;
  }

  public TransferObjectTransfersInner informationStatus(@javax.annotation.Nullable String informationStatus) {
    
    this.informationStatus = informationStatus;
    return this;
  }

  /**
   * Additional information regarding the status of the transfer (if any).
   * @return informationStatus
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INFORMATION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInformationStatus() {
    return informationStatus;
  }


  @JsonProperty(JSON_PROPERTY_INFORMATION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInformationStatus(@javax.annotation.Nullable String informationStatus) {
    this.informationStatus = informationStatus;
  }

  public TransferObjectTransfersInner metadata(@javax.annotation.Nullable String metadata) {
    
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(@javax.annotation.Nullable String metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransferObjectTransfersInner transferObjectTransfersInner = (TransferObjectTransfersInner) o;
    return Objects.equals(this.transferId, transferObjectTransfersInner.transferId) &&
        Objects.equals(this.transferStatus, transferObjectTransfersInner.transferStatus) &&
        Objects.equals(this.transferTag, transferObjectTransfersInner.transferTag) &&
        Objects.equals(this.walletId, transferObjectTransfersInner.walletId) &&
        Objects.equals(this.walletTypeId, transferObjectTransfersInner.walletTypeId) &&
        Objects.equals(this.beneficiaryWalletId, transferObjectTransfersInner.beneficiaryWalletId) &&
        Objects.equals(this.beneficiaryWalletTypeId, transferObjectTransfersInner.beneficiaryWalletTypeId) &&
        Objects.equals(this.walletEventName, transferObjectTransfersInner.walletEventName) &&
        Objects.equals(this.walletAlias, transferObjectTransfersInner.walletAlias) &&
        Objects.equals(this.beneficiaryWalletEventName, transferObjectTransfersInner.beneficiaryWalletEventName) &&
        Objects.equals(this.beneficiaryWalletAlias, transferObjectTransfersInner.beneficiaryWalletAlias) &&
        Objects.equals(this.amount, transferObjectTransfersInner.amount) &&
        Objects.equals(this.currency, transferObjectTransfersInner.currency) &&
        Objects.equals(this.label, transferObjectTransfersInner.label) &&
        Objects.equals(this.transferTypeId, transferObjectTransfersInner.transferTypeId) &&
        Objects.equals(this.createdDate, transferObjectTransfersInner.createdDate) &&
        Objects.equals(this.modifiedDate, transferObjectTransfersInner.modifiedDate) &&
        Objects.equals(this.totalRows, transferObjectTransfersInner.totalRows) &&
        Objects.equals(this.foreignId, transferObjectTransfersInner.foreignId) &&
        Objects.equals(this.partnerFee, transferObjectTransfersInner.partnerFee) &&
        Objects.equals(this.codeStatus, transferObjectTransfersInner.codeStatus) &&
        Objects.equals(this.informationStatus, transferObjectTransfersInner.informationStatus) &&
        Objects.equals(this.metadata, transferObjectTransfersInner.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transferId, transferStatus, transferTag, walletId, walletTypeId, beneficiaryWalletId, beneficiaryWalletTypeId, walletEventName, walletAlias, beneficiaryWalletEventName, beneficiaryWalletAlias, amount, currency, label, transferTypeId, createdDate, modifiedDate, totalRows, foreignId, partnerFee, codeStatus, informationStatus, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransferObjectTransfersInner {\n");
    sb.append("    transferId: ").append(toIndentedString(transferId)).append("\n");
    sb.append("    transferStatus: ").append(toIndentedString(transferStatus)).append("\n");
    sb.append("    transferTag: ").append(toIndentedString(transferTag)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    walletTypeId: ").append(toIndentedString(walletTypeId)).append("\n");
    sb.append("    beneficiaryWalletId: ").append(toIndentedString(beneficiaryWalletId)).append("\n");
    sb.append("    beneficiaryWalletTypeId: ").append(toIndentedString(beneficiaryWalletTypeId)).append("\n");
    sb.append("    walletEventName: ").append(toIndentedString(walletEventName)).append("\n");
    sb.append("    walletAlias: ").append(toIndentedString(walletAlias)).append("\n");
    sb.append("    beneficiaryWalletEventName: ").append(toIndentedString(beneficiaryWalletEventName)).append("\n");
    sb.append("    beneficiaryWalletAlias: ").append(toIndentedString(beneficiaryWalletAlias)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    transferTypeId: ").append(toIndentedString(transferTypeId)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    totalRows: ").append(toIndentedString(totalRows)).append("\n");
    sb.append("    foreignId: ").append(toIndentedString(foreignId)).append("\n");
    sb.append("    partnerFee: ").append(toIndentedString(partnerFee)).append("\n");
    sb.append("    codeStatus: ").append(toIndentedString(codeStatus)).append("\n");
    sb.append("    informationStatus: ").append(toIndentedString(informationStatus)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

