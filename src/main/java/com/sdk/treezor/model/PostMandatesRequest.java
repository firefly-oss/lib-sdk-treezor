/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostMandatesRequest
 */
@JsonPropertyOrder({
  PostMandatesRequest.JSON_PROPERTY_SDD_TYPE,
  PostMandatesRequest.JSON_PROPERTY_ACCESS_TAG,
  PostMandatesRequest.JSON_PROPERTY_IS_PAPER,
  PostMandatesRequest.JSON_PROPERTY_USER_ID,
  PostMandatesRequest.JSON_PROPERTY_DEBTOR_NAME,
  PostMandatesRequest.JSON_PROPERTY_DEBTOR_ADDRESS,
  PostMandatesRequest.JSON_PROPERTY_DEBTOR_CITY,
  PostMandatesRequest.JSON_PROPERTY_DEBTOR_ZIPCODE,
  PostMandatesRequest.JSON_PROPERTY_DEBTOR_COUNTRY,
  PostMandatesRequest.JSON_PROPERTY_DEBTOR_IBAN,
  PostMandatesRequest.JSON_PROPERTY_DEBTOR_BIC,
  PostMandatesRequest.JSON_PROPERTY_SEQUENCE_TYPE,
  PostMandatesRequest.JSON_PROPERTY_CREATED_IP,
  PostMandatesRequest.JSON_PROPERTY_SIGNATURE_DATE
})
@JsonTypeName("postMandates_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class PostMandatesRequest {
  /**
   * The type of Mandate, which can be: * &#x60;core&#x60; – To debit individuals (physical persons). * &#x60;b2b&#x60; – To debit legal entities. 
   */
  public enum SddTypeEnum {
    CORE(String.valueOf("core")),
    
    B2B(String.valueOf("b2b"));

    private String value;

    SddTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SddTypeEnum fromValue(String value) {
      for (SddTypeEnum b : SddTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SDD_TYPE = "sddType";
  @javax.annotation.Nonnull
  private SddTypeEnum sddType;

  public static final String JSON_PROPERTY_ACCESS_TAG = "accessTag";
  @javax.annotation.Nullable
  private String accessTag;

  public static final String JSON_PROPERTY_IS_PAPER = "isPaper";
  @javax.annotation.Nonnull
  private Boolean isPaper;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  @javax.annotation.Nonnull
  private Integer userId;

  public static final String JSON_PROPERTY_DEBTOR_NAME = "debtorName";
  @javax.annotation.Nonnull
  private String debtorName;

  public static final String JSON_PROPERTY_DEBTOR_ADDRESS = "debtorAddress";
  @javax.annotation.Nonnull
  private String debtorAddress;

  public static final String JSON_PROPERTY_DEBTOR_CITY = "debtorCity";
  @javax.annotation.Nonnull
  private String debtorCity;

  public static final String JSON_PROPERTY_DEBTOR_ZIPCODE = "debtorZipcode";
  @javax.annotation.Nonnull
  private String debtorZipcode;

  public static final String JSON_PROPERTY_DEBTOR_COUNTRY = "debtorCountry";
  @javax.annotation.Nonnull
  private String debtorCountry;

  public static final String JSON_PROPERTY_DEBTOR_IBAN = "debtorIban";
  @javax.annotation.Nonnull
  private String debtorIban;

  public static final String JSON_PROPERTY_DEBTOR_BIC = "debtorBic";
  @javax.annotation.Nullable
  private String debtorBic;

  /**
   * Defines whether or not the debtor will be debited multiple times. Can be one of the following: * &#x60;one-off&#x60; – For a one-time payment. * &#x60;recurrent&#x60; – For recurring payments. 
   */
  public enum SequenceTypeEnum {
    ONE_OFF(String.valueOf("one-off")),
    
    RECURRENT(String.valueOf("recurrent"));

    private String value;

    SequenceTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SequenceTypeEnum fromValue(String value) {
      for (SequenceTypeEnum b : SequenceTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SEQUENCE_TYPE = "sequenceType";
  @javax.annotation.Nonnull
  private SequenceTypeEnum sequenceType;

  public static final String JSON_PROPERTY_CREATED_IP = "createdIp";
  @javax.annotation.Nullable
  private String createdIp;

  public static final String JSON_PROPERTY_SIGNATURE_DATE = "signatureDate";
  @javax.annotation.Nonnull
  private LocalDate signatureDate;

  public PostMandatesRequest() {
  }

  public PostMandatesRequest sddType(@javax.annotation.Nonnull SddTypeEnum sddType) {
    
    this.sddType = sddType;
    return this;
  }

  /**
   * The type of Mandate, which can be: * &#x60;core&#x60; – To debit individuals (physical persons). * &#x60;b2b&#x60; – To debit legal entities. 
   * @return sddType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SDD_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SddTypeEnum getSddType() {
    return sddType;
  }


  @JsonProperty(JSON_PROPERTY_SDD_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSddType(@javax.annotation.Nonnull SddTypeEnum sddType) {
    this.sddType = sddType;
  }

  public PostMandatesRequest accessTag(@javax.annotation.Nullable String accessTag) {
    
    this.accessTag = accessTag;
    return this;
  }

  /**
   * A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). 
   * @return accessTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccessTag() {
    return accessTag;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessTag(@javax.annotation.Nullable String accessTag) {
    this.accessTag = accessTag;
  }

  public PostMandatesRequest isPaper(@javax.annotation.Nonnull Boolean isPaper) {
    
    this.isPaper = isPaper;
    return this;
  }

  /**
   * Whether the Mandate is a paper-based document, or electronically signed. As of today, should only be set to &#x60;true&#x60;. 
   * @return isPaper
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_PAPER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsPaper() {
    return isPaper;
  }


  @JsonProperty(JSON_PROPERTY_IS_PAPER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsPaper(@javax.annotation.Nonnull Boolean isPaper) {
    this.isPaper = isPaper;
  }

  public PostMandatesRequest userId(@javax.annotation.Nonnull Integer userId) {
    
    this.userId = userId;
    return this;
  }

  /**
   * The unique identifier of the end user requesting the SEPA Direct Debit (i.e., the creditor initiating the Mandate request).
   * @return userId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserId(@javax.annotation.Nonnull Integer userId) {
    this.userId = userId;
  }

  public PostMandatesRequest debtorName(@javax.annotation.Nonnull String debtorName) {
    
    this.debtorName = debtorName;
    return this;
  }

  /**
   * The full name of the debited entity or individual. Format: alphanumeric with at least 3 alphabetic characters. 
   * @return debtorName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEBTOR_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDebtorName() {
    return debtorName;
  }


  @JsonProperty(JSON_PROPERTY_DEBTOR_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDebtorName(@javax.annotation.Nonnull String debtorName) {
    this.debtorName = debtorName;
  }

  public PostMandatesRequest debtorAddress(@javax.annotation.Nonnull String debtorAddress) {
    
    this.debtorAddress = debtorAddress;
    return this;
  }

  /**
   * The address of the debited end user.
   * @return debtorAddress
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEBTOR_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDebtorAddress() {
    return debtorAddress;
  }


  @JsonProperty(JSON_PROPERTY_DEBTOR_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDebtorAddress(@javax.annotation.Nonnull String debtorAddress) {
    this.debtorAddress = debtorAddress;
  }

  public PostMandatesRequest debtorCity(@javax.annotation.Nonnull String debtorCity) {
    
    this.debtorCity = debtorCity;
    return this;
  }

  /**
   * The city in which the debited end user is domiciled.
   * @return debtorCity
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEBTOR_CITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDebtorCity() {
    return debtorCity;
  }


  @JsonProperty(JSON_PROPERTY_DEBTOR_CITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDebtorCity(@javax.annotation.Nonnull String debtorCity) {
    this.debtorCity = debtorCity;
  }

  public PostMandatesRequest debtorZipcode(@javax.annotation.Nonnull String debtorZipcode) {
    
    this.debtorZipcode = debtorZipcode;
    return this;
  }

  /**
   * The postcode of the city in which the debited end user is domiciled.
   * @return debtorZipcode
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEBTOR_ZIPCODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDebtorZipcode() {
    return debtorZipcode;
  }


  @JsonProperty(JSON_PROPERTY_DEBTOR_ZIPCODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDebtorZipcode(@javax.annotation.Nonnull String debtorZipcode) {
    this.debtorZipcode = debtorZipcode;
  }

  public PostMandatesRequest debtorCountry(@javax.annotation.Nonnull String debtorCountry) {
    
    this.debtorCountry = debtorCountry;
    return this;
  }

  /**
   * Country in which the debited end user is domiciled.
   * @return debtorCountry
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEBTOR_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDebtorCountry() {
    return debtorCountry;
  }


  @JsonProperty(JSON_PROPERTY_DEBTOR_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDebtorCountry(@javax.annotation.Nonnull String debtorCountry) {
    this.debtorCountry = debtorCountry;
  }

  public PostMandatesRequest debtorIban(@javax.annotation.Nonnull String debtorIban) {
    
    this.debtorIban = debtorIban;
    return this;
  }

  /**
   * IBAN of the debited user.
   * @return debtorIban
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEBTOR_IBAN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDebtorIban() {
    return debtorIban;
  }


  @JsonProperty(JSON_PROPERTY_DEBTOR_IBAN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDebtorIban(@javax.annotation.Nonnull String debtorIban) {
    this.debtorIban = debtorIban;
  }

  public PostMandatesRequest debtorBic(@javax.annotation.Nullable String debtorBic) {
    
    this.debtorBic = debtorBic;
    return this;
  }

  /**
   * The BIC (or SWIFT) of the debited user
   * @return debtorBic
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEBTOR_BIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDebtorBic() {
    return debtorBic;
  }


  @JsonProperty(JSON_PROPERTY_DEBTOR_BIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDebtorBic(@javax.annotation.Nullable String debtorBic) {
    this.debtorBic = debtorBic;
  }

  public PostMandatesRequest sequenceType(@javax.annotation.Nonnull SequenceTypeEnum sequenceType) {
    
    this.sequenceType = sequenceType;
    return this;
  }

  /**
   * Defines whether or not the debtor will be debited multiple times. Can be one of the following: * &#x60;one-off&#x60; – For a one-time payment. * &#x60;recurrent&#x60; – For recurring payments. 
   * @return sequenceType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SEQUENCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SequenceTypeEnum getSequenceType() {
    return sequenceType;
  }


  @JsonProperty(JSON_PROPERTY_SEQUENCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSequenceType(@javax.annotation.Nonnull SequenceTypeEnum sequenceType) {
    this.sequenceType = sequenceType;
  }

  public PostMandatesRequest createdIp(@javax.annotation.Nullable String createdIp) {
    
    this.createdIp = createdIp;
    return this;
  }

  /**
   * IP address of the end user requesting the SDD.
   * @return createdIp
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatedIp() {
    return createdIp;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedIp(@javax.annotation.Nullable String createdIp) {
    this.createdIp = createdIp;
  }

  public PostMandatesRequest signatureDate(@javax.annotation.Nonnull LocalDate signatureDate) {
    
    this.signatureDate = signatureDate;
    return this;
  }

  /**
   * Date on which the Mandate was signed by the end user.  Format: &#x60;YYYY-MM-DD&#x60; 
   * @return signatureDate
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SIGNATURE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getSignatureDate() {
    return signatureDate;
  }


  @JsonProperty(JSON_PROPERTY_SIGNATURE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSignatureDate(@javax.annotation.Nonnull LocalDate signatureDate) {
    this.signatureDate = signatureDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostMandatesRequest postMandatesRequest = (PostMandatesRequest) o;
    return Objects.equals(this.sddType, postMandatesRequest.sddType) &&
        Objects.equals(this.accessTag, postMandatesRequest.accessTag) &&
        Objects.equals(this.isPaper, postMandatesRequest.isPaper) &&
        Objects.equals(this.userId, postMandatesRequest.userId) &&
        Objects.equals(this.debtorName, postMandatesRequest.debtorName) &&
        Objects.equals(this.debtorAddress, postMandatesRequest.debtorAddress) &&
        Objects.equals(this.debtorCity, postMandatesRequest.debtorCity) &&
        Objects.equals(this.debtorZipcode, postMandatesRequest.debtorZipcode) &&
        Objects.equals(this.debtorCountry, postMandatesRequest.debtorCountry) &&
        Objects.equals(this.debtorIban, postMandatesRequest.debtorIban) &&
        Objects.equals(this.debtorBic, postMandatesRequest.debtorBic) &&
        Objects.equals(this.sequenceType, postMandatesRequest.sequenceType) &&
        Objects.equals(this.createdIp, postMandatesRequest.createdIp) &&
        Objects.equals(this.signatureDate, postMandatesRequest.signatureDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sddType, accessTag, isPaper, userId, debtorName, debtorAddress, debtorCity, debtorZipcode, debtorCountry, debtorIban, debtorBic, sequenceType, createdIp, signatureDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostMandatesRequest {\n");
    sb.append("    sddType: ").append(toIndentedString(sddType)).append("\n");
    sb.append("    accessTag: ").append(toIndentedString(accessTag)).append("\n");
    sb.append("    isPaper: ").append(toIndentedString(isPaper)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    debtorName: ").append(toIndentedString(debtorName)).append("\n");
    sb.append("    debtorAddress: ").append(toIndentedString(debtorAddress)).append("\n");
    sb.append("    debtorCity: ").append(toIndentedString(debtorCity)).append("\n");
    sb.append("    debtorZipcode: ").append(toIndentedString(debtorZipcode)).append("\n");
    sb.append("    debtorCountry: ").append(toIndentedString(debtorCountry)).append("\n");
    sb.append("    debtorIban: ").append(toIndentedString(debtorIban)).append("\n");
    sb.append("    debtorBic: ").append(toIndentedString(debtorBic)).append("\n");
    sb.append("    sequenceType: ").append(toIndentedString(sequenceType)).append("\n");
    sb.append("    createdIp: ").append(toIndentedString(createdIp)).append("\n");
    sb.append("    signatureDate: ").append(toIndentedString(signatureDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

