/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StatementTransfer
 */
@JsonPropertyOrder({
  StatementTransfer.JSON_PROPERTY_TRANSFER_ID,
  StatementTransfer.JSON_PROPERTY_TRANSFER_TAG,
  StatementTransfer.JSON_PROPERTY_LABEL,
  StatementTransfer.JSON_PROPERTY_CREDITOR_FIRST_NAME,
  StatementTransfer.JSON_PROPERTY_CREDITOR_LAST_NAME,
  StatementTransfer.JSON_PROPERTY_CREDITOR_LEGAL_NAME,
  StatementTransfer.JSON_PROPERTY_DEBTOR_WALLET_ID,
  StatementTransfer.JSON_PROPERTY_DEBTOR_FIRST_NAME,
  StatementTransfer.JSON_PROPERTY_DEBTOR_LAST_NAME,
  StatementTransfer.JSON_PROPERTY_DEBTOR_LEGAL_NAME
})
@JsonTypeName("statementTransfer")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class StatementTransfer {
  public static final String JSON_PROPERTY_TRANSFER_ID = "transferId";
  @javax.annotation.Nullable
  private String transferId;

  public static final String JSON_PROPERTY_TRANSFER_TAG = "transferTag";
  @javax.annotation.Nullable
  private JsonNullable<String> transferTag = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LABEL = "label";
  @javax.annotation.Nullable
  private JsonNullable<String> label = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREDITOR_FIRST_NAME = "creditorFirstName";
  @javax.annotation.Nullable
  private String creditorFirstName;

  public static final String JSON_PROPERTY_CREDITOR_LAST_NAME = "creditorLastName";
  @javax.annotation.Nullable
  private String creditorLastName;

  public static final String JSON_PROPERTY_CREDITOR_LEGAL_NAME = "creditorLegalName";
  @javax.annotation.Nullable
  private String creditorLegalName;

  public static final String JSON_PROPERTY_DEBTOR_WALLET_ID = "debtorWalletId";
  @javax.annotation.Nullable
  private String debtorWalletId;

  public static final String JSON_PROPERTY_DEBTOR_FIRST_NAME = "debtorFirstName";
  @javax.annotation.Nullable
  private String debtorFirstName;

  public static final String JSON_PROPERTY_DEBTOR_LAST_NAME = "debtorLastName";
  @javax.annotation.Nullable
  private String debtorLastName;

  public static final String JSON_PROPERTY_DEBTOR_LEGAL_NAME = "debtorLegalName";
  @javax.annotation.Nullable
  private String debtorLegalName;

  public StatementTransfer() {
  }

  public StatementTransfer transferId(@javax.annotation.Nullable String transferId) {
    
    this.transferId = transferId;
    return this;
  }

  /**
   * Get transferId
   * @return transferId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSFER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransferId() {
    return transferId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransferId(@javax.annotation.Nullable String transferId) {
    this.transferId = transferId;
  }

  public StatementTransfer transferTag(@javax.annotation.Nullable String transferTag) {
    this.transferTag = JsonNullable.<String>of(transferTag);
    
    return this;
  }

  /**
   * Get transferTag
   * @return transferTag
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getTransferTag() {
        return transferTag.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRANSFER_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTransferTag_JsonNullable() {
    return transferTag;
  }
  
  @JsonProperty(JSON_PROPERTY_TRANSFER_TAG)
  public void setTransferTag_JsonNullable(JsonNullable<String> transferTag) {
    this.transferTag = transferTag;
  }

  public void setTransferTag(@javax.annotation.Nullable String transferTag) {
    this.transferTag = JsonNullable.<String>of(transferTag);
  }

  public StatementTransfer label(@javax.annotation.Nullable String label) {
    this.label = JsonNullable.<String>of(label);
    
    return this;
  }

  /**
   * Get label
   * @return label
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getLabel() {
        return label.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLabel_JsonNullable() {
    return label;
  }
  
  @JsonProperty(JSON_PROPERTY_LABEL)
  public void setLabel_JsonNullable(JsonNullable<String> label) {
    this.label = label;
  }

  public void setLabel(@javax.annotation.Nullable String label) {
    this.label = JsonNullable.<String>of(label);
  }

  public StatementTransfer creditorFirstName(@javax.annotation.Nullable String creditorFirstName) {
    
    this.creditorFirstName = creditorFirstName;
    return this;
  }

  /**
   * Get creditorFirstName
   * @return creditorFirstName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREDITOR_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreditorFirstName() {
    return creditorFirstName;
  }


  @JsonProperty(JSON_PROPERTY_CREDITOR_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreditorFirstName(@javax.annotation.Nullable String creditorFirstName) {
    this.creditorFirstName = creditorFirstName;
  }

  public StatementTransfer creditorLastName(@javax.annotation.Nullable String creditorLastName) {
    
    this.creditorLastName = creditorLastName;
    return this;
  }

  /**
   * Get creditorLastName
   * @return creditorLastName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREDITOR_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreditorLastName() {
    return creditorLastName;
  }


  @JsonProperty(JSON_PROPERTY_CREDITOR_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreditorLastName(@javax.annotation.Nullable String creditorLastName) {
    this.creditorLastName = creditorLastName;
  }

  public StatementTransfer creditorLegalName(@javax.annotation.Nullable String creditorLegalName) {
    
    this.creditorLegalName = creditorLegalName;
    return this;
  }

  /**
   * Get creditorLegalName
   * @return creditorLegalName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREDITOR_LEGAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreditorLegalName() {
    return creditorLegalName;
  }


  @JsonProperty(JSON_PROPERTY_CREDITOR_LEGAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreditorLegalName(@javax.annotation.Nullable String creditorLegalName) {
    this.creditorLegalName = creditorLegalName;
  }

  public StatementTransfer debtorWalletId(@javax.annotation.Nullable String debtorWalletId) {
    
    this.debtorWalletId = debtorWalletId;
    return this;
  }

  /**
   * Get debtorWalletId
   * @return debtorWalletId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEBTOR_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDebtorWalletId() {
    return debtorWalletId;
  }


  @JsonProperty(JSON_PROPERTY_DEBTOR_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDebtorWalletId(@javax.annotation.Nullable String debtorWalletId) {
    this.debtorWalletId = debtorWalletId;
  }

  public StatementTransfer debtorFirstName(@javax.annotation.Nullable String debtorFirstName) {
    
    this.debtorFirstName = debtorFirstName;
    return this;
  }

  /**
   * Get debtorFirstName
   * @return debtorFirstName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEBTOR_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDebtorFirstName() {
    return debtorFirstName;
  }


  @JsonProperty(JSON_PROPERTY_DEBTOR_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDebtorFirstName(@javax.annotation.Nullable String debtorFirstName) {
    this.debtorFirstName = debtorFirstName;
  }

  public StatementTransfer debtorLastName(@javax.annotation.Nullable String debtorLastName) {
    
    this.debtorLastName = debtorLastName;
    return this;
  }

  /**
   * Get debtorLastName
   * @return debtorLastName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEBTOR_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDebtorLastName() {
    return debtorLastName;
  }


  @JsonProperty(JSON_PROPERTY_DEBTOR_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDebtorLastName(@javax.annotation.Nullable String debtorLastName) {
    this.debtorLastName = debtorLastName;
  }

  public StatementTransfer debtorLegalName(@javax.annotation.Nullable String debtorLegalName) {
    
    this.debtorLegalName = debtorLegalName;
    return this;
  }

  /**
   * Get debtorLegalName
   * @return debtorLegalName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEBTOR_LEGAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDebtorLegalName() {
    return debtorLegalName;
  }


  @JsonProperty(JSON_PROPERTY_DEBTOR_LEGAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDebtorLegalName(@javax.annotation.Nullable String debtorLegalName) {
    this.debtorLegalName = debtorLegalName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatementTransfer statementTransfer = (StatementTransfer) o;
    return Objects.equals(this.transferId, statementTransfer.transferId) &&
        equalsNullable(this.transferTag, statementTransfer.transferTag) &&
        equalsNullable(this.label, statementTransfer.label) &&
        Objects.equals(this.creditorFirstName, statementTransfer.creditorFirstName) &&
        Objects.equals(this.creditorLastName, statementTransfer.creditorLastName) &&
        Objects.equals(this.creditorLegalName, statementTransfer.creditorLegalName) &&
        Objects.equals(this.debtorWalletId, statementTransfer.debtorWalletId) &&
        Objects.equals(this.debtorFirstName, statementTransfer.debtorFirstName) &&
        Objects.equals(this.debtorLastName, statementTransfer.debtorLastName) &&
        Objects.equals(this.debtorLegalName, statementTransfer.debtorLegalName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(transferId, hashCodeNullable(transferTag), hashCodeNullable(label), creditorFirstName, creditorLastName, creditorLegalName, debtorWalletId, debtorFirstName, debtorLastName, debtorLegalName);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatementTransfer {\n");
    sb.append("    transferId: ").append(toIndentedString(transferId)).append("\n");
    sb.append("    transferTag: ").append(toIndentedString(transferTag)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    creditorFirstName: ").append(toIndentedString(creditorFirstName)).append("\n");
    sb.append("    creditorLastName: ").append(toIndentedString(creditorLastName)).append("\n");
    sb.append("    creditorLegalName: ").append(toIndentedString(creditorLegalName)).append("\n");
    sb.append("    debtorWalletId: ").append(toIndentedString(debtorWalletId)).append("\n");
    sb.append("    debtorFirstName: ").append(toIndentedString(debtorFirstName)).append("\n");
    sb.append("    debtorLastName: ").append(toIndentedString(debtorLastName)).append("\n");
    sb.append("    debtorLegalName: ").append(toIndentedString(debtorLegalName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

