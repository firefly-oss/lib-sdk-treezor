/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostTransfersRequest
 */
@JsonPropertyOrder({
  PostTransfersRequest.JSON_PROPERTY_TRANSFER_TAG,
  PostTransfersRequest.JSON_PROPERTY_ACCESS_TAG,
  PostTransfersRequest.JSON_PROPERTY_WALLET_ID,
  PostTransfersRequest.JSON_PROPERTY_BENEFICIARY_WALLET_ID,
  PostTransfersRequest.JSON_PROPERTY_AMOUNT,
  PostTransfersRequest.JSON_PROPERTY_CURRENCY,
  PostTransfersRequest.JSON_PROPERTY_LABEL,
  PostTransfersRequest.JSON_PROPERTY_TRANSFER_TYPE_ID
})
@JsonTypeName("postTransfers_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class PostTransfersRequest {
  public static final String JSON_PROPERTY_TRANSFER_TAG = "transferTag";
  @javax.annotation.Nullable
  private String transferTag;

  public static final String JSON_PROPERTY_ACCESS_TAG = "accessTag";
  @javax.annotation.Nullable
  private String accessTag;

  public static final String JSON_PROPERTY_WALLET_ID = "walletId";
  @javax.annotation.Nonnull
  private Integer walletId;

  public static final String JSON_PROPERTY_BENEFICIARY_WALLET_ID = "beneficiaryWalletId";
  @javax.annotation.Nonnull
  private Integer beneficiaryWalletId;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nonnull
  private Float amount;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  @javax.annotation.Nonnull
  private String currency;

  public static final String JSON_PROPERTY_LABEL = "label";
  @javax.annotation.Nullable
  private String label;

  /**
   * The type of the Transfer: * &#x60;1&#x60; – Wallet to wallet  * &#x60;3&#x60; – Client fees * &#x60;4&#x60; – Credit note 
   */
  public enum TransferTypeIdEnum {
    NUMBER_1(Integer.valueOf(1)),
    
    NUMBER_3(Integer.valueOf(3)),
    
    NUMBER_4(Integer.valueOf(4));

    private Integer value;

    TransferTypeIdEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TransferTypeIdEnum fromValue(Integer value) {
      for (TransferTypeIdEnum b : TransferTypeIdEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TRANSFER_TYPE_ID = "transferTypeId";
  @javax.annotation.Nullable
  private TransferTypeIdEnum transferTypeId;

  public PostTransfersRequest() {
  }

  public PostTransfersRequest transferTag(@javax.annotation.Nullable String transferTag) {
    
    this.transferTag = transferTag;
    return this;
  }

  /**
   * Custom attribute to use as you see fit. Learn more in the [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.  Format: hc characters and &#x60;/&#x60; &#x60;!&#x60; &#x60;-&#x60; &#x60;_&#x60; &#x60;.&#x60; &#x60;*&#x60; &#x60;&#39;&#x60; &#x60;(&#x60; &#x60;)&#x60; 
   * @return transferTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSFER_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransferTag() {
    return transferTag;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFER_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransferTag(@javax.annotation.Nullable String transferTag) {
    this.transferTag = transferTag;
  }

  public PostTransfersRequest accessTag(@javax.annotation.Nullable String accessTag) {
    
    this.accessTag = accessTag;
    return this;
  }

  /**
   * A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). 
   * @return accessTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccessTag() {
    return accessTag;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessTag(@javax.annotation.Nullable String accessTag) {
    this.accessTag = accessTag;
  }

  public PostTransfersRequest walletId(@javax.annotation.Nonnull Integer walletId) {
    
    this.walletId = walletId;
    return this;
  }

  /**
   * The debited Wallet unique identifier.
   * @return walletId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getWalletId() {
    return walletId;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWalletId(@javax.annotation.Nonnull Integer walletId) {
    this.walletId = walletId;
  }

  public PostTransfersRequest beneficiaryWalletId(@javax.annotation.Nonnull Integer beneficiaryWalletId) {
    
    this.beneficiaryWalletId = beneficiaryWalletId;
    return this;
  }

  /**
   * The credited Wallet unique identifier.
   * @return beneficiaryWalletId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BENEFICIARY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getBeneficiaryWalletId() {
    return beneficiaryWalletId;
  }


  @JsonProperty(JSON_PROPERTY_BENEFICIARY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBeneficiaryWalletId(@javax.annotation.Nonnull Integer beneficiaryWalletId) {
    this.beneficiaryWalletId = beneficiaryWalletId;
  }

  public PostTransfersRequest amount(@javax.annotation.Nonnull Float amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * The amount of the Transfer.
   * @return amount
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Float getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(@javax.annotation.Nonnull Float amount) {
    this.amount = amount;
  }

  public PostTransfersRequest currency(@javax.annotation.Nonnull String currency) {
    
    this.currency = currency;
    return this;
  }

  /**
   * The currency of the Transfer in [ISO 4217](/guide/api-basics/data-format.html#currencies) format. Debited wallet and credited wallet must share same currency. 
   * @return currency
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(@javax.annotation.Nonnull String currency) {
    this.currency = currency;
  }

  public PostTransfersRequest label(@javax.annotation.Nullable String label) {
    
    this.label = label;
    return this;
  }

  /**
   * The label of the transfer, to display on the receiver&#39;s statement for instance. 
   * @return label
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(@javax.annotation.Nullable String label) {
    this.label = label;
  }

  public PostTransfersRequest transferTypeId(@javax.annotation.Nullable TransferTypeIdEnum transferTypeId) {
    
    this.transferTypeId = transferTypeId;
    return this;
  }

  /**
   * The type of the Transfer: * &#x60;1&#x60; – Wallet to wallet  * &#x60;3&#x60; – Client fees * &#x60;4&#x60; – Credit note 
   * @return transferTypeId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSFER_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TransferTypeIdEnum getTransferTypeId() {
    return transferTypeId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSFER_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransferTypeId(@javax.annotation.Nullable TransferTypeIdEnum transferTypeId) {
    this.transferTypeId = transferTypeId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostTransfersRequest postTransfersRequest = (PostTransfersRequest) o;
    return Objects.equals(this.transferTag, postTransfersRequest.transferTag) &&
        Objects.equals(this.accessTag, postTransfersRequest.accessTag) &&
        Objects.equals(this.walletId, postTransfersRequest.walletId) &&
        Objects.equals(this.beneficiaryWalletId, postTransfersRequest.beneficiaryWalletId) &&
        Objects.equals(this.amount, postTransfersRequest.amount) &&
        Objects.equals(this.currency, postTransfersRequest.currency) &&
        Objects.equals(this.label, postTransfersRequest.label) &&
        Objects.equals(this.transferTypeId, postTransfersRequest.transferTypeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transferTag, accessTag, walletId, beneficiaryWalletId, amount, currency, label, transferTypeId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostTransfersRequest {\n");
    sb.append("    transferTag: ").append(toIndentedString(transferTag)).append("\n");
    sb.append("    accessTag: ").append(toIndentedString(accessTag)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    beneficiaryWalletId: ").append(toIndentedString(beneficiaryWalletId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    transferTypeId: ").append(toIndentedString(transferTypeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

