/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PutUserRequest
 */
@JsonPropertyOrder({
  PutUserRequest.JSON_PROPERTY_USER_TAG,
  PutUserRequest.JSON_PROPERTY_ACCESS_TAG,
  PutUserRequest.JSON_PROPERTY_SPECIFIED_U_S_PERSON,
  PutUserRequest.JSON_PROPERTY_CONTROLLING_PERSON_TYPE,
  PutUserRequest.JSON_PROPERTY_EMPLOYEE_TYPE,
  PutUserRequest.JSON_PROPERTY_TITLE,
  PutUserRequest.JSON_PROPERTY_FIRSTNAME,
  PutUserRequest.JSON_PROPERTY_LASTNAME,
  PutUserRequest.JSON_PROPERTY_MIDDLE_NAMES,
  PutUserRequest.JSON_PROPERTY_BIRTHDAY,
  PutUserRequest.JSON_PROPERTY_EMAIL,
  PutUserRequest.JSON_PROPERTY_ADDRESS1,
  PutUserRequest.JSON_PROPERTY_ADDRESS2,
  PutUserRequest.JSON_PROPERTY_ADDRESS3,
  PutUserRequest.JSON_PROPERTY_POSTCODE,
  PutUserRequest.JSON_PROPERTY_CITY,
  PutUserRequest.JSON_PROPERTY_STATE,
  PutUserRequest.JSON_PROPERTY_COUNTRY,
  PutUserRequest.JSON_PROPERTY_DISTRIBUTION_COUNTRY,
  PutUserRequest.JSON_PROPERTY_SECONDARY_ADDRESS1,
  PutUserRequest.JSON_PROPERTY_SECONDARY_ADDRESS2,
  PutUserRequest.JSON_PROPERTY_SECONDARY_ADDRESS3,
  PutUserRequest.JSON_PROPERTY_SECONDARY_POSTCODE,
  PutUserRequest.JSON_PROPERTY_SECONDARY_CITY,
  PutUserRequest.JSON_PROPERTY_SECONDARY_STATE,
  PutUserRequest.JSON_PROPERTY_SECONDARY_COUNTRY,
  PutUserRequest.JSON_PROPERTY_PHONE,
  PutUserRequest.JSON_PROPERTY_MOBILE,
  PutUserRequest.JSON_PROPERTY_NATIONALITY,
  PutUserRequest.JSON_PROPERTY_NATIONALITY_OTHER,
  PutUserRequest.JSON_PROPERTY_PLACE_OF_BIRTH,
  PutUserRequest.JSON_PROPERTY_BIRTH_COUNTRY,
  PutUserRequest.JSON_PROPERTY_OCCUPATION,
  PutUserRequest.JSON_PROPERTY_INCOME_RANGE,
  PutUserRequest.JSON_PROPERTY_LEGAL_NAME,
  PutUserRequest.JSON_PROPERTY_LEGAL_REGISTRATION_NUMBER,
  PutUserRequest.JSON_PROPERTY_LEGAL_TVA_NUMBER,
  PutUserRequest.JSON_PROPERTY_LEGAL_REGISTRATION_DATE,
  PutUserRequest.JSON_PROPERTY_LEGAL_FORM,
  PutUserRequest.JSON_PROPERTY_LEGAL_SHARE_CAPITAL,
  PutUserRequest.JSON_PROPERTY_LEGAL_SECTOR,
  PutUserRequest.JSON_PROPERTY_LEGAL_ANNUAL_TURN_OVER,
  PutUserRequest.JSON_PROPERTY_LEGAL_NET_INCOME_RANGE,
  PutUserRequest.JSON_PROPERTY_LEGAL_NUMBER_OF_EMPLOYEE_RANGE,
  PutUserRequest.JSON_PROPERTY_EFFECTIVE_BENEFICIARY,
  PutUserRequest.JSON_PROPERTY_LANGUAGE,
  PutUserRequest.JSON_PROPERTY_TAX_NUMBER,
  PutUserRequest.JSON_PROPERTY_TAX_RESIDENCE,
  PutUserRequest.JSON_PROPERTY_POSITION,
  PutUserRequest.JSON_PROPERTY_PERSONAL_ASSETS,
  PutUserRequest.JSON_PROPERTY_ACTIVITY_OUTSIDE_EU,
  PutUserRequest.JSON_PROPERTY_ECONOMIC_SANCTIONS,
  PutUserRequest.JSON_PROPERTY_RESIDENT_COUNTRIES_SANCTIONS,
  PutUserRequest.JSON_PROPERTY_INVOLVED_SANCTIONS,
  PutUserRequest.JSON_PROPERTY_ENTITY_SANCTIONS_QUESTIONNAIRE,
  PutUserRequest.JSON_PROPERTY_TIMEZONE,
  PutUserRequest.JSON_PROPERTY_OCCUPATION_TYPE,
  PutUserRequest.JSON_PROPERTY_SOURCE_OF_FUNDS,
  PutUserRequest.JSON_PROPERTY_LEGAL_SECTOR_TYPE,
  PutUserRequest.JSON_PROPERTY_IS_ON_STOCK_EXCHANGE,
  PutUserRequest.JSON_PROPERTY_OCCUPATION_CATEGORY,
  PutUserRequest.JSON_PROPERTY_PERSONAL_ASSETS_RANGE,
  PutUserRequest.JSON_PROPERTY_MONTHLY_INCOME_RANGE
})
@JsonTypeName("putUser_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class PutUserRequest {
  public static final String JSON_PROPERTY_USER_TAG = "userTag";
  @javax.annotation.Nullable
  private String userTag;

  public static final String JSON_PROPERTY_ACCESS_TAG = "accessTag";
  @javax.annotation.Nullable
  private String accessTag;

  public static final String JSON_PROPERTY_SPECIFIED_U_S_PERSON = "specifiedUSPerson";
  @javax.annotation.Nullable
  private Integer specifiedUSPerson;

  /**
   * Type of relationship, among the following: * &#x60;0&#x60; – None (default) * &#x60;1&#x60; – Shareholder * &#x60;2&#x60; – Other_relationship * &#x60;3&#x60; – Director 
   */
  public enum ControllingPersonTypeEnum {
    NUMBER_0(Integer.valueOf(0)),

    NUMBER_1(Integer.valueOf(1)),

    NUMBER_2(Integer.valueOf(2)),

    NUMBER_3(Integer.valueOf(3));

    private Integer value;

    ControllingPersonTypeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ControllingPersonTypeEnum fromValue(Integer value) {
      for (ControllingPersonTypeEnum b : ControllingPersonTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CONTROLLING_PERSON_TYPE = "controllingPersonType";
  @javax.annotation.Nullable
  private ControllingPersonTypeEnum controllingPersonType = ControllingPersonTypeEnum.NUMBER_0;

  /**
   * The type of relationship among the following: * &#x60;0&#x60; – None (default) * &#x60;1&#x60; – Leader * &#x60;2&#x60; – Employee 
   */
  public enum EmployeeTypeEnum {
    NUMBER_0(Integer.valueOf(0)),

    NUMBER_1(Integer.valueOf(1)),

    NUMBER_2(Integer.valueOf(2));

    private Integer value;

    EmployeeTypeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EmployeeTypeEnum fromValue(Integer value) {
      for (EmployeeTypeEnum b : EmployeeTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EMPLOYEE_TYPE = "employeeType";
  @javax.annotation.Nullable
  private EmployeeTypeEnum employeeType = EmployeeTypeEnum.NUMBER_0;

  public static final String JSON_PROPERTY_TITLE = "title";
  @javax.annotation.Nullable
  private String title;

  public static final String JSON_PROPERTY_FIRSTNAME = "firstname";
  @javax.annotation.Nullable
  private String firstname;

  public static final String JSON_PROPERTY_LASTNAME = "lastname";
  @javax.annotation.Nullable
  private String lastname;

  public static final String JSON_PROPERTY_MIDDLE_NAMES = "middleNames";
  @javax.annotation.Nullable
  private String middleNames;

  public static final String JSON_PROPERTY_BIRTHDAY = "birthday";
  @javax.annotation.Nullable
  private String birthday;

  public static final String JSON_PROPERTY_EMAIL = "email";
  @javax.annotation.Nullable
  private String email;

  public static final String JSON_PROPERTY_ADDRESS1 = "address1";
  @javax.annotation.Nullable
  private String address1;

  public static final String JSON_PROPERTY_ADDRESS2 = "address2";
  @javax.annotation.Nullable
  private String address2;

  public static final String JSON_PROPERTY_ADDRESS3 = "address3";
  @javax.annotation.Nullable
  private String address3;

  public static final String JSON_PROPERTY_POSTCODE = "postcode";
  @javax.annotation.Nullable
  private String postcode;

  public static final String JSON_PROPERTY_CITY = "city";
  @javax.annotation.Nullable
  private String city;

  public static final String JSON_PROPERTY_STATE = "state";
  @javax.annotation.Nullable
  private String state;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  @javax.annotation.Nullable
  private String country;

  /**
   * The country in which the end user is using your services. Available values may vary depending on your configuration, see [Distribution Country](/guide/users/introduction.html#distribution-country-distributioncountry) for more information.  This field is only required when you operate in multiple countries. Otherwise, it either defaults to your country or is set to &#x60;null&#x60;. 
   */
  public enum DistributionCountryEnum {
    FR(String.valueOf("FR")),

    ES(String.valueOf("ES")),

    IT(String.valueOf("IT")),

    DE(String.valueOf("DE")),

    BE(String.valueOf("BE")),

    NL(String.valueOf("NL"));

    private String value;

    DistributionCountryEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DistributionCountryEnum fromValue(String value) {
      for (DistributionCountryEnum b : DistributionCountryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_DISTRIBUTION_COUNTRY = "distributionCountry";
  @javax.annotation.Nullable
  private DistributionCountryEnum distributionCountry;

  public static final String JSON_PROPERTY_SECONDARY_ADDRESS1 = "secondaryAddress1";
  @javax.annotation.Nullable
  private String secondaryAddress1;

  public static final String JSON_PROPERTY_SECONDARY_ADDRESS2 = "secondaryAddress2";
  @javax.annotation.Nullable
  private String secondaryAddress2;

  public static final String JSON_PROPERTY_SECONDARY_ADDRESS3 = "secondaryAddress3";
  @javax.annotation.Nullable
  private String secondaryAddress3;

  public static final String JSON_PROPERTY_SECONDARY_POSTCODE = "secondaryPostcode";
  @javax.annotation.Nullable
  private String secondaryPostcode;

  public static final String JSON_PROPERTY_SECONDARY_CITY = "secondaryCity";
  @javax.annotation.Nullable
  private String secondaryCity;

  public static final String JSON_PROPERTY_SECONDARY_STATE = "secondaryState";
  @javax.annotation.Nullable
  private String secondaryState;

  public static final String JSON_PROPERTY_SECONDARY_COUNTRY = "secondaryCountry";
  @javax.annotation.Nullable
  private String secondaryCountry;

  public static final String JSON_PROPERTY_PHONE = "phone";
  @javax.annotation.Nullable
  private String phone;

  public static final String JSON_PROPERTY_MOBILE = "mobile";
  @javax.annotation.Nullable
  private String mobile;

  public static final String JSON_PROPERTY_NATIONALITY = "nationality";
  @javax.annotation.Nullable
  private String nationality;

  public static final String JSON_PROPERTY_NATIONALITY_OTHER = "nationalityOther";
  @javax.annotation.Nullable
  private String nationalityOther;

  public static final String JSON_PROPERTY_PLACE_OF_BIRTH = "placeOfBirth";
  @javax.annotation.Nullable
  private String placeOfBirth;

  public static final String JSON_PROPERTY_BIRTH_COUNTRY = "birthCountry";
  @javax.annotation.Nullable
  private String birthCountry;

  public static final String JSON_PROPERTY_OCCUPATION = "occupation";
  @javax.annotation.Nullable
  private String occupation;

  /**
   * The User income range.
   */
  public enum IncomeRangeEnum {
    _0_18(String.valueOf("0-18")),

    _19_23(String.valueOf("19-23")),

    _24_27(String.valueOf("24-27")),

    _28_35(String.valueOf("28-35")),

    _36_56(String.valueOf("36-56")),

    _57_(String.valueOf("57-*"));

    private String value;

    IncomeRangeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IncomeRangeEnum fromValue(String value) {
      for (IncomeRangeEnum b : IncomeRangeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INCOME_RANGE = "incomeRange";
  @javax.annotation.Nullable
  private IncomeRangeEnum incomeRange;

  public static final String JSON_PROPERTY_LEGAL_NAME = "legalName";
  @javax.annotation.Nullable
  private String legalName;

  public static final String JSON_PROPERTY_LEGAL_REGISTRATION_NUMBER = "legalRegistrationNumber";
  @javax.annotation.Nullable
  private String legalRegistrationNumber;

  public static final String JSON_PROPERTY_LEGAL_TVA_NUMBER = "legalTvaNumber";
  @javax.annotation.Nullable
  private String legalTvaNumber;

  public static final String JSON_PROPERTY_LEGAL_REGISTRATION_DATE = "legalRegistrationDate";
  @javax.annotation.Nullable
  private LocalDate legalRegistrationDate;

  public static final String JSON_PROPERTY_LEGAL_FORM = "legalForm";
  @javax.annotation.Nullable
  private String legalForm;

  public static final String JSON_PROPERTY_LEGAL_SHARE_CAPITAL = "legalShareCapital";
  @javax.annotation.Nullable
  private Integer legalShareCapital;

  public static final String JSON_PROPERTY_LEGAL_SECTOR = "legalSector";
  @javax.annotation.Nullable
  private String legalSector;

  /**
   * The Business annual turnover (in k€).
   */
  public enum LegalAnnualTurnOverEnum {
    _0_39(String.valueOf("0-39")),

    _40_99(String.valueOf("40-99")),

    _100_249(String.valueOf("100-249")),

    _250_999(String.valueOf("250-999")),

    _1000_2999(String.valueOf("1000-2999")),

    _3000_9999(String.valueOf("3000-9999")),

    _10000_99999(String.valueOf("10000-99999")),

    _100000_(String.valueOf("100000-*"));

    private String value;

    LegalAnnualTurnOverEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LegalAnnualTurnOverEnum fromValue(String value) {
      for (LegalAnnualTurnOverEnum b : LegalAnnualTurnOverEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LEGAL_ANNUAL_TURN_OVER = "legalAnnualTurnOver";
  @javax.annotation.Nullable
  private LegalAnnualTurnOverEnum legalAnnualTurnOver;

  /**
   * The Business net income range (in k€).
   */
  public enum LegalNetIncomeRangeEnum {
    _0_4(String.valueOf("0-4")),

    _5_9(String.valueOf("5-9")),

    _10_49(String.valueOf("10-49")),

    _50_149(String.valueOf("50-149")),

    _150_499(String.valueOf("150-499")),

    _500_(String.valueOf("500-*"));

    private String value;

    LegalNetIncomeRangeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LegalNetIncomeRangeEnum fromValue(String value) {
      for (LegalNetIncomeRangeEnum b : LegalNetIncomeRangeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LEGAL_NET_INCOME_RANGE = "legalNetIncomeRange";
  @javax.annotation.Nullable
  private LegalNetIncomeRangeEnum legalNetIncomeRange;

  /**
   * The Business number of employees.
   */
  public enum LegalNumberOfEmployeeRangeEnum {
    _0(String.valueOf("0")),

    _1_9(String.valueOf("1-9")),

    _10_99(String.valueOf("10-99")),

    _100_249(String.valueOf("100-249")),

    _250_(String.valueOf("250-*"));

    private String value;

    LegalNumberOfEmployeeRangeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LegalNumberOfEmployeeRangeEnum fromValue(String value) {
      for (LegalNumberOfEmployeeRangeEnum b : LegalNumberOfEmployeeRangeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LEGAL_NUMBER_OF_EMPLOYEE_RANGE = "legalNumberOfEmployeeRange";
  @javax.annotation.Nullable
  private LegalNumberOfEmployeeRangeEnum legalNumberOfEmployeeRange;

  public static final String JSON_PROPERTY_EFFECTIVE_BENEFICIARY = "effectiveBeneficiary";
  @javax.annotation.Nullable
  private Integer effectiveBeneficiary;

  public static final String JSON_PROPERTY_LANGUAGE = "language";
  @javax.annotation.Nullable
  private String language;

  public static final String JSON_PROPERTY_TAX_NUMBER = "taxNumber";
  @javax.annotation.Nullable
  private String taxNumber;

  public static final String JSON_PROPERTY_TAX_RESIDENCE = "taxResidence";
  @javax.annotation.Nullable
  private String taxResidence;

  public static final String JSON_PROPERTY_POSITION = "position";
  @javax.annotation.Nullable
  private String position;

  /**
   * Deprecated. You must use &#x60;personalAssetsRange&#x60; instead.
   */
  public enum PersonalAssetsEnum {
    _0_2(String.valueOf("0-2")),

    _3_22(String.valueOf("3-22")),

    _23_128(String.valueOf("23-128")),

    _129_319(String.valueOf("129-319")),

    _320_464(String.valueOf("320-464")),

    _465_(String.valueOf("465-"));

    private String value;

    PersonalAssetsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PersonalAssetsEnum fromValue(String value) {
      for (PersonalAssetsEnum b : PersonalAssetsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PERSONAL_ASSETS = "personalAssets";
  @javax.annotation.Nullable
  private PersonalAssetsEnum personalAssets;

  /**
   * For Users obligated to complete a due diligence questionnaire regarding sanctions and embargoes.   Whether the entity and its business units, subsidiaries, and joint ventures have a commercial activity outside of the European Union.  Can be: * &#x60;0&#x60; – False * &#x60;1&#x60; – True. When set to this value, the next attributes become mandatory.   See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo) article for more information. 
   */
  public enum ActivityOutsideEuEnum {
    NUMBER_0(Integer.valueOf(0)),

    NUMBER_1(Integer.valueOf(1));

    private Integer value;

    ActivityOutsideEuEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActivityOutsideEuEnum fromValue(Integer value) {
      for (ActivityOutsideEuEnum b : ActivityOutsideEuEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACTIVITY_OUTSIDE_EU = "activityOutsideEu";
  @javax.annotation.Nullable
  private ActivityOutsideEuEnum activityOutsideEu;

  /**
   * For Users obligated to complete a due diligence questionnaire regarding sanctions and embargoes, and for which the &#x60;activityOutsideEu&#x60; value is set to &#x60;1&#x60;.  Whether the entity, its subsidiaries, entities, employees, directors, beneficial owners, or joint ventures are subject to Economic Sanctions.  Can be: * &#x60;0&#x60; – False * &#x60;1&#x60; – True   See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo) article for more information. 
   */
  public enum EconomicSanctionsEnum {
    NUMBER_0(Integer.valueOf(0)),

    NUMBER_1(Integer.valueOf(1));

    private Integer value;

    EconomicSanctionsEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EconomicSanctionsEnum fromValue(Integer value) {
      for (EconomicSanctionsEnum b : EconomicSanctionsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ECONOMIC_SANCTIONS = "economicSanctions";
  @javax.annotation.Nullable
  private EconomicSanctionsEnum economicSanctions;

  /**
   * For Users obligated to complete a due diligence questionnaire regarding sanctions and embargoes, and for which the &#x60;activityOutsideEu&#x60; value is set to &#x60;1&#x60;.  Whether the entity, its subsidiaries, or joint ventures, located within or operating from any countries or territories are subject to Comprehensive Sanctions.   Can be: * &#x60;0&#x60; – False * &#x60;1&#x60; – True   See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo) article for more information. 
   */
  public enum ResidentCountriesSanctionsEnum {
    NUMBER_0(Integer.valueOf(0)),

    NUMBER_1(Integer.valueOf(1));

    private Integer value;

    ResidentCountriesSanctionsEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ResidentCountriesSanctionsEnum fromValue(Integer value) {
      for (ResidentCountriesSanctionsEnum b : ResidentCountriesSanctionsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RESIDENT_COUNTRIES_SANCTIONS = "residentCountriesSanctions";
  @javax.annotation.Nullable
  private ResidentCountriesSanctionsEnum residentCountriesSanctions;

  /**
   * For Users obligated to complete a due diligence questionnaire regarding sanctions and embargoes, and for which the &#x60;activityOutsideEu&#x60; value is set to &#x60;1&#x60;.  Whether the entity, its subsidiaries, or joint ventures, are engaged in transactions, investments, business, or other dealings that directly or indirectly involve or benefit: * Any countries or territories subject to Comprehensive Sanctions (Cuba, Iran, North Korea, Syria, Crimea, Ukrainian Oblasts not controlled by the government, or Russia), or  * Any person or entity which is the target of any Sanctions (“Sanctioned Targets”).  Can be: * &#x60;0&#x60; – False * &#x60;1&#x60; – True   See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo) article for more information. 
   */
  public enum InvolvedSanctionsEnum {
    NUMBER_0(Integer.valueOf(0)),

    NUMBER_1(Integer.valueOf(1));

    private Integer value;

    InvolvedSanctionsEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InvolvedSanctionsEnum fromValue(Integer value) {
      for (InvolvedSanctionsEnum b : InvolvedSanctionsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INVOLVED_SANCTIONS = "involvedSanctions";
  @javax.annotation.Nullable
  private InvolvedSanctionsEnum involvedSanctions;

  /**
   * For Users obligated to complete a due diligence questionnaire regarding sanctions and embargoes, and for which the &#x60;activityOutsideEu&#x60; value is set to &#x60;1&#x60;.  Defines the scope to which the &#x60;activityOutsideEu&#x60; field applies: * &#x60;0&#x60; – Not applicable * &#x60;1&#x60; – Only the legal entity * &#x60;2&#x60; – The legal entity and all its subsidiaries held at 100% * &#x60;3&#x60; – The legal entity and all its subsidiaries held at 50% or more * &#x60;4&#x60; – The legal entity and a list of subsidiaries  See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo) article for more information. 
   */
  public enum EntitySanctionsQuestionnaireEnum {
    NUMBER_0(Integer.valueOf(0)),

    NUMBER_1(Integer.valueOf(1)),

    NUMBER_2(Integer.valueOf(2)),

    NUMBER_3(Integer.valueOf(3)),

    NUMBER_4(Integer.valueOf(4));

    private Integer value;

    EntitySanctionsQuestionnaireEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EntitySanctionsQuestionnaireEnum fromValue(Integer value) {
      for (EntitySanctionsQuestionnaireEnum b : EntitySanctionsQuestionnaireEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ENTITY_SANCTIONS_QUESTIONNAIRE = "entitySanctionsQuestionnaire";
  @javax.annotation.Nullable
  private EntitySanctionsQuestionnaireEnum entitySanctionsQuestionnaire;

  public static final String JSON_PROPERTY_TIMEZONE = "timezone";
  @javax.annotation.Nullable
  private String timezone;

  /**
   * Deprecated. Use &#x60;occupationCategory&#x60; instead.
   */
  public enum OccupationTypeEnum {
    SELF_EMPLOYED(String.valueOf("self_employed")),

    PUBLIC_SECTOR_EMPLOYEES(String.valueOf("public_sector_employees")),

    PRIVATE_SECTOR_EMPLOYEES(String.valueOf("private_sector_employees")),

    RETIRED_PEOPLE_AND_STUDENTS(String.valueOf("retired_people_and_students")),

    WITHOUT_ANY_PROFESSIONAL_ACTIVITY(String.valueOf("without_any_professional_activity"));

    private String value;

    OccupationTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OccupationTypeEnum fromValue(String value) {
      for (OccupationTypeEnum b : OccupationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OCCUPATION_TYPE = "occupationType";
  @javax.annotation.Nullable
  private OccupationTypeEnum occupationType;

  /**
   * The source of funds for opening an account for a company or self-employed person.
   */
  public enum SourceOfFundsEnum {
    DONATION(String.valueOf("donation")),

    INHERITANCE(String.valueOf("inheritance")),

    LOAN(String.valueOf("loan")),

    LOTTERY(String.valueOf("lottery")),

    PENSION(String.valueOf("pension")),

    PROCEEDS_FROM_INVESTMENT(String.valueOf("proceeds_from_investment")),

    PROCEEDS_FROM_SALE(String.valueOf("proceeds_from_sale")),

    SALARY(String.valueOf("salary")),

    SAVINGS(String.valueOf("savings"));

    private String value;

    SourceOfFundsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SourceOfFundsEnum fromValue(String value) {
      for (SourceOfFundsEnum b : SourceOfFundsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SOURCE_OF_FUNDS = "sourceOfFunds";
  @javax.annotation.Nullable
  private SourceOfFundsEnum sourceOfFunds;

  /**
   * Qualify the type of data in the &#x60;legalSector&#x60; field: * If it is set to NACE the legalSector needs to be in a NACE format (4 digits).  * If it is set to NAF (or not set at all) the legalSector needs to be in a NAF format (4 digits followed by a capital letter). 
   */
  public enum LegalSectorTypeEnum {
    NAF(String.valueOf("NAF")),

    NACE(String.valueOf("NACE"));

    private String value;

    LegalSectorTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LegalSectorTypeEnum fromValue(String value) {
      for (LegalSectorTypeEnum b : LegalSectorTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LEGAL_SECTOR_TYPE = "legalSectorType";
  @javax.annotation.Nullable
  private LegalSectorTypeEnum legalSectorType;

  /**
   * The user is a corporation and is quoted on an organized stock exchange. * &#x60;0&#x60; – No * &#x60;1&#x60; – Yes 
   */
  public enum IsOnStockExchangeEnum {
    NUMBER_0(Integer.valueOf(0)),

    NUMBER_1(Integer.valueOf(1));

    private Integer value;

    IsOnStockExchangeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IsOnStockExchangeEnum fromValue(Integer value) {
      for (IsOnStockExchangeEnum b : IsOnStockExchangeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_IS_ON_STOCK_EXCHANGE = "isOnStockExchange";
  @javax.annotation.Nullable
  private IsOnStockExchangeEnum isOnStockExchange;

  /**
   * Type of occupation of the user. See [Occupation Category](/guide/users/physical.html#occupation-category-occupationcategory) for the list of values. 
   */
  public enum OccupationCategoryEnum {
    NUMBER_1(Integer.valueOf(1)),

    NUMBER_2(Integer.valueOf(2)),

    NUMBER_3(Integer.valueOf(3)),

    NUMBER_4(Integer.valueOf(4)),

    NUMBER_5(Integer.valueOf(5)),

    NUMBER_6(Integer.valueOf(6)),

    NUMBER_7(Integer.valueOf(7)),

    NUMBER_8(Integer.valueOf(8)),

    NUMBER_9(Integer.valueOf(9)),

    NUMBER_10(Integer.valueOf(10)),

    NUMBER_11(Integer.valueOf(11)),

    NUMBER_12(Integer.valueOf(12)),

    NUMBER_13(Integer.valueOf(13)),

    NUMBER_14(Integer.valueOf(14)),

    NUMBER_15(Integer.valueOf(15));

    private Integer value;

    OccupationCategoryEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OccupationCategoryEnum fromValue(Integer value) {
      for (OccupationCategoryEnum b : OccupationCategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_OCCUPATION_CATEGORY = "occupationCategory";
  @javax.annotation.Nullable
  private OccupationCategoryEnum occupationCategory;

  /**
   * The personal assets range of the user. See [Personal Assets Range](/guide/users/physical.html#personal-assets-range-personalassetsrange) for the list of values. 
   */
  public enum PersonalAssetsRangeEnum {
    NUMBER_0(Integer.valueOf(0)),

    NUMBER_1(Integer.valueOf(1)),

    NUMBER_2(Integer.valueOf(2)),

    NUMBER_3(Integer.valueOf(3)),

    NUMBER_4(Integer.valueOf(4)),

    NUMBER_5(Integer.valueOf(5)),

    NUMBER_6(Integer.valueOf(6)),

    NUMBER_7(Integer.valueOf(7));

    private Integer value;

    PersonalAssetsRangeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PersonalAssetsRangeEnum fromValue(Integer value) {
      for (PersonalAssetsRangeEnum b : PersonalAssetsRangeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_PERSONAL_ASSETS_RANGE = "personalAssetsRange";
  @javax.annotation.Nullable
  private PersonalAssetsRangeEnum personalAssetsRange;

  /**
   * Net monthly income of the user. See [Monthly Income Range](/guide/users/physical.html#monthly-income-range-monthlyincomerange) for the list of values. 
   */
  public enum MonthlyIncomeRangeEnum {
    NUMBER_1(Integer.valueOf(1)),

    NUMBER_2(Integer.valueOf(2)),

    NUMBER_3(Integer.valueOf(3)),

    NUMBER_4(Integer.valueOf(4)),

    NUMBER_5(Integer.valueOf(5)),

    NUMBER_6(Integer.valueOf(6)),

    NUMBER_7(Integer.valueOf(7));

    private Integer value;

    MonthlyIncomeRangeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MonthlyIncomeRangeEnum fromValue(Integer value) {
      for (MonthlyIncomeRangeEnum b : MonthlyIncomeRangeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_MONTHLY_INCOME_RANGE = "monthlyIncomeRange";
  @javax.annotation.Nullable
  private MonthlyIncomeRangeEnum monthlyIncomeRange;

  public PutUserRequest() {
  }

  public PutUserRequest userTag(@javax.annotation.Nullable String userTag) {

    this.userTag = userTag;
    return this;
  }

  /**
   * Custom attribute to use as you see fit. Learn more in the [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.  Format: hc characters and &#x60;/&#x60; &#x60;!&#x60; &#x60;-&#x60; &#x60;_&#x60; &#x60;.&#x60; &#x60;*&#x60; &#x60;&#39;&#x60; &#x60;(&#x60; &#x60;)&#x60; 
   * @return userTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserTag() {
    return userTag;
  }


  @JsonProperty(JSON_PROPERTY_USER_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserTag(@javax.annotation.Nullable String userTag) {
    this.userTag = userTag;
  }

  public PutUserRequest accessTag(@javax.annotation.Nullable String accessTag) {

    this.accessTag = accessTag;
    return this;
  }

  /**
   * A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). 
   * @return accessTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccessTag() {
    return accessTag;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessTag(@javax.annotation.Nullable String accessTag) {
    this.accessTag = accessTag;
  }

  public PutUserRequest specifiedUSPerson(@javax.annotation.Nullable Integer specifiedUSPerson) {

    this.specifiedUSPerson = specifiedUSPerson;
    return this;
  }

  /**
   * You may read more about who is considered a US Person in the [dedicated article](/guide/user-verification/tax-residence.html#the-specific-case-of-us-taxpayers). 
   * @return specifiedUSPerson
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPECIFIED_U_S_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSpecifiedUSPerson() {
    return specifiedUSPerson;
  }


  @JsonProperty(JSON_PROPERTY_SPECIFIED_U_S_PERSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpecifiedUSPerson(@javax.annotation.Nullable Integer specifiedUSPerson) {
    this.specifiedUSPerson = specifiedUSPerson;
  }

  public PutUserRequest controllingPersonType(@javax.annotation.Nullable ControllingPersonTypeEnum controllingPersonType) {

    this.controllingPersonType = controllingPersonType;
    return this;
  }

  /**
   * Type of relationship, among the following: * &#x60;0&#x60; – None (default) * &#x60;1&#x60; – Shareholder * &#x60;2&#x60; – Other_relationship * &#x60;3&#x60; – Director 
   * @return controllingPersonType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTROLLING_PERSON_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ControllingPersonTypeEnum getControllingPersonType() {
    return controllingPersonType;
  }


  @JsonProperty(JSON_PROPERTY_CONTROLLING_PERSON_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setControllingPersonType(@javax.annotation.Nullable ControllingPersonTypeEnum controllingPersonType) {
    this.controllingPersonType = controllingPersonType;
  }

  public PutUserRequest employeeType(@javax.annotation.Nullable EmployeeTypeEnum employeeType) {

    this.employeeType = employeeType;
    return this;
  }

  /**
   * The type of relationship among the following: * &#x60;0&#x60; – None (default) * &#x60;1&#x60; – Leader * &#x60;2&#x60; – Employee 
   * @return employeeType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMPLOYEE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmployeeTypeEnum getEmployeeType() {
    return employeeType;
  }


  @JsonProperty(JSON_PROPERTY_EMPLOYEE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmployeeType(@javax.annotation.Nullable EmployeeTypeEnum employeeType) {
    this.employeeType = employeeType;
  }

  public PutUserRequest title(@javax.annotation.Nullable String title) {

    this.title = title;
    return this;
  }

  /**
   * The title of the user, which can be one of the following: * &#x60;M&#x60; – Stands for mister (Mr.) * &#x60;MME&#x60; – Stands for misses (Mrs.) * &#x60;MLLE&#x60; – Stands for miss 
   * @return title
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(@javax.annotation.Nullable String title) {
    this.title = title;
  }

  public PutUserRequest firstname(@javax.annotation.Nullable String firstname) {

    this.firstname = firstname;
    return this;
  }

  /**
   * The first name of the User.
   * @return firstname
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstname() {
    return firstname;
  }


  @JsonProperty(JSON_PROPERTY_FIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstname(@javax.annotation.Nullable String firstname) {
    this.firstname = firstname;
  }

  public PutUserRequest lastname(@javax.annotation.Nullable String lastname) {

    this.lastname = lastname;
    return this;
  }

  /**
   * The last name of the User.
   * @return lastname
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LASTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastname() {
    return lastname;
  }


  @JsonProperty(JSON_PROPERTY_LASTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastname(@javax.annotation.Nullable String lastname) {
    this.lastname = lastname;
  }

  public PutUserRequest middleNames(@javax.annotation.Nullable String middleNames) {

    this.middleNames = middleNames;
    return this;
  }

  /**
   * The middle names of the User, if any.
   * @return middleNames
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMiddleNames() {
    return middleNames;
  }


  @JsonProperty(JSON_PROPERTY_MIDDLE_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMiddleNames(@javax.annotation.Nullable String middleNames) {
    this.middleNames = middleNames;
  }

  public PutUserRequest birthday(@javax.annotation.Nullable String birthday) {

    this.birthday = birthday;
    return this;
  }

  /**
   * The birth date of the User. Format: YYYY-MM-DD 
   * @return birthday
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIRTHDAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBirthday() {
    return birthday;
  }


  @JsonProperty(JSON_PROPERTY_BIRTHDAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBirthday(@javax.annotation.Nullable String birthday) {
    this.birthday = birthday;
  }

  public PutUserRequest email(@javax.annotation.Nullable String email) {

    this.email = email;
    return this;
  }

  /**
   * The email address of the User. Must be valid.
   * @return email
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = email;
  }

  public PutUserRequest address1(@javax.annotation.Nullable String address1) {

    this.address1 = address1;
    return this;
  }

  /**
   * The User postal address (main).  The following characters are accepted (uppercase or lowercase): * The 26 letters of the Roman alphabet * 16 letters with diacritical marks (À Â Ä Ç É È Ê Ë Î Ï Ô Ö Ù Û Ü Ÿ) * 2 ligatures (æ, œ) * Spaces, hyphens, apostrophes, or slashes « » / * Numeric characters 
   * @return address1
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress1() {
    return address1;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress1(@javax.annotation.Nullable String address1) {
    this.address1 = address1;
  }

  public PutUserRequest address2(@javax.annotation.Nullable String address2) {

    this.address2 = address2;
    return this;
  }

  /**
   * The User postal address (complement). Cannot contain carriage return.  The following characters are accepted (uppercase or lowercase): * The 26 letters of the Roman alphabet * 16 letters with diacritical marks (À Â Ä Ç É È Ê Ë Î Ï Ô Ö Ù Û Ü Ÿ) * 2 ligatures (æ, œ) * Spaces, hyphens, apostrophes, or slashes « » / * Numeric characters 
   * @return address2
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress2() {
    return address2;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress2(@javax.annotation.Nullable String address2) {
    this.address2 = address2;
  }

  public PutUserRequest address3(@javax.annotation.Nullable String address3) {

    this.address3 = address3;
    return this;
  }

  /**
   * The User postal address (complement2). Cannot contain carriage return.  The following characters are accepted (uppercase or lowercase): * The 26 letters of the Roman alphabet * 16 letters with diacritical marks (À Â Ä Ç É È Ê Ë Î Ï Ô Ö Ù Û Ü Ÿ) * 2 ligatures (æ, œ) * Spaces, hyphens, apostrophes, or slashes « » / * Numeric characters 
   * @return address3
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddress3() {
    return address3;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress3(@javax.annotation.Nullable String address3) {
    this.address3 = address3;
  }

  public PutUserRequest postcode(@javax.annotation.Nullable String postcode) {

    this.postcode = postcode;
    return this;
  }

  /**
   * The User address postcode.
   * @return postcode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostcode() {
    return postcode;
  }


  @JsonProperty(JSON_PROPERTY_POSTCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostcode(@javax.annotation.Nullable String postcode) {
    this.postcode = postcode;
  }

  public PutUserRequest city(@javax.annotation.Nullable String city) {

    this.city = city;
    return this;
  }

  /**
   * The User address city.
   * @return city
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(@javax.annotation.Nullable String city) {
    this.city = city;
  }

  public PutUserRequest state(@javax.annotation.Nullable String state) {

    this.state = state;
    return this;
  }

  /**
   * The User address state.
   * @return state
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(@javax.annotation.Nullable String state) {
    this.state = state;
  }

  public PutUserRequest country(@javax.annotation.Nullable String country) {

    this.country = country;
    return this;
  }

  /**
   * The country of the user&#39;s address.
   * @return country
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(@javax.annotation.Nullable String country) {
    this.country = country;
  }

  public PutUserRequest distributionCountry(@javax.annotation.Nullable DistributionCountryEnum distributionCountry) {
    this.distributionCountry = distributionCountry;

    return this;
  }

  /**
   * The country in which the end user is using your services. Available values may vary depending on your configuration, see [Distribution Country](/guide/users/introduction.html#distribution-country-distributioncountry) for more information.  This field is only required when you operate in multiple countries. Otherwise, it either defaults to your country or is set to &#x60;null&#x60;. 
   * @return distributionCountry
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISTRIBUTION_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DistributionCountryEnum getDistributionCountry() {
    return distributionCountry;
  }

  @JsonProperty(JSON_PROPERTY_DISTRIBUTION_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDistributionCountry(@javax.annotation.Nullable DistributionCountryEnum distributionCountry) {
    this.distributionCountry = distributionCountry;
  }

  public PutUserRequest secondaryAddress1(@javax.annotation.Nullable String secondaryAddress1) {

    this.secondaryAddress1 = secondaryAddress1;
    return this;
  }

  /**
   * The User secondary postal address (main).
   * @return secondaryAddress1
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECONDARY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecondaryAddress1() {
    return secondaryAddress1;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_ADDRESS1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryAddress1(@javax.annotation.Nullable String secondaryAddress1) {
    this.secondaryAddress1 = secondaryAddress1;
  }

  public PutUserRequest secondaryAddress2(@javax.annotation.Nullable String secondaryAddress2) {

    this.secondaryAddress2 = secondaryAddress2;
    return this;
  }

  /**
   * The User secondary postal address (complement)
   * @return secondaryAddress2
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECONDARY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecondaryAddress2() {
    return secondaryAddress2;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_ADDRESS2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryAddress2(@javax.annotation.Nullable String secondaryAddress2) {
    this.secondaryAddress2 = secondaryAddress2;
  }

  public PutUserRequest secondaryAddress3(@javax.annotation.Nullable String secondaryAddress3) {

    this.secondaryAddress3 = secondaryAddress3;
    return this;
  }

  /**
   * The User secondary postal address (complement2)
   * @return secondaryAddress3
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECONDARY_ADDRESS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecondaryAddress3() {
    return secondaryAddress3;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_ADDRESS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryAddress3(@javax.annotation.Nullable String secondaryAddress3) {
    this.secondaryAddress3 = secondaryAddress3;
  }

  public PutUserRequest secondaryPostcode(@javax.annotation.Nullable String secondaryPostcode) {

    this.secondaryPostcode = secondaryPostcode;
    return this;
  }

  /**
   * The User secondary address postcode.
   * @return secondaryPostcode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECONDARY_POSTCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecondaryPostcode() {
    return secondaryPostcode;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_POSTCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryPostcode(@javax.annotation.Nullable String secondaryPostcode) {
    this.secondaryPostcode = secondaryPostcode;
  }

  public PutUserRequest secondaryCity(@javax.annotation.Nullable String secondaryCity) {

    this.secondaryCity = secondaryCity;
    return this;
  }

  /**
   * The User secondary address city.
   * @return secondaryCity
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECONDARY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecondaryCity() {
    return secondaryCity;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryCity(@javax.annotation.Nullable String secondaryCity) {
    this.secondaryCity = secondaryCity;
  }

  public PutUserRequest secondaryState(@javax.annotation.Nullable String secondaryState) {

    this.secondaryState = secondaryState;
    return this;
  }

  /**
   * The User secondary address state.
   * @return secondaryState
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECONDARY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecondaryState() {
    return secondaryState;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryState(@javax.annotation.Nullable String secondaryState) {
    this.secondaryState = secondaryState;
  }

  public PutUserRequest secondaryCountry(@javax.annotation.Nullable String secondaryCountry) {

    this.secondaryCountry = secondaryCountry;
    return this;
  }

  /**
   * The User secondary address country. Format: ISO  3166-1 alpha-2 
   * @return secondaryCountry
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECONDARY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecondaryCountry() {
    return secondaryCountry;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryCountry(@javax.annotation.Nullable String secondaryCountry) {
    this.secondaryCountry = secondaryCountry;
  }

  public PutUserRequest phone(@javax.annotation.Nullable String phone) {

    this.phone = phone;
    return this;
  }

  /**
   * The User phone number in [international E.164 format](https://en.wikipedia.org/wiki/E.164). 
   * @return phone
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhone(@javax.annotation.Nullable String phone) {
    this.phone = phone;
  }

  public PutUserRequest mobile(@javax.annotation.Nullable String mobile) {

    this.mobile = mobile;
    return this;
  }

  /**
   * The User mobile phone number in [international E.164 format](https://en.wikipedia.org/wiki/E.164). 
   * @return mobile
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MOBILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMobile() {
    return mobile;
  }


  @JsonProperty(JSON_PROPERTY_MOBILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMobile(@javax.annotation.Nullable String mobile) {
    this.mobile = mobile;
  }

  public PutUserRequest nationality(@javax.annotation.Nullable String nationality) {

    this.nationality = nationality;
    return this;
  }

  /**
   * The User nationality. 
   * @return nationality
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNationality() {
    return nationality;
  }


  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNationality(@javax.annotation.Nullable String nationality) {
    this.nationality = nationality;
  }

  public PutUserRequest nationalityOther(@javax.annotation.Nullable String nationalityOther) {

    this.nationalityOther = nationalityOther;
    return this;
  }

  /**
   * The User other nationality. 
   * @return nationalityOther
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NATIONALITY_OTHER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNationalityOther() {
    return nationalityOther;
  }


  @JsonProperty(JSON_PROPERTY_NATIONALITY_OTHER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNationalityOther(@javax.annotation.Nullable String nationalityOther) {
    this.nationalityOther = nationalityOther;
  }

  public PutUserRequest placeOfBirth(@javax.annotation.Nullable String placeOfBirth) {

    this.placeOfBirth = placeOfBirth;
    return this;
  }

  /**
   * The User place of birth.  The following characters are accepted (uppercase or lowercase): * The 26 letters of the Roman alphabet * 16 letters with diacritical marks (À Â Ä Ç É È Ê Ë Î Ï Ô Ö Ù Û Ü Ÿ) * 2 ligatures (æ, œ) * Spaces, hyphens, apostrophes, or slashes « » / * Numeric characters 
   * @return placeOfBirth
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLACE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlaceOfBirth() {
    return placeOfBirth;
  }


  @JsonProperty(JSON_PROPERTY_PLACE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlaceOfBirth(@javax.annotation.Nullable String placeOfBirth) {
    this.placeOfBirth = placeOfBirth;
  }

  public PutUserRequest birthCountry(@javax.annotation.Nullable String birthCountry) {

    this.birthCountry = birthCountry;
    return this;
  }

  /**
   * The User country of Birth.  
   * @return birthCountry
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIRTH_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBirthCountry() {
    return birthCountry;
  }


  @JsonProperty(JSON_PROPERTY_BIRTH_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBirthCountry(@javax.annotation.Nullable String birthCountry) {
    this.birthCountry = birthCountry;
  }

  public PutUserRequest occupation(@javax.annotation.Nullable String occupation) {

    this.occupation = occupation;
    return this;
  }

  /**
   * Free field to specify the occupation of the user.
   * @return occupation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OCCUPATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOccupation() {
    return occupation;
  }


  @JsonProperty(JSON_PROPERTY_OCCUPATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOccupation(@javax.annotation.Nullable String occupation) {
    this.occupation = occupation;
  }

  public PutUserRequest incomeRange(@javax.annotation.Nullable IncomeRangeEnum incomeRange) {

    this.incomeRange = incomeRange;
    return this;
  }

  /**
   * The User income range.
   * @return incomeRange
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCOME_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IncomeRangeEnum getIncomeRange() {
    return incomeRange;
  }


  @JsonProperty(JSON_PROPERTY_INCOME_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncomeRange(@javax.annotation.Nullable IncomeRangeEnum incomeRange) {
    this.incomeRange = incomeRange;
  }

  public PutUserRequest legalName(@javax.annotation.Nullable String legalName) {

    this.legalName = legalName;
    return this;
  }

  /**
   * The name of the legal entity.   If you&#39;re issuing cards, please note this value automatically populates the &#x60;embossedLegalName&#x60; field which has a max. length of 20 characters. 
   * @return legalName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEGAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLegalName() {
    return legalName;
  }


  @JsonProperty(JSON_PROPERTY_LEGAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLegalName(@javax.annotation.Nullable String legalName) {
    this.legalName = legalName;
  }

  public PutUserRequest legalRegistrationNumber(@javax.annotation.Nullable String legalRegistrationNumber) {

    this.legalRegistrationNumber = legalRegistrationNumber;
    return this;
  }

  /**
   * The Business registration number.
   * @return legalRegistrationNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEGAL_REGISTRATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLegalRegistrationNumber() {
    return legalRegistrationNumber;
  }


  @JsonProperty(JSON_PROPERTY_LEGAL_REGISTRATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLegalRegistrationNumber(@javax.annotation.Nullable String legalRegistrationNumber) {
    this.legalRegistrationNumber = legalRegistrationNumber;
  }

  public PutUserRequest legalTvaNumber(@javax.annotation.Nullable String legalTvaNumber) {

    this.legalTvaNumber = legalTvaNumber;
    return this;
  }

  /**
   * The Business VAT number.
   * @return legalTvaNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEGAL_TVA_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLegalTvaNumber() {
    return legalTvaNumber;
  }


  @JsonProperty(JSON_PROPERTY_LEGAL_TVA_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLegalTvaNumber(@javax.annotation.Nullable String legalTvaNumber) {
    this.legalTvaNumber = legalTvaNumber;
  }

  public PutUserRequest legalRegistrationDate(@javax.annotation.Nullable LocalDate legalRegistrationDate) {

    this.legalRegistrationDate = legalRegistrationDate;
    return this;
  }

  /**
   * The Business registration date.
   * @return legalRegistrationDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEGAL_REGISTRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getLegalRegistrationDate() {
    return legalRegistrationDate;
  }


  @JsonProperty(JSON_PROPERTY_LEGAL_REGISTRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLegalRegistrationDate(@javax.annotation.Nullable LocalDate legalRegistrationDate) {
    this.legalRegistrationDate = legalRegistrationDate;
  }

  public PutUserRequest legalForm(@javax.annotation.Nullable String legalForm) {

    this.legalForm = legalForm;
    return this;
  }

  /**
   * The legal form/category of the company. See the [Legal Forms](/guide/users/legal-entity.html#legal-forms-legalform) section for more information. 
   * @return legalForm
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEGAL_FORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLegalForm() {
    return legalForm;
  }


  @JsonProperty(JSON_PROPERTY_LEGAL_FORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLegalForm(@javax.annotation.Nullable String legalForm) {
    this.legalForm = legalForm;
  }

  public PutUserRequest legalShareCapital(@javax.annotation.Nullable Integer legalShareCapital) {

    this.legalShareCapital = legalShareCapital;
    return this;
  }

  /**
   * The Business share capital.
   * @return legalShareCapital
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEGAL_SHARE_CAPITAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLegalShareCapital() {
    return legalShareCapital;
  }


  @JsonProperty(JSON_PROPERTY_LEGAL_SHARE_CAPITAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLegalShareCapital(@javax.annotation.Nullable Integer legalShareCapital) {
    this.legalShareCapital = legalShareCapital;
  }

  public PutUserRequest legalSector(@javax.annotation.Nullable String legalSector) {

    this.legalSector = legalSector;
    return this;
  }

  /**
   * The Business Sector of the company (NAF or NACE code in France). The expected format depends on &#x60;legalSectorType&#x60;  You may check out [the authoritative list](https://www.insee.fr/fr/information/2120875) 
   * @return legalSector
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEGAL_SECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLegalSector() {
    return legalSector;
  }


  @JsonProperty(JSON_PROPERTY_LEGAL_SECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLegalSector(@javax.annotation.Nullable String legalSector) {
    this.legalSector = legalSector;
  }

  public PutUserRequest legalAnnualTurnOver(@javax.annotation.Nullable LegalAnnualTurnOverEnum legalAnnualTurnOver) {

    this.legalAnnualTurnOver = legalAnnualTurnOver;
    return this;
  }

  /**
   * The Business annual turnover (in k€).
   * @return legalAnnualTurnOver
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEGAL_ANNUAL_TURN_OVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LegalAnnualTurnOverEnum getLegalAnnualTurnOver() {
    return legalAnnualTurnOver;
  }


  @JsonProperty(JSON_PROPERTY_LEGAL_ANNUAL_TURN_OVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLegalAnnualTurnOver(@javax.annotation.Nullable LegalAnnualTurnOverEnum legalAnnualTurnOver) {
    this.legalAnnualTurnOver = legalAnnualTurnOver;
  }

  public PutUserRequest legalNetIncomeRange(@javax.annotation.Nullable LegalNetIncomeRangeEnum legalNetIncomeRange) {

    this.legalNetIncomeRange = legalNetIncomeRange;
    return this;
  }

  /**
   * The Business net income range (in k€).
   * @return legalNetIncomeRange
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEGAL_NET_INCOME_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LegalNetIncomeRangeEnum getLegalNetIncomeRange() {
    return legalNetIncomeRange;
  }


  @JsonProperty(JSON_PROPERTY_LEGAL_NET_INCOME_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLegalNetIncomeRange(@javax.annotation.Nullable LegalNetIncomeRangeEnum legalNetIncomeRange) {
    this.legalNetIncomeRange = legalNetIncomeRange;
  }

  public PutUserRequest legalNumberOfEmployeeRange(@javax.annotation.Nullable LegalNumberOfEmployeeRangeEnum legalNumberOfEmployeeRange) {

    this.legalNumberOfEmployeeRange = legalNumberOfEmployeeRange;
    return this;
  }

  /**
   * The Business number of employees.
   * @return legalNumberOfEmployeeRange
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEGAL_NUMBER_OF_EMPLOYEE_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LegalNumberOfEmployeeRangeEnum getLegalNumberOfEmployeeRange() {
    return legalNumberOfEmployeeRange;
  }


  @JsonProperty(JSON_PROPERTY_LEGAL_NUMBER_OF_EMPLOYEE_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLegalNumberOfEmployeeRange(@javax.annotation.Nullable LegalNumberOfEmployeeRangeEnum legalNumberOfEmployeeRange) {
    this.legalNumberOfEmployeeRange = legalNumberOfEmployeeRange;
  }

  public PutUserRequest effectiveBeneficiary(@javax.annotation.Nullable Integer effectiveBeneficiary) {

    this.effectiveBeneficiary = effectiveBeneficiary;
    return this;
  }

  /**
   * The effective beneficiary shares of the legal entity (e.g., for a beneficiary holding 70% of a company, value must be &#x60;70&#x60;). For shareholders only.
   * @return effectiveBeneficiary
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EFFECTIVE_BENEFICIARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEffectiveBeneficiary() {
    return effectiveBeneficiary;
  }


  @JsonProperty(JSON_PROPERTY_EFFECTIVE_BENEFICIARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEffectiveBeneficiary(@javax.annotation.Nullable Integer effectiveBeneficiary) {
    this.effectiveBeneficiary = effectiveBeneficiary;
  }

  public PutUserRequest language(@javax.annotation.Nullable String language) {

    this.language = language;
    return this;
  }

  /**
   * The User preferred language. Format: ISO 639-1 
   * @return language
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLanguage() {
    return language;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanguage(@javax.annotation.Nullable String language) {
    this.language = language;
  }

  public PutUserRequest taxNumber(@javax.annotation.Nullable String taxNumber) {

    this.taxNumber = taxNumber;
    return this;
  }

  /**
   * Deprecated. Your must use the &#x60;taxResidence&#x60; endpoint.
   * @return taxNumber
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxNumber() {
    return taxNumber;
  }


  @JsonProperty(JSON_PROPERTY_TAX_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxNumber(@javax.annotation.Nullable String taxNumber) {
    this.taxNumber = taxNumber;
  }

  public PutUserRequest taxResidence(@javax.annotation.Nullable String taxResidence) {

    this.taxResidence = taxResidence;
    return this;
  }

  /**
   * Deprecated. Your must use the &#x60;taxResidence&#x60; endpoint.
   * @return taxResidence
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_RESIDENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxResidence() {
    return taxResidence;
  }


  @JsonProperty(JSON_PROPERTY_TAX_RESIDENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxResidence(@javax.annotation.Nullable String taxResidence) {
    this.taxResidence = taxResidence;
  }

  public PutUserRequest position(@javax.annotation.Nullable String position) {

    this.position = position;
    return this;
  }

  /**
   * The geographic activity coverage (for NGOs only).
   * @return position
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosition(@javax.annotation.Nullable String position) {
    this.position = position;
  }

  public PutUserRequest personalAssets(@javax.annotation.Nullable PersonalAssetsEnum personalAssets) {

    this.personalAssets = personalAssets;
    return this;
  }

  /**
   * Deprecated. You must use &#x60;personalAssetsRange&#x60; instead.
   * @return personalAssets
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERSONAL_ASSETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PersonalAssetsEnum getPersonalAssets() {
    return personalAssets;
  }


  @JsonProperty(JSON_PROPERTY_PERSONAL_ASSETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonalAssets(@javax.annotation.Nullable PersonalAssetsEnum personalAssets) {
    this.personalAssets = personalAssets;
  }

  public PutUserRequest activityOutsideEu(@javax.annotation.Nullable ActivityOutsideEuEnum activityOutsideEu) {

    this.activityOutsideEu = activityOutsideEu;
    return this;
  }

  /**
   * For Users obligated to complete a due diligence questionnaire regarding sanctions and embargoes.   Whether the entity and its business units, subsidiaries, and joint ventures have a commercial activity outside of the European Union.  Can be: * &#x60;0&#x60; – False * &#x60;1&#x60; – True. When set to this value, the next attributes become mandatory.   See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo) article for more information. 
   * @return activityOutsideEu
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVITY_OUTSIDE_EU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActivityOutsideEuEnum getActivityOutsideEu() {
    return activityOutsideEu;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVITY_OUTSIDE_EU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActivityOutsideEu(@javax.annotation.Nullable ActivityOutsideEuEnum activityOutsideEu) {
    this.activityOutsideEu = activityOutsideEu;
  }

  public PutUserRequest economicSanctions(@javax.annotation.Nullable EconomicSanctionsEnum economicSanctions) {

    this.economicSanctions = economicSanctions;
    return this;
  }

  /**
   * For Users obligated to complete a due diligence questionnaire regarding sanctions and embargoes, and for which the &#x60;activityOutsideEu&#x60; value is set to &#x60;1&#x60;.  Whether the entity, its subsidiaries, entities, employees, directors, beneficial owners, or joint ventures are subject to Economic Sanctions.  Can be: * &#x60;0&#x60; – False * &#x60;1&#x60; – True   See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo) article for more information. 
   * @return economicSanctions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ECONOMIC_SANCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EconomicSanctionsEnum getEconomicSanctions() {
    return economicSanctions;
  }


  @JsonProperty(JSON_PROPERTY_ECONOMIC_SANCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEconomicSanctions(@javax.annotation.Nullable EconomicSanctionsEnum economicSanctions) {
    this.economicSanctions = economicSanctions;
  }

  public PutUserRequest residentCountriesSanctions(@javax.annotation.Nullable ResidentCountriesSanctionsEnum residentCountriesSanctions) {

    this.residentCountriesSanctions = residentCountriesSanctions;
    return this;
  }

  /**
   * For Users obligated to complete a due diligence questionnaire regarding sanctions and embargoes, and for which the &#x60;activityOutsideEu&#x60; value is set to &#x60;1&#x60;.  Whether the entity, its subsidiaries, or joint ventures, located within or operating from any countries or territories are subject to Comprehensive Sanctions.   Can be: * &#x60;0&#x60; – False * &#x60;1&#x60; – True   See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo) article for more information. 
   * @return residentCountriesSanctions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESIDENT_COUNTRIES_SANCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResidentCountriesSanctionsEnum getResidentCountriesSanctions() {
    return residentCountriesSanctions;
  }


  @JsonProperty(JSON_PROPERTY_RESIDENT_COUNTRIES_SANCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResidentCountriesSanctions(@javax.annotation.Nullable ResidentCountriesSanctionsEnum residentCountriesSanctions) {
    this.residentCountriesSanctions = residentCountriesSanctions;
  }

  public PutUserRequest involvedSanctions(@javax.annotation.Nullable InvolvedSanctionsEnum involvedSanctions) {

    this.involvedSanctions = involvedSanctions;
    return this;
  }

  /**
   * For Users obligated to complete a due diligence questionnaire regarding sanctions and embargoes, and for which the &#x60;activityOutsideEu&#x60; value is set to &#x60;1&#x60;.  Whether the entity, its subsidiaries, or joint ventures, are engaged in transactions, investments, business, or other dealings that directly or indirectly involve or benefit: * Any countries or territories subject to Comprehensive Sanctions (Cuba, Iran, North Korea, Syria, Crimea, Ukrainian Oblasts not controlled by the government, or Russia), or  * Any person or entity which is the target of any Sanctions (“Sanctioned Targets”).  Can be: * &#x60;0&#x60; – False * &#x60;1&#x60; – True   See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo) article for more information. 
   * @return involvedSanctions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOLVED_SANCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InvolvedSanctionsEnum getInvolvedSanctions() {
    return involvedSanctions;
  }


  @JsonProperty(JSON_PROPERTY_INVOLVED_SANCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvolvedSanctions(@javax.annotation.Nullable InvolvedSanctionsEnum involvedSanctions) {
    this.involvedSanctions = involvedSanctions;
  }

  public PutUserRequest entitySanctionsQuestionnaire(@javax.annotation.Nullable EntitySanctionsQuestionnaireEnum entitySanctionsQuestionnaire) {

    this.entitySanctionsQuestionnaire = entitySanctionsQuestionnaire;
    return this;
  }

  /**
   * For Users obligated to complete a due diligence questionnaire regarding sanctions and embargoes, and for which the &#x60;activityOutsideEu&#x60; value is set to &#x60;1&#x60;.  Defines the scope to which the &#x60;activityOutsideEu&#x60; field applies: * &#x60;0&#x60; – Not applicable * &#x60;1&#x60; – Only the legal entity * &#x60;2&#x60; – The legal entity and all its subsidiaries held at 100% * &#x60;3&#x60; – The legal entity and all its subsidiaries held at 50% or more * &#x60;4&#x60; – The legal entity and a list of subsidiaries  See the [Sanctions and embargo](/guide/users/legal-entity.html#sanctions-and-embargo) article for more information. 
   * @return entitySanctionsQuestionnaire
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITY_SANCTIONS_QUESTIONNAIRE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntitySanctionsQuestionnaireEnum getEntitySanctionsQuestionnaire() {
    return entitySanctionsQuestionnaire;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_SANCTIONS_QUESTIONNAIRE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntitySanctionsQuestionnaire(@javax.annotation.Nullable EntitySanctionsQuestionnaireEnum entitySanctionsQuestionnaire) {
    this.entitySanctionsQuestionnaire = entitySanctionsQuestionnaire;
  }

  public PutUserRequest timezone(@javax.annotation.Nullable String timezone) {

    this.timezone = timezone;
    return this;
  }

  /**
   * The User timezone in the [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) format. The timezones have unique names in the form \&quot;Area/Location\&quot; (e.g. \&quot;America/New_York\&quot;, \&quot;Europe/Paris\&quot;).  It may be used to enforce a card &#x60;paymentDailyLimit&#x60; based on the cardholder&#39;s timezone. 
   * @return timezone
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIMEZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimezone() {
    return timezone;
  }


  @JsonProperty(JSON_PROPERTY_TIMEZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimezone(@javax.annotation.Nullable String timezone) {
    this.timezone = timezone;
  }

  public PutUserRequest occupationType(@javax.annotation.Nullable OccupationTypeEnum occupationType) {

    this.occupationType = occupationType;
    return this;
  }

  /**
   * Deprecated. Use &#x60;occupationCategory&#x60; instead.
   * @return occupationType
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OCCUPATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OccupationTypeEnum getOccupationType() {
    return occupationType;
  }


  @JsonProperty(JSON_PROPERTY_OCCUPATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOccupationType(@javax.annotation.Nullable OccupationTypeEnum occupationType) {
    this.occupationType = occupationType;
  }

  public PutUserRequest sourceOfFunds(@javax.annotation.Nullable SourceOfFundsEnum sourceOfFunds) {

    this.sourceOfFunds = sourceOfFunds;
    return this;
  }

  /**
   * The source of funds for opening an account for a company or self-employed person.
   * @return sourceOfFunds
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE_OF_FUNDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SourceOfFundsEnum getSourceOfFunds() {
    return sourceOfFunds;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_OF_FUNDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceOfFunds(@javax.annotation.Nullable SourceOfFundsEnum sourceOfFunds) {
    this.sourceOfFunds = sourceOfFunds;
  }

  public PutUserRequest legalSectorType(@javax.annotation.Nullable LegalSectorTypeEnum legalSectorType) {

    this.legalSectorType = legalSectorType;
    return this;
  }

  /**
   * Qualify the type of data in the &#x60;legalSector&#x60; field: * If it is set to NACE the legalSector needs to be in a NACE format (4 digits).  * If it is set to NAF (or not set at all) the legalSector needs to be in a NAF format (4 digits followed by a capital letter). 
   * @return legalSectorType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEGAL_SECTOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LegalSectorTypeEnum getLegalSectorType() {
    return legalSectorType;
  }


  @JsonProperty(JSON_PROPERTY_LEGAL_SECTOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLegalSectorType(@javax.annotation.Nullable LegalSectorTypeEnum legalSectorType) {
    this.legalSectorType = legalSectorType;
  }

  public PutUserRequest isOnStockExchange(@javax.annotation.Nullable IsOnStockExchangeEnum isOnStockExchange) {

    this.isOnStockExchange = isOnStockExchange;
    return this;
  }

  /**
   * The user is a corporation and is quoted on an organized stock exchange. * &#x60;0&#x60; – No * &#x60;1&#x60; – Yes 
   * @return isOnStockExchange
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ON_STOCK_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IsOnStockExchangeEnum getIsOnStockExchange() {
    return isOnStockExchange;
  }


  @JsonProperty(JSON_PROPERTY_IS_ON_STOCK_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsOnStockExchange(@javax.annotation.Nullable IsOnStockExchangeEnum isOnStockExchange) {
    this.isOnStockExchange = isOnStockExchange;
  }

  public PutUserRequest occupationCategory(@javax.annotation.Nullable OccupationCategoryEnum occupationCategory) {
    this.occupationCategory = occupationCategory;

    return this;
  }

  /**
   * Type of occupation of the user. See [Occupation Category](/guide/users/physical.html#occupation-category-occupationcategory) for the list of values. 
   * @return occupationCategory
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OCCUPATION_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OccupationCategoryEnum getOccupationCategory() {
    return occupationCategory;
  }

  @JsonProperty(JSON_PROPERTY_OCCUPATION_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOccupationCategory(@javax.annotation.Nullable OccupationCategoryEnum occupationCategory) {
    this.occupationCategory = occupationCategory;
  }

  public PutUserRequest personalAssetsRange(@javax.annotation.Nullable PersonalAssetsRangeEnum personalAssetsRange) {
    this.personalAssetsRange = personalAssetsRange;

    return this;
  }

  /**
   * The personal assets range of the user. See [Personal Assets Range](/guide/users/physical.html#personal-assets-range-personalassetsrange) for the list of values. 
   * @return personalAssetsRange
   */
  @javax.annotation.Nullable
  @JsonIgnore

  @JsonProperty(JSON_PROPERTY_PERSONAL_ASSETS_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PersonalAssetsRangeEnum getPersonalAssetsRange() {
        return personalAssetsRange;
  }

  public void setPersonalAssetsRange(@javax.annotation.Nullable PersonalAssetsRangeEnum personalAssetsRange) {
    this.personalAssetsRange = personalAssetsRange;
  }

  public PutUserRequest monthlyIncomeRange(@javax.annotation.Nullable MonthlyIncomeRangeEnum monthlyIncomeRange) {
    this.monthlyIncomeRange = monthlyIncomeRange;

    return this;
  }

  /**
   * Net monthly income of the user. See [Monthly Income Range](/guide/users/physical.html#monthly-income-range-monthlyincomerange) for the list of values. 
   * @return monthlyIncomeRange
   */
  @javax.annotation.Nullable
  @JsonIgnore


  @JsonProperty(JSON_PROPERTY_MONTHLY_INCOME_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public MonthlyIncomeRangeEnum getMonthlyIncomeRange() {
    return monthlyIncomeRange;
  }

  public void setMonthlyIncomeRange(@javax.annotation.Nullable MonthlyIncomeRangeEnum monthlyIncomeRange) {
    this.monthlyIncomeRange = monthlyIncomeRange;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutUserRequest putUserRequest = (PutUserRequest) o;
    return Objects.equals(this.userTag, putUserRequest.userTag) &&
        Objects.equals(this.accessTag, putUserRequest.accessTag) &&
        Objects.equals(this.specifiedUSPerson, putUserRequest.specifiedUSPerson) &&
        Objects.equals(this.controllingPersonType, putUserRequest.controllingPersonType) &&
        Objects.equals(this.employeeType, putUserRequest.employeeType) &&
        Objects.equals(this.title, putUserRequest.title) &&
        Objects.equals(this.firstname, putUserRequest.firstname) &&
        Objects.equals(this.lastname, putUserRequest.lastname) &&
        Objects.equals(this.middleNames, putUserRequest.middleNames) &&
        Objects.equals(this.birthday, putUserRequest.birthday) &&
        Objects.equals(this.email, putUserRequest.email) &&
        Objects.equals(this.address1, putUserRequest.address1) &&
        Objects.equals(this.address2, putUserRequest.address2) &&
        Objects.equals(this.address3, putUserRequest.address3) &&
        Objects.equals(this.postcode, putUserRequest.postcode) &&
        Objects.equals(this.city, putUserRequest.city) &&
        Objects.equals(this.state, putUserRequest.state) &&
        Objects.equals(this.country, putUserRequest.country) &&
        Objects.equals(this.distributionCountry, putUserRequest.distributionCountry) &&
        Objects.equals(this.secondaryAddress1, putUserRequest.secondaryAddress1) &&
        Objects.equals(this.secondaryAddress2, putUserRequest.secondaryAddress2) &&
        Objects.equals(this.secondaryAddress3, putUserRequest.secondaryAddress3) &&
        Objects.equals(this.secondaryPostcode, putUserRequest.secondaryPostcode) &&
        Objects.equals(this.secondaryCity, putUserRequest.secondaryCity) &&
        Objects.equals(this.secondaryState, putUserRequest.secondaryState) &&
        Objects.equals(this.secondaryCountry, putUserRequest.secondaryCountry) &&
        Objects.equals(this.phone, putUserRequest.phone) &&
        Objects.equals(this.mobile, putUserRequest.mobile) &&
        Objects.equals(this.nationality, putUserRequest.nationality) &&
        Objects.equals(this.nationalityOther, putUserRequest.nationalityOther) &&
        Objects.equals(this.placeOfBirth, putUserRequest.placeOfBirth) &&
        Objects.equals(this.birthCountry, putUserRequest.birthCountry) &&
        Objects.equals(this.occupation, putUserRequest.occupation) &&
        Objects.equals(this.incomeRange, putUserRequest.incomeRange) &&
        Objects.equals(this.legalName, putUserRequest.legalName) &&
        Objects.equals(this.legalRegistrationNumber, putUserRequest.legalRegistrationNumber) &&
        Objects.equals(this.legalTvaNumber, putUserRequest.legalTvaNumber) &&
        Objects.equals(this.legalRegistrationDate, putUserRequest.legalRegistrationDate) &&
        Objects.equals(this.legalForm, putUserRequest.legalForm) &&
        Objects.equals(this.legalShareCapital, putUserRequest.legalShareCapital) &&
        Objects.equals(this.legalSector, putUserRequest.legalSector) &&
        Objects.equals(this.legalAnnualTurnOver, putUserRequest.legalAnnualTurnOver) &&
        Objects.equals(this.legalNetIncomeRange, putUserRequest.legalNetIncomeRange) &&
        Objects.equals(this.legalNumberOfEmployeeRange, putUserRequest.legalNumberOfEmployeeRange) &&
        Objects.equals(this.effectiveBeneficiary, putUserRequest.effectiveBeneficiary) &&
        Objects.equals(this.language, putUserRequest.language) &&
        Objects.equals(this.taxNumber, putUserRequest.taxNumber) &&
        Objects.equals(this.taxResidence, putUserRequest.taxResidence) &&
        Objects.equals(this.position, putUserRequest.position) &&
        Objects.equals(this.personalAssets, putUserRequest.personalAssets) &&
        Objects.equals(this.activityOutsideEu, putUserRequest.activityOutsideEu) &&
        Objects.equals(this.economicSanctions, putUserRequest.economicSanctions) &&
        Objects.equals(this.residentCountriesSanctions, putUserRequest.residentCountriesSanctions) &&
        Objects.equals(this.involvedSanctions, putUserRequest.involvedSanctions) &&
        Objects.equals(this.entitySanctionsQuestionnaire, putUserRequest.entitySanctionsQuestionnaire) &&
        Objects.equals(this.timezone, putUserRequest.timezone) &&
        Objects.equals(this.occupationType, putUserRequest.occupationType) &&
        Objects.equals(this.sourceOfFunds, putUserRequest.sourceOfFunds) &&
        Objects.equals(this.legalSectorType, putUserRequest.legalSectorType) &&
        Objects.equals(this.isOnStockExchange, putUserRequest.isOnStockExchange) &&
        Objects.equals(this.occupationCategory, putUserRequest.occupationCategory) &&
        Objects.equals(this.personalAssetsRange, putUserRequest.personalAssetsRange) &&
        Objects.equals(this.monthlyIncomeRange, putUserRequest.monthlyIncomeRange);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(userTag, accessTag, specifiedUSPerson, controllingPersonType, employeeType, title, firstname, lastname, middleNames, birthday, email, address1, address2, address3, postcode, city, state, country, distributionCountry, secondaryAddress1, secondaryAddress2, secondaryAddress3, secondaryPostcode, secondaryCity, secondaryState, secondaryCountry, phone, mobile, nationality, nationalityOther, placeOfBirth, birthCountry, occupation, incomeRange, legalName, legalRegistrationNumber, legalTvaNumber, legalRegistrationDate, legalForm, legalShareCapital, legalSector, legalAnnualTurnOver, legalNetIncomeRange, legalNumberOfEmployeeRange, effectiveBeneficiary, language, taxNumber, taxResidence, position, personalAssets, activityOutsideEu, economicSanctions, residentCountriesSanctions, involvedSanctions, entitySanctionsQuestionnaire, timezone, occupationType, sourceOfFunds, legalSectorType, isOnStockExchange, occupationCategory, personalAssetsRange, monthlyIncomeRange);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutUserRequest {\n");
    sb.append("    userTag: ").append(toIndentedString(userTag)).append("\n");
    sb.append("    accessTag: ").append(toIndentedString(accessTag)).append("\n");
    sb.append("    specifiedUSPerson: ").append(toIndentedString(specifiedUSPerson)).append("\n");
    sb.append("    controllingPersonType: ").append(toIndentedString(controllingPersonType)).append("\n");
    sb.append("    employeeType: ").append(toIndentedString(employeeType)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    middleNames: ").append(toIndentedString(middleNames)).append("\n");
    sb.append("    birthday: ").append(toIndentedString(birthday)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    address3: ").append(toIndentedString(address3)).append("\n");
    sb.append("    postcode: ").append(toIndentedString(postcode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    distributionCountry: ").append(toIndentedString(distributionCountry)).append("\n");
    sb.append("    secondaryAddress1: ").append(toIndentedString(secondaryAddress1)).append("\n");
    sb.append("    secondaryAddress2: ").append(toIndentedString(secondaryAddress2)).append("\n");
    sb.append("    secondaryAddress3: ").append(toIndentedString(secondaryAddress3)).append("\n");
    sb.append("    secondaryPostcode: ").append(toIndentedString(secondaryPostcode)).append("\n");
    sb.append("    secondaryCity: ").append(toIndentedString(secondaryCity)).append("\n");
    sb.append("    secondaryState: ").append(toIndentedString(secondaryState)).append("\n");
    sb.append("    secondaryCountry: ").append(toIndentedString(secondaryCountry)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    nationalityOther: ").append(toIndentedString(nationalityOther)).append("\n");
    sb.append("    placeOfBirth: ").append(toIndentedString(placeOfBirth)).append("\n");
    sb.append("    birthCountry: ").append(toIndentedString(birthCountry)).append("\n");
    sb.append("    occupation: ").append(toIndentedString(occupation)).append("\n");
    sb.append("    incomeRange: ").append(toIndentedString(incomeRange)).append("\n");
    sb.append("    legalName: ").append(toIndentedString(legalName)).append("\n");
    sb.append("    legalRegistrationNumber: ").append(toIndentedString(legalRegistrationNumber)).append("\n");
    sb.append("    legalTvaNumber: ").append(toIndentedString(legalTvaNumber)).append("\n");
    sb.append("    legalRegistrationDate: ").append(toIndentedString(legalRegistrationDate)).append("\n");
    sb.append("    legalForm: ").append(toIndentedString(legalForm)).append("\n");
    sb.append("    legalShareCapital: ").append(toIndentedString(legalShareCapital)).append("\n");
    sb.append("    legalSector: ").append(toIndentedString(legalSector)).append("\n");
    sb.append("    legalAnnualTurnOver: ").append(toIndentedString(legalAnnualTurnOver)).append("\n");
    sb.append("    legalNetIncomeRange: ").append(toIndentedString(legalNetIncomeRange)).append("\n");
    sb.append("    legalNumberOfEmployeeRange: ").append(toIndentedString(legalNumberOfEmployeeRange)).append("\n");
    sb.append("    effectiveBeneficiary: ").append(toIndentedString(effectiveBeneficiary)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    taxNumber: ").append(toIndentedString(taxNumber)).append("\n");
    sb.append("    taxResidence: ").append(toIndentedString(taxResidence)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    personalAssets: ").append(toIndentedString(personalAssets)).append("\n");
    sb.append("    activityOutsideEu: ").append(toIndentedString(activityOutsideEu)).append("\n");
    sb.append("    economicSanctions: ").append(toIndentedString(economicSanctions)).append("\n");
    sb.append("    residentCountriesSanctions: ").append(toIndentedString(residentCountriesSanctions)).append("\n");
    sb.append("    involvedSanctions: ").append(toIndentedString(involvedSanctions)).append("\n");
    sb.append("    entitySanctionsQuestionnaire: ").append(toIndentedString(entitySanctionsQuestionnaire)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    occupationType: ").append(toIndentedString(occupationType)).append("\n");
    sb.append("    sourceOfFunds: ").append(toIndentedString(sourceOfFunds)).append("\n");
    sb.append("    legalSectorType: ").append(toIndentedString(legalSectorType)).append("\n");
    sb.append("    isOnStockExchange: ").append(toIndentedString(isOnStockExchange)).append("\n");
    sb.append("    occupationCategory: ").append(toIndentedString(occupationCategory)).append("\n");
    sb.append("    personalAssetsRange: ").append(toIndentedString(personalAssetsRange)).append("\n");
    sb.append("    monthlyIncomeRange: ").append(toIndentedString(monthlyIncomeRange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
