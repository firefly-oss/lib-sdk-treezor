/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sdk.treezor.model.AuthorizationRequestBrowserInfo;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AuthorizationRequest
 */
@JsonPropertyOrder({
  AuthorizationRequest.JSON_PROPERTY_AMOUNT,
  AuthorizationRequest.JSON_PROPERTY_CURRENCY,
  AuthorizationRequest.JSON_PROPERTY_WALLET_ID,
  AuthorizationRequest.JSON_PROPERTY_USER_ID,
  AuthorizationRequest.JSON_PROPERTY_TOPUP_CARD_ID,
  AuthorizationRequest.JSON_PROPERTY_ACCEPT_URL,
  AuthorizationRequest.JSON_PROPERTY_DECLINE_URL,
  AuthorizationRequest.JSON_PROPERTY_PENDING_URL,
  AuthorizationRequest.JSON_PROPERTY_EXCEPTION_URL,
  AuthorizationRequest.JSON_PROPERTY_CANCEL_URL,
  AuthorizationRequest.JSON_PROPERTY_ECI,
  AuthorizationRequest.JSON_PROPERTY_AUTHENTICATION_INDICATOR,
  AuthorizationRequest.JSON_PROPERTY_ORDER_ID,
  AuthorizationRequest.JSON_PROPERTY_DESCRIPTION,
  AuthorizationRequest.JSON_PROPERTY_PAYMENT_PRODUCT,
  AuthorizationRequest.JSON_PROPERTY_ISSUER_BANK_ID,
  AuthorizationRequest.JSON_PROPERTY_IPADDR,
  AuthorizationRequest.JSON_PROPERTY_DEVICE_CHANNEL,
  AuthorizationRequest.JSON_PROPERTY_BROWSER_INFO,
  AuthorizationRequest.JSON_PROPERTY_PROFILE,
  AuthorizationRequest.JSON_PROPERTY_FIRSTNAME,
  AuthorizationRequest.JSON_PROPERTY_LASTNAME,
  AuthorizationRequest.JSON_PROPERTY_EMAIL,
  AuthorizationRequest.JSON_PROPERTY_PHONE,
  AuthorizationRequest.JSON_PROPERTY_STREET_ADDRESS,
  AuthorizationRequest.JSON_PROPERTY_CITY,
  AuthorizationRequest.JSON_PROPERTY_ZIP_CODE,
  AuthorizationRequest.JSON_PROPERTY_COUNTRY,
  AuthorizationRequest.JSON_PROPERTY_CARD_HOLDER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class AuthorizationRequest {
  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nonnull
  private BigDecimal amount;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  @javax.annotation.Nonnull
  private String currency;

  public static final String JSON_PROPERTY_WALLET_ID = "walletId";
  @javax.annotation.Nonnull
  private String walletId;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  @javax.annotation.Nonnull
  private String userId;

  public static final String JSON_PROPERTY_TOPUP_CARD_ID = "topupCardId";
  @javax.annotation.Nullable
  private String topupCardId;

  public static final String JSON_PROPERTY_ACCEPT_URL = "acceptUrl";
  @javax.annotation.Nonnull
  private String acceptUrl;

  public static final String JSON_PROPERTY_DECLINE_URL = "declineUrl";
  @javax.annotation.Nonnull
  private String declineUrl;

  public static final String JSON_PROPERTY_PENDING_URL = "pendingUrl";
  @javax.annotation.Nonnull
  private String pendingUrl;

  public static final String JSON_PROPERTY_EXCEPTION_URL = "exceptionUrl";
  @javax.annotation.Nonnull
  private String exceptionUrl;

  public static final String JSON_PROPERTY_CANCEL_URL = "cancelUrl";
  @javax.annotation.Nonnull
  private String cancelUrl;

  public static final String JSON_PROPERTY_ECI = "eci";
  @javax.annotation.Nonnull
  private String eci;

  public static final String JSON_PROPERTY_AUTHENTICATION_INDICATOR = "authenticationIndicator";
  @javax.annotation.Nonnull
  private String authenticationIndicator;

  public static final String JSON_PROPERTY_ORDER_ID = "orderId";
  @javax.annotation.Nonnull
  private String orderId;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nonnull
  private String description;

  public static final String JSON_PROPERTY_PAYMENT_PRODUCT = "paymentProduct";
  @javax.annotation.Nonnull
  private String paymentProduct;

  public static final String JSON_PROPERTY_ISSUER_BANK_ID = "issuerBankId";
  @javax.annotation.Nullable
  private String issuerBankId;

  public static final String JSON_PROPERTY_IPADDR = "ipaddr";
  @javax.annotation.Nullable
  private String ipaddr;

  public static final String JSON_PROPERTY_DEVICE_CHANNEL = "deviceChannel";
  @javax.annotation.Nonnull
  private Integer deviceChannel;

  public static final String JSON_PROPERTY_BROWSER_INFO = "browserInfo";
  @javax.annotation.Nonnull
  private AuthorizationRequestBrowserInfo browserInfo;

  public static final String JSON_PROPERTY_PROFILE = "profile";
  @javax.annotation.Nullable
  private String profile;

  public static final String JSON_PROPERTY_FIRSTNAME = "firstname";
  @javax.annotation.Nonnull
  private String firstname;

  public static final String JSON_PROPERTY_LASTNAME = "lastname";
  @javax.annotation.Nonnull
  private String lastname;

  public static final String JSON_PROPERTY_EMAIL = "email";
  @javax.annotation.Nonnull
  private String email;

  public static final String JSON_PROPERTY_PHONE = "phone";
  @javax.annotation.Nonnull
  private String phone;

  public static final String JSON_PROPERTY_STREET_ADDRESS = "streetAddress";
  @javax.annotation.Nonnull
  private String streetAddress;

  public static final String JSON_PROPERTY_CITY = "city";
  @javax.annotation.Nonnull
  private String city;

  public static final String JSON_PROPERTY_ZIP_CODE = "zipCode";
  @javax.annotation.Nonnull
  private String zipCode;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  @javax.annotation.Nonnull
  private String country;

  public static final String JSON_PROPERTY_CARD_HOLDER = "cardHolder";
  @javax.annotation.Nonnull
  private String cardHolder;

  public AuthorizationRequest() {
  }

  public AuthorizationRequest amount(@javax.annotation.Nonnull BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * The amount of the operation.
   * @return amount
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(@javax.annotation.Nonnull BigDecimal amount) {
    this.amount = amount;
  }

  public AuthorizationRequest currency(@javax.annotation.Nonnull String currency) {
    
    this.currency = currency;
    return this;
  }

  /**
   * The currency of the operation. Format: ISO-4217. 
   * @return currency
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(@javax.annotation.Nonnull String currency) {
    this.currency = currency;
  }

  public AuthorizationRequest walletId(@javax.annotation.Nonnull String walletId) {
    
    this.walletId = walletId;
    return this;
  }

  /**
   * The unique identifier of the wallet to be credited.
   * @return walletId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getWalletId() {
    return walletId;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWalletId(@javax.annotation.Nonnull String walletId) {
    this.walletId = walletId;
  }

  public AuthorizationRequest userId(@javax.annotation.Nonnull String userId) {
    
    this.userId = userId;
    return this;
  }

  /**
   * The unique identifier of the user requesting the operation.
   * @return userId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserId(@javax.annotation.Nonnull String userId) {
    this.userId = userId;
  }

  public AuthorizationRequest topupCardId(@javax.annotation.Nullable String topupCardId) {
    
    this.topupCardId = topupCardId;
    return this;
  }

  /**
   * The unique identifier for the user&#39;s Topup Card.
   * @return topupCardId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOPUP_CARD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTopupCardId() {
    return topupCardId;
  }


  @JsonProperty(JSON_PROPERTY_TOPUP_CARD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTopupCardId(@javax.annotation.Nullable String topupCardId) {
    this.topupCardId = topupCardId;
  }

  public AuthorizationRequest acceptUrl(@javax.annotation.Nonnull String acceptUrl) {
    
    this.acceptUrl = acceptUrl;
    return this;
  }

  /**
   * The URL to return the end user to once the payment process is completed successfully. 
   * @return acceptUrl
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCEPT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAcceptUrl() {
    return acceptUrl;
  }


  @JsonProperty(JSON_PROPERTY_ACCEPT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAcceptUrl(@javax.annotation.Nonnull String acceptUrl) {
    this.acceptUrl = acceptUrl;
  }

  public AuthorizationRequest declineUrl(@javax.annotation.Nonnull String declineUrl) {
    
    this.declineUrl = declineUrl;
    return this;
  }

  /**
   * The URL to return the end user to after the acquirer declines the payment. 
   * @return declineUrl
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DECLINE_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDeclineUrl() {
    return declineUrl;
  }


  @JsonProperty(JSON_PROPERTY_DECLINE_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeclineUrl(@javax.annotation.Nonnull String declineUrl) {
    this.declineUrl = declineUrl;
  }

  public AuthorizationRequest pendingUrl(@javax.annotation.Nonnull String pendingUrl) {
    
    this.pendingUrl = pendingUrl;
    return this;
  }

  /**
   * The URL to return your end user to when the payment request was submitted to the acquirer but response is not yet available. 
   * @return pendingUrl
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PENDING_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPendingUrl() {
    return pendingUrl;
  }


  @JsonProperty(JSON_PROPERTY_PENDING_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPendingUrl(@javax.annotation.Nonnull String pendingUrl) {
    this.pendingUrl = pendingUrl;
  }

  public AuthorizationRequest exceptionUrl(@javax.annotation.Nonnull String exceptionUrl) {
    
    this.exceptionUrl = exceptionUrl;
    return this;
  }

  /**
   * The URL to return your end user to after a system failure
   * @return exceptionUrl
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXCEPTION_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExceptionUrl() {
    return exceptionUrl;
  }


  @JsonProperty(JSON_PROPERTY_EXCEPTION_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExceptionUrl(@javax.annotation.Nonnull String exceptionUrl) {
    this.exceptionUrl = exceptionUrl;
  }

  public AuthorizationRequest cancelUrl(@javax.annotation.Nonnull String cancelUrl) {
    
    this.cancelUrl = cancelUrl;
    return this;
  }

  /**
   * The URL to return your end user to after a system failure
   * @return cancelUrl
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CANCEL_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCancelUrl() {
    return cancelUrl;
  }


  @JsonProperty(JSON_PROPERTY_CANCEL_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCancelUrl(@javax.annotation.Nonnull String cancelUrl) {
    this.cancelUrl = cancelUrl;
  }

  public AuthorizationRequest eci(@javax.annotation.Nonnull String eci) {
    
    this.eci = eci;
    return this;
  }

  /**
   * The ECI indicates the security level at which the payment information is processed between the cardholder and Treezor customer 
   * @return eci
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ECI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEci() {
    return eci;
  }


  @JsonProperty(JSON_PROPERTY_ECI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEci(@javax.annotation.Nonnull String eci) {
    this.eci = eci;
  }

  public AuthorizationRequest authenticationIndicator(@javax.annotation.Nonnull String authenticationIndicator) {
    
    this.authenticationIndicator = authenticationIndicator;
    return this;
  }

  /**
   * If the payment product is a credit or debit card, this parameter indicates if the 3-D Secure authentication should be performed for this transaction 
   * @return authenticationIndicator
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAuthenticationIndicator() {
    return authenticationIndicator;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthenticationIndicator(@javax.annotation.Nonnull String authenticationIndicator) {
    this.authenticationIndicator = authenticationIndicator;
  }

  public AuthorizationRequest orderId(@javax.annotation.Nonnull String orderId) {
    
    this.orderId = orderId;
    return this;
  }

  /**
   * The unique identifier of the order, guaranteeing the uniqueness of the transaction.   Must be unique and abide by the following rules: * Length: min. 32 characters * Structure: &#x60;&lt;yourCompanyName&gt;_order_&lt;uniqueIdentifier&gt;&#x60; 
   * @return orderId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOrderId() {
    return orderId;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrderId(@javax.annotation.Nonnull String orderId) {
    this.orderId = orderId;
  }

  public AuthorizationRequest description(@javax.annotation.Nonnull String description) {
    
    this.description = description;
    return this;
  }

  /**
   * The order short description.
   * @return description
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(@javax.annotation.Nonnull String description) {
    this.description = description;
  }

  public AuthorizationRequest paymentProduct(@javax.annotation.Nonnull String paymentProduct) {
    
    this.paymentProduct = paymentProduct;
    return this;
  }

  /**
   * The payment method used for the top-up.  Depending on the payment product, parameters specific to the payment method are required. 
   * @return paymentProduct
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAYMENT_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPaymentProduct() {
    return paymentProduct;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPaymentProduct(@javax.annotation.Nonnull String paymentProduct) {
    this.paymentProduct = paymentProduct;
  }

  public AuthorizationRequest issuerBankId(@javax.annotation.Nullable String issuerBankId) {
    
    this.issuerBankId = issuerBankId;
    return this;
  }

  /**
   * This parameter is specific to the iDEAL payment product.  This is the Business Identifier Code (BIC) of the end user issuer bank 
   * @return issuerBankId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUER_BANK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIssuerBankId() {
    return issuerBankId;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER_BANK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuerBankId(@javax.annotation.Nullable String issuerBankId) {
    this.issuerBankId = issuerBankId;
  }

  public AuthorizationRequest ipaddr(@javax.annotation.Nullable String ipaddr) {
    
    this.ipaddr = ipaddr;
    return this;
  }

  /**
   * The IP address of the end user making a top-up
   * @return ipaddr
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IPADDR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIpaddr() {
    return ipaddr;
  }


  @JsonProperty(JSON_PROPERTY_IPADDR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpaddr(@javax.annotation.Nullable String ipaddr) {
    this.ipaddr = ipaddr;
  }

  public AuthorizationRequest deviceChannel(@javax.annotation.Nonnull Integer deviceChannel) {
    
    this.deviceChannel = deviceChannel;
    return this;
  }

  /**
   * This parameter is specific to the PSD2  Channel through which the transaction is being processed
   * @return deviceChannel
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEVICE_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDeviceChannel() {
    return deviceChannel;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeviceChannel(@javax.annotation.Nonnull Integer deviceChannel) {
    this.deviceChannel = deviceChannel;
  }

  public AuthorizationRequest browserInfo(@javax.annotation.Nonnull AuthorizationRequestBrowserInfo browserInfo) {
    
    this.browserInfo = browserInfo;
    return this;
  }

  /**
   * Get browserInfo
   * @return browserInfo
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BROWSER_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AuthorizationRequestBrowserInfo getBrowserInfo() {
    return browserInfo;
  }


  @JsonProperty(JSON_PROPERTY_BROWSER_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBrowserInfo(@javax.annotation.Nonnull AuthorizationRequestBrowserInfo browserInfo) {
    this.browserInfo = browserInfo;
  }

  public AuthorizationRequest profile(@javax.annotation.Nullable String profile) {
    
    this.profile = profile;
    return this;
  }

  /**
   * Your HiPay Merchant ID. Required if you have multiple MIDs, otherwise empty. 
   * @return profile
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProfile() {
    return profile;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfile(@javax.annotation.Nullable String profile) {
    this.profile = profile;
  }

  public AuthorizationRequest firstname(@javax.annotation.Nonnull String firstname) {
    
    this.firstname = firstname;
    return this;
  }

  /**
   * The first name of the user.
   * @return firstname
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstname() {
    return firstname;
  }


  @JsonProperty(JSON_PROPERTY_FIRSTNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstname(@javax.annotation.Nonnull String firstname) {
    this.firstname = firstname;
  }

  public AuthorizationRequest lastname(@javax.annotation.Nonnull String lastname) {
    
    this.lastname = lastname;
    return this;
  }

  /**
   * The last name of the user.
   * @return lastname
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LASTNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastname() {
    return lastname;
  }


  @JsonProperty(JSON_PROPERTY_LASTNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastname(@javax.annotation.Nonnull String lastname) {
    this.lastname = lastname;
  }

  public AuthorizationRequest email(@javax.annotation.Nonnull String email) {
    
    this.email = email;
    return this;
  }

  /**
   * The email of the user.
   * @return email
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(@javax.annotation.Nonnull String email) {
    this.email = email;
  }

  public AuthorizationRequest phone(@javax.annotation.Nonnull String phone) {
    
    this.phone = phone;
    return this;
  }

  /**
   * The phone number of the user.
   * @return phone
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPhone(@javax.annotation.Nonnull String phone) {
    this.phone = phone;
  }

  public AuthorizationRequest streetAddress(@javax.annotation.Nonnull String streetAddress) {
    
    this.streetAddress = streetAddress;
    return this;
  }

  /**
   * The residence street name and number of the user.
   * @return streetAddress
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STREET_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStreetAddress() {
    return streetAddress;
  }


  @JsonProperty(JSON_PROPERTY_STREET_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStreetAddress(@javax.annotation.Nonnull String streetAddress) {
    this.streetAddress = streetAddress;
  }

  public AuthorizationRequest city(@javax.annotation.Nonnull String city) {
    
    this.city = city;
    return this;
  }

  /**
   * The residence city of the user.
   * @return city
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCity(@javax.annotation.Nonnull String city) {
    this.city = city;
  }

  public AuthorizationRequest zipCode(@javax.annotation.Nonnull String zipCode) {
    
    this.zipCode = zipCode;
    return this;
  }

  /**
   * The residence city zipcode of the user.
   * @return zipCode
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ZIP_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getZipCode() {
    return zipCode;
  }


  @JsonProperty(JSON_PROPERTY_ZIP_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setZipCode(@javax.annotation.Nonnull String zipCode) {
    this.zipCode = zipCode;
  }

  public AuthorizationRequest country(@javax.annotation.Nonnull String country) {
    
    this.country = country;
    return this;
  }

  /**
   * The residence country of the user. 
   * @return country
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCountry(@javax.annotation.Nonnull String country) {
    this.country = country;
  }

  public AuthorizationRequest cardHolder(@javax.annotation.Nonnull String cardHolder) {
    
    this.cardHolder = cardHolder;
    return this;
  }

  /**
   * The name associated to the card.
   * @return cardHolder
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CARD_HOLDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCardHolder() {
    return cardHolder;
  }


  @JsonProperty(JSON_PROPERTY_CARD_HOLDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCardHolder(@javax.annotation.Nonnull String cardHolder) {
    this.cardHolder = cardHolder;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthorizationRequest authorizationRequest = (AuthorizationRequest) o;
    return Objects.equals(this.amount, authorizationRequest.amount) &&
        Objects.equals(this.currency, authorizationRequest.currency) &&
        Objects.equals(this.walletId, authorizationRequest.walletId) &&
        Objects.equals(this.userId, authorizationRequest.userId) &&
        Objects.equals(this.topupCardId, authorizationRequest.topupCardId) &&
        Objects.equals(this.acceptUrl, authorizationRequest.acceptUrl) &&
        Objects.equals(this.declineUrl, authorizationRequest.declineUrl) &&
        Objects.equals(this.pendingUrl, authorizationRequest.pendingUrl) &&
        Objects.equals(this.exceptionUrl, authorizationRequest.exceptionUrl) &&
        Objects.equals(this.cancelUrl, authorizationRequest.cancelUrl) &&
        Objects.equals(this.eci, authorizationRequest.eci) &&
        Objects.equals(this.authenticationIndicator, authorizationRequest.authenticationIndicator) &&
        Objects.equals(this.orderId, authorizationRequest.orderId) &&
        Objects.equals(this.description, authorizationRequest.description) &&
        Objects.equals(this.paymentProduct, authorizationRequest.paymentProduct) &&
        Objects.equals(this.issuerBankId, authorizationRequest.issuerBankId) &&
        Objects.equals(this.ipaddr, authorizationRequest.ipaddr) &&
        Objects.equals(this.deviceChannel, authorizationRequest.deviceChannel) &&
        Objects.equals(this.browserInfo, authorizationRequest.browserInfo) &&
        Objects.equals(this.profile, authorizationRequest.profile) &&
        Objects.equals(this.firstname, authorizationRequest.firstname) &&
        Objects.equals(this.lastname, authorizationRequest.lastname) &&
        Objects.equals(this.email, authorizationRequest.email) &&
        Objects.equals(this.phone, authorizationRequest.phone) &&
        Objects.equals(this.streetAddress, authorizationRequest.streetAddress) &&
        Objects.equals(this.city, authorizationRequest.city) &&
        Objects.equals(this.zipCode, authorizationRequest.zipCode) &&
        Objects.equals(this.country, authorizationRequest.country) &&
        Objects.equals(this.cardHolder, authorizationRequest.cardHolder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, currency, walletId, userId, topupCardId, acceptUrl, declineUrl, pendingUrl, exceptionUrl, cancelUrl, eci, authenticationIndicator, orderId, description, paymentProduct, issuerBankId, ipaddr, deviceChannel, browserInfo, profile, firstname, lastname, email, phone, streetAddress, city, zipCode, country, cardHolder);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthorizationRequest {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    topupCardId: ").append(toIndentedString(topupCardId)).append("\n");
    sb.append("    acceptUrl: ").append(toIndentedString(acceptUrl)).append("\n");
    sb.append("    declineUrl: ").append(toIndentedString(declineUrl)).append("\n");
    sb.append("    pendingUrl: ").append(toIndentedString(pendingUrl)).append("\n");
    sb.append("    exceptionUrl: ").append(toIndentedString(exceptionUrl)).append("\n");
    sb.append("    cancelUrl: ").append(toIndentedString(cancelUrl)).append("\n");
    sb.append("    eci: ").append(toIndentedString(eci)).append("\n");
    sb.append("    authenticationIndicator: ").append(toIndentedString(authenticationIndicator)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    paymentProduct: ").append(toIndentedString(paymentProduct)).append("\n");
    sb.append("    issuerBankId: ").append(toIndentedString(issuerBankId)).append("\n");
    sb.append("    ipaddr: ").append(toIndentedString(ipaddr)).append("\n");
    sb.append("    deviceChannel: ").append(toIndentedString(deviceChannel)).append("\n");
    sb.append("    browserInfo: ").append(toIndentedString(browserInfo)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    streetAddress: ").append(toIndentedString(streetAddress)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    zipCode: ").append(toIndentedString(zipCode)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    cardHolder: ").append(toIndentedString(cardHolder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

