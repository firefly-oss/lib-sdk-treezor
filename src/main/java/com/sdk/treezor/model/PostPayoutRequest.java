/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostPayoutRequest
 */
@JsonPropertyOrder({
  PostPayoutRequest.JSON_PROPERTY_PAYOUT_TAG,
  PostPayoutRequest.JSON_PROPERTY_ACCESS_TAG,
  PostPayoutRequest.JSON_PROPERTY_WALLET_ID,
  PostPayoutRequest.JSON_PROPERTY_PAYOUT_TYPE_ID,
  PostPayoutRequest.JSON_PROPERTY_BANK_ACCOUNT_ID,
  PostPayoutRequest.JSON_PROPERTY_BENEFICIARY_ID,
  PostPayoutRequest.JSON_PROPERTY_LABEL,
  PostPayoutRequest.JSON_PROPERTY_END_TO_END_ID,
  PostPayoutRequest.JSON_PROPERTY_AMOUNT,
  PostPayoutRequest.JSON_PROPERTY_CURRENCY,
  PostPayoutRequest.JSON_PROPERTY_SUPPORT_FILE_LINK
})
@JsonTypeName("postPayout_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class PostPayoutRequest {
  public static final String JSON_PROPERTY_PAYOUT_TAG = "payoutTag";
  @javax.annotation.Nullable
  private Integer payoutTag;

  public static final String JSON_PROPERTY_ACCESS_TAG = "accessTag";
  @javax.annotation.Nullable
  private String accessTag;

  public static final String JSON_PROPERTY_WALLET_ID = "walletId";
  @javax.annotation.Nonnull
  private Integer walletId;

  /**
   * Type of payout among the following: * &#x60;1&#x60; for SEPA Credit Transfer (default) * &#x60;2&#x60; for SEPA Direct Debit * &#x60;3&#x60; for SEPA Instant Credit Transfer 
   */
  public enum PayoutTypeIdEnum {
    NUMBER_1(Integer.valueOf(1)),
    
    NUMBER_2(Integer.valueOf(2)),
    
    NUMBER_3(Integer.valueOf(3));

    private Integer value;

    PayoutTypeIdEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PayoutTypeIdEnum fromValue(Integer value) {
      for (PayoutTypeIdEnum b : PayoutTypeIdEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PAYOUT_TYPE_ID = "payoutTypeId";
  @javax.annotation.Nullable
  private PayoutTypeIdEnum payoutTypeId = PayoutTypeIdEnum.NUMBER_1;

  public static final String JSON_PROPERTY_BANK_ACCOUNT_ID = "bankAccountId";
  @javax.annotation.Nullable
  private Integer bankAccountId;

  public static final String JSON_PROPERTY_BENEFICIARY_ID = "beneficiaryId";
  @javax.annotation.Nonnull
  private Integer beneficiaryId;

  public static final String JSON_PROPERTY_LABEL = "label";
  @javax.annotation.Nullable
  private String label;

  public static final String JSON_PROPERTY_END_TO_END_ID = "endToEndId";
  @javax.annotation.Nullable
  private String endToEndId;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nonnull
  private Float amount;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  @javax.annotation.Nonnull
  private String currency;

  public static final String JSON_PROPERTY_SUPPORT_FILE_LINK = "supportFileLink";
  @javax.annotation.Nullable
  private String supportFileLink;

  public PostPayoutRequest() {
  }

  public PostPayoutRequest payoutTag(@javax.annotation.Nullable Integer payoutTag) {
    
    this.payoutTag = payoutTag;
    return this;
  }

  /**
   * Custom attribute to use as you see fit. Learn more in the [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article. 
   * @return payoutTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYOUT_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPayoutTag() {
    return payoutTag;
  }


  @JsonProperty(JSON_PROPERTY_PAYOUT_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayoutTag(@javax.annotation.Nullable Integer payoutTag) {
    this.payoutTag = payoutTag;
  }

  public PostPayoutRequest accessTag(@javax.annotation.Nullable String accessTag) {
    
    this.accessTag = accessTag;
    return this;
  }

  /**
   * A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). 
   * @return accessTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccessTag() {
    return accessTag;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessTag(@javax.annotation.Nullable String accessTag) {
    this.accessTag = accessTag;
  }

  public PostPayoutRequest walletId(@javax.annotation.Nonnull Integer walletId) {
    
    this.walletId = walletId;
    return this;
  }

  /**
   * The unique identifier of the debited Wallet.
   * @return walletId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getWalletId() {
    return walletId;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWalletId(@javax.annotation.Nonnull Integer walletId) {
    this.walletId = walletId;
  }

  public PostPayoutRequest payoutTypeId(@javax.annotation.Nullable PayoutTypeIdEnum payoutTypeId) {
    
    this.payoutTypeId = payoutTypeId;
    return this;
  }

  /**
   * Type of payout among the following: * &#x60;1&#x60; for SEPA Credit Transfer (default) * &#x60;2&#x60; for SEPA Direct Debit * &#x60;3&#x60; for SEPA Instant Credit Transfer 
   * @return payoutTypeId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYOUT_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PayoutTypeIdEnum getPayoutTypeId() {
    return payoutTypeId;
  }


  @JsonProperty(JSON_PROPERTY_PAYOUT_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayoutTypeId(@javax.annotation.Nullable PayoutTypeIdEnum payoutTypeId) {
    this.payoutTypeId = payoutTypeId;
  }

  public PostPayoutRequest bankAccountId(@javax.annotation.Nullable Integer bankAccountId) {
    
    this.bankAccountId = bankAccountId;
    return this;
  }

  /**
   * DEPRECATED - Use &#x60;beneficiaryId&#x60; instead.
   * @return bankAccountId
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BANK_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBankAccountId() {
    return bankAccountId;
  }


  @JsonProperty(JSON_PROPERTY_BANK_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBankAccountId(@javax.annotation.Nullable Integer bankAccountId) {
    this.bankAccountId = bankAccountId;
  }

  public PostPayoutRequest beneficiaryId(@javax.annotation.Nonnull Integer beneficiaryId) {
    
    this.beneficiaryId = beneficiaryId;
    return this;
  }

  /**
   * The unique identifier of the payout Beneficiary.
   * @return beneficiaryId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BENEFICIARY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getBeneficiaryId() {
    return beneficiaryId;
  }


  @JsonProperty(JSON_PROPERTY_BENEFICIARY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBeneficiaryId(@javax.annotation.Nonnull Integer beneficiaryId) {
    this.beneficiaryId = beneficiaryId;
  }

  public PostPayoutRequest label(@javax.annotation.Nullable String label) {
    
    this.label = label;
    return this;
  }

  /**
   * The payout label that will be displayed on the receiver&#39;s bank account.  Allowed characters: &#x60;a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 / - ? : ( ) . , &#39; + Spaceâ€œ.&#x60;  * Accentuated characters will be replaced by the same characters without accent  * &#x60;/n&#x60; character are removed * Must not start or end with &#x60;/&#x60; * Must not contain &#x60;//&#x60; 
   * @return label
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(@javax.annotation.Nullable String label) {
    this.label = label;
  }

  public PostPayoutRequest endToEndId(@javax.annotation.Nullable String endToEndId) {
    
    this.endToEndId = endToEndId;
    return this;
  }

  /**
   * Unique identification assigned by the final client to unumbiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.  Allowed characters: &#x60;a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 / - ? : ( ) . , &#39; + Spaceâ€œ.&#x60;  * Accentuated characters will be replaced by the same characters without accent  * &#x60;/n&#x60; character are removed * Must not start or end with &#x60;/&#x60; * Must not contain &#x60;//&#x60; 
   * @return endToEndId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_TO_END_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndToEndId() {
    return endToEndId;
  }


  @JsonProperty(JSON_PROPERTY_END_TO_END_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndToEndId(@javax.annotation.Nullable String endToEndId) {
    this.endToEndId = endToEndId;
  }

  public PostPayoutRequest amount(@javax.annotation.Nonnull Float amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * The amount of the payout. * Must be greater than &#x60;0&#x60;.  * Must be specified as a number with 2 decimals.   For example &#x60;180.99&#x60; for 180,99 euros and &#x60;120.00&#x60; for 120 euros.  
   * @return amount
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Float getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(@javax.annotation.Nonnull Float amount) {
    this.amount = amount;
  }

  public PostPayoutRequest currency(@javax.annotation.Nonnull String currency) {
    
    this.currency = currency;
    return this;
  }

  /**
   * The currency of the transfer amount.   Format: [ISO 4217](/guide/api-basics/data-format.html#currencies). 
   * @return currency
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(@javax.annotation.Nonnull String currency) {
    this.currency = currency;
  }

  public PostPayoutRequest supportFileLink(@javax.annotation.Nullable String supportFileLink) {
    
    this.supportFileLink = supportFileLink;
    return this;
  }

  /**
   * The link of the support file.
   * @return supportFileLink
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPORT_FILE_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSupportFileLink() {
    return supportFileLink;
  }


  @JsonProperty(JSON_PROPERTY_SUPPORT_FILE_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportFileLink(@javax.annotation.Nullable String supportFileLink) {
    this.supportFileLink = supportFileLink;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostPayoutRequest postPayoutRequest = (PostPayoutRequest) o;
    return Objects.equals(this.payoutTag, postPayoutRequest.payoutTag) &&
        Objects.equals(this.accessTag, postPayoutRequest.accessTag) &&
        Objects.equals(this.walletId, postPayoutRequest.walletId) &&
        Objects.equals(this.payoutTypeId, postPayoutRequest.payoutTypeId) &&
        Objects.equals(this.bankAccountId, postPayoutRequest.bankAccountId) &&
        Objects.equals(this.beneficiaryId, postPayoutRequest.beneficiaryId) &&
        Objects.equals(this.label, postPayoutRequest.label) &&
        Objects.equals(this.endToEndId, postPayoutRequest.endToEndId) &&
        Objects.equals(this.amount, postPayoutRequest.amount) &&
        Objects.equals(this.currency, postPayoutRequest.currency) &&
        Objects.equals(this.supportFileLink, postPayoutRequest.supportFileLink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payoutTag, accessTag, walletId, payoutTypeId, bankAccountId, beneficiaryId, label, endToEndId, amount, currency, supportFileLink);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostPayoutRequest {\n");
    sb.append("    payoutTag: ").append(toIndentedString(payoutTag)).append("\n");
    sb.append("    accessTag: ").append(toIndentedString(accessTag)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    payoutTypeId: ").append(toIndentedString(payoutTypeId)).append("\n");
    sb.append("    bankAccountId: ").append(toIndentedString(bankAccountId)).append("\n");
    sb.append("    beneficiaryId: ").append(toIndentedString(beneficiaryId)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    endToEndId: ").append(toIndentedString(endToEndId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    supportFileLink: ").append(toIndentedString(supportFileLink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

