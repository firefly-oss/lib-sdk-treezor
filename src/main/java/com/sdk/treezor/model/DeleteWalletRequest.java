/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DeleteWalletRequest
 */
@JsonPropertyOrder({
  DeleteWalletRequest.JSON_PROPERTY_ACCESS_TAG,
  DeleteWalletRequest.JSON_PROPERTY_ORIGIN,
  DeleteWalletRequest.JSON_PROPERTY_ORIGIN_ID
})
@JsonTypeName("deleteWallet_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class DeleteWalletRequest {
  public static final String JSON_PROPERTY_ACCESS_TAG = "accessTag";
  @javax.annotation.Nullable
  private String accessTag;

  /**
   * The origin of the request for cancelling the Wallet, which can be one of the following: &lt;ul&gt;&lt;li&gt;&#x60;OPERATOR&#x60; – When **you** are at the origin of the deactivation.&lt;/li&gt;&lt;li&gt;&#x60;USER&#x60; – When the **end user** is at the origin of the deactivation.&lt;/li&gt;&lt;/ul&gt; 
   */
  public enum OriginEnum {
    OPERATOR(String.valueOf("OPERATOR")),
    
    USER(String.valueOf("USER"));

    private String value;

    OriginEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OriginEnum fromValue(String value) {
      for (OriginEnum b : OriginEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ORIGIN = "origin";
  @javax.annotation.Nonnull
  private OriginEnum origin;

  public static final String JSON_PROPERTY_ORIGIN_ID = "originId";
  @javax.annotation.Nullable
  private String originId;

  public DeleteWalletRequest() {
  }

  public DeleteWalletRequest accessTag(@javax.annotation.Nullable String accessTag) {
    
    this.accessTag = accessTag;
    return this;
  }

  /**
   * A unique identifier used to enforce [Idempotency](/guide/api-basics/idempotency.html). 
   * @return accessTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccessTag() {
    return accessTag;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessTag(@javax.annotation.Nullable String accessTag) {
    this.accessTag = accessTag;
  }

  public DeleteWalletRequest origin(@javax.annotation.Nonnull OriginEnum origin) {
    
    this.origin = origin;
    return this;
  }

  /**
   * The origin of the request for cancelling the Wallet, which can be one of the following: &lt;ul&gt;&lt;li&gt;&#x60;OPERATOR&#x60; – When **you** are at the origin of the deactivation.&lt;/li&gt;&lt;li&gt;&#x60;USER&#x60; – When the **end user** is at the origin of the deactivation.&lt;/li&gt;&lt;/ul&gt; 
   * @return origin
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OriginEnum getOrigin() {
    return origin;
  }


  @JsonProperty(JSON_PROPERTY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrigin(@javax.annotation.Nonnull OriginEnum origin) {
    this.origin = origin;
  }

  public DeleteWalletRequest originId(@javax.annotation.Nullable String originId) {
    
    this.originId = originId;
    return this;
  }

  /**
   * The unique identifier of the Wallet. Learn more in the [Wallet Types](/guide/wallets/introduction.html) documentation. 
   * @return originId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGIN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginId() {
    return originId;
  }


  @JsonProperty(JSON_PROPERTY_ORIGIN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginId(@javax.annotation.Nullable String originId) {
    this.originId = originId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteWalletRequest deleteWalletRequest = (DeleteWalletRequest) o;
    return Objects.equals(this.accessTag, deleteWalletRequest.accessTag) &&
        Objects.equals(this.origin, deleteWalletRequest.origin) &&
        Objects.equals(this.originId, deleteWalletRequest.originId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessTag, origin, originId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteWalletRequest {\n");
    sb.append("    accessTag: ").append(toIndentedString(accessTag)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    originId: ").append(toIndentedString(originId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

