/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostScheduledPaymentRequest
 */
@JsonPropertyOrder({
  PostScheduledPaymentRequest.JSON_PROPERTY_SCHEDULED_PAYMENT_NAME,
  PostScheduledPaymentRequest.JSON_PROPERTY_WALLET_ID,
  PostScheduledPaymentRequest.JSON_PROPERTY_BENEFICIARY_TYPE,
  PostScheduledPaymentRequest.JSON_PROPERTY_BENEFICIARY,
  PostScheduledPaymentRequest.JSON_PROPERTY_AMOUNT,
  PostScheduledPaymentRequest.JSON_PROPERTY_TYPE,
  PostScheduledPaymentRequest.JSON_PROPERTY_EXEC_AT,
  PostScheduledPaymentRequest.JSON_PROPERTY_START_AT,
  PostScheduledPaymentRequest.JSON_PROPERTY_END_AT,
  PostScheduledPaymentRequest.JSON_PROPERTY_PERIOD,
  PostScheduledPaymentRequest.JSON_PROPERTY_BENEFICIARY_LABEL,
  PostScheduledPaymentRequest.JSON_PROPERTY_CURRENCY,
  PostScheduledPaymentRequest.JSON_PROPERTY_END_TO_END_ID
})
@JsonTypeName("postScheduledPayment_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class PostScheduledPaymentRequest {
  public static final String JSON_PROPERTY_SCHEDULED_PAYMENT_NAME = "scheduledPaymentName";
  @javax.annotation.Nullable
  private String scheduledPaymentName;

  public static final String JSON_PROPERTY_WALLET_ID = "walletId";
  @javax.annotation.Nonnull
  private Integer walletId;

  /**
   * The type of beneficiary for the operation, which can be: * &#x60;payout&#x60; – The Scheduled Payment targets an external account. * &#x60;walletTransfer&#x60; – The Scheduled Payment targets another Wallet in your Treezor environment. 
   */
  public enum BeneficiaryTypeEnum {
    PAYOUT(String.valueOf("payout")),
    
    WALLET_TRANSFER(String.valueOf("walletTransfer"));

    private String value;

    BeneficiaryTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BeneficiaryTypeEnum fromValue(String value) {
      for (BeneficiaryTypeEnum b : BeneficiaryTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_BENEFICIARY_TYPE = "beneficiaryType";
  @javax.annotation.Nonnull
  private BeneficiaryTypeEnum beneficiaryType;

  public static final String JSON_PROPERTY_BENEFICIARY = "beneficiary";
  @javax.annotation.Nonnull
  private Integer beneficiary;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nonnull
  private Float amount;

  /**
   * The type of Scheduled Payment, which can be:  * &#x60;oneshot&#x60; – The payment will occur only once. * &#x60;periodic&#x60; – The payment will occur periodically over a defined timeframe. 
   */
  public enum TypeEnum {
    ONESHOT(String.valueOf("oneshot")),
    
    PERIODIC(String.valueOf("periodic"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nonnull
  private TypeEnum type;

  public static final String JSON_PROPERTY_EXEC_AT = "execAt";
  @javax.annotation.Nullable
  private LocalDate execAt;

  public static final String JSON_PROPERTY_START_AT = "startAt";
  @javax.annotation.Nullable
  private LocalDate startAt;

  public static final String JSON_PROPERTY_END_AT = "endAt";
  @javax.annotation.Nullable
  private LocalDate endAt;

  /**
   * The frequency at which a &#x60;periodic&#x60; Scheduled Payment is to occur. 
   */
  public enum PeriodEnum {
    WEEKLY(String.valueOf("weekly")),
    
    MONTHLY(String.valueOf("monthly")),
    
    QUARTERLY(String.valueOf("quarterly")),
    
    BI_ANNUAL(String.valueOf("bi-annual")),
    
    ANNUAL(String.valueOf("annual"));

    private String value;

    PeriodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PeriodEnum fromValue(String value) {
      for (PeriodEnum b : PeriodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PERIOD = "period";
  @javax.annotation.Nullable
  private PeriodEnum period;

  public static final String JSON_PROPERTY_BENEFICIARY_LABEL = "beneficiaryLabel";
  @javax.annotation.Nullable
  private String beneficiaryLabel;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  @javax.annotation.Nonnull
  private String currency;

  public static final String JSON_PROPERTY_END_TO_END_ID = "endToEndId";
  @javax.annotation.Nullable
  private String endToEndId;

  public PostScheduledPaymentRequest() {
  }

  public PostScheduledPaymentRequest scheduledPaymentName(@javax.annotation.Nullable String scheduledPaymentName) {
    
    this.scheduledPaymentName = scheduledPaymentName;
    return this;
  }

  /**
   * The label describing the goal of the Scheduled Payment.
   * @return scheduledPaymentName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCHEDULED_PAYMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getScheduledPaymentName() {
    return scheduledPaymentName;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULED_PAYMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduledPaymentName(@javax.annotation.Nullable String scheduledPaymentName) {
    this.scheduledPaymentName = scheduledPaymentName;
  }

  public PostScheduledPaymentRequest walletId(@javax.annotation.Nonnull Integer walletId) {
    
    this.walletId = walletId;
    return this;
  }

  /**
   * The unique identifier of the Wallet to debit.
   * @return walletId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getWalletId() {
    return walletId;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWalletId(@javax.annotation.Nonnull Integer walletId) {
    this.walletId = walletId;
  }

  public PostScheduledPaymentRequest beneficiaryType(@javax.annotation.Nonnull BeneficiaryTypeEnum beneficiaryType) {
    
    this.beneficiaryType = beneficiaryType;
    return this;
  }

  /**
   * The type of beneficiary for the operation, which can be: * &#x60;payout&#x60; – The Scheduled Payment targets an external account. * &#x60;walletTransfer&#x60; – The Scheduled Payment targets another Wallet in your Treezor environment. 
   * @return beneficiaryType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BENEFICIARY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BeneficiaryTypeEnum getBeneficiaryType() {
    return beneficiaryType;
  }


  @JsonProperty(JSON_PROPERTY_BENEFICIARY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBeneficiaryType(@javax.annotation.Nonnull BeneficiaryTypeEnum beneficiaryType) {
    this.beneficiaryType = beneficiaryType;
  }

  public PostScheduledPaymentRequest beneficiary(@javax.annotation.Nonnull Integer beneficiary) {
    
    this.beneficiary = beneficiary;
    return this;
  }

  /**
   * The unique identifier of the beneficiary of the Scheduled Payment, which can be either &#x60;beneficiaryId&#x60; for Payouts or &#x60;beneficiaryWalletId&#x60; for Wallet-to-Wallet transfers. 
   * @return beneficiary
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BENEFICIARY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getBeneficiary() {
    return beneficiary;
  }


  @JsonProperty(JSON_PROPERTY_BENEFICIARY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBeneficiary(@javax.annotation.Nonnull Integer beneficiary) {
    this.beneficiary = beneficiary;
  }

  public PostScheduledPaymentRequest amount(@javax.annotation.Nonnull Float amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * The amount of the Scheduled Payment.
   * @return amount
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Float getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(@javax.annotation.Nonnull Float amount) {
    this.amount = amount;
  }

  public PostScheduledPaymentRequest type(@javax.annotation.Nonnull TypeEnum type) {
    
    this.type = type;
    return this;
  }

  /**
   * The type of Scheduled Payment, which can be:  * &#x60;oneshot&#x60; – The payment will occur only once. * &#x60;periodic&#x60; – The payment will occur periodically over a defined timeframe. 
   * @return type
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
  }

  public PostScheduledPaymentRequest execAt(@javax.annotation.Nullable LocalDate execAt) {
    
    this.execAt = execAt;
    return this;
  }

  /**
   * The date on which the a &#x60;oneshot&#x60; Scheduled Payment is to be executed. This date must be set at least one day in the future. Format: &#x60;YYYY-MM-DD&#x60;. 
   * @return execAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXEC_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getExecAt() {
    return execAt;
  }


  @JsonProperty(JSON_PROPERTY_EXEC_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecAt(@javax.annotation.Nullable LocalDate execAt) {
    this.execAt = execAt;
  }

  public PostScheduledPaymentRequest startAt(@javax.annotation.Nullable LocalDate startAt) {
    
    this.startAt = startAt;
    return this;
  }

  /**
   * The date from which a &#x60;periodic&#x60; Scheduled Payment execution starts. This date must be set at least one day in the future. Format: &#x60;YYYY-MM-DD&#x60;. 
   * @return startAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getStartAt() {
    return startAt;
  }


  @JsonProperty(JSON_PROPERTY_START_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartAt(@javax.annotation.Nullable LocalDate startAt) {
    this.startAt = startAt;
  }

  public PostScheduledPaymentRequest endAt(@javax.annotation.Nullable LocalDate endAt) {
    
    this.endAt = endAt;
    return this;
  }

  /**
   * The date on which a &#x60;periodic&#x60; Scheduled Payment ends. This date must be set after the &#x60;startAt&#x60; date. Format: &#x60;YYYY-MM-DD&#x60;. 
   * @return endAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getEndAt() {
    return endAt;
  }


  @JsonProperty(JSON_PROPERTY_END_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndAt(@javax.annotation.Nullable LocalDate endAt) {
    this.endAt = endAt;
  }

  public PostScheduledPaymentRequest period(@javax.annotation.Nullable PeriodEnum period) {
    
    this.period = period;
    return this;
  }

  /**
   * The frequency at which a &#x60;periodic&#x60; Scheduled Payment is to occur. 
   * @return period
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PeriodEnum getPeriod() {
    return period;
  }


  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeriod(@javax.annotation.Nullable PeriodEnum period) {
    this.period = period;
  }

  public PostScheduledPaymentRequest beneficiaryLabel(@javax.annotation.Nullable String beneficiaryLabel) {
    
    this.beneficiaryLabel = beneficiaryLabel;
    return this;
  }

  /**
   * The label that will be displayed for the Scheduled Payments, regardless of the type.
   * @return beneficiaryLabel
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BENEFICIARY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBeneficiaryLabel() {
    return beneficiaryLabel;
  }


  @JsonProperty(JSON_PROPERTY_BENEFICIARY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeneficiaryLabel(@javax.annotation.Nullable String beneficiaryLabel) {
    this.beneficiaryLabel = beneficiaryLabel;
  }

  public PostScheduledPaymentRequest currency(@javax.annotation.Nonnull String currency) {
    
    this.currency = currency;
    return this;
  }

  /**
   * The currency of the Scheduled Payments. Can only be &#x60;EUR&#x60;. 
   * @return currency
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(@javax.annotation.Nonnull String currency) {
    this.currency = currency;
  }

  public PostScheduledPaymentRequest endToEndId(@javax.annotation.Nullable String endToEndId) {
    
    this.endToEndId = endToEndId;
    return this;
  }

  /**
   * The end-to-end identifier, for Payouts only.
   * @return endToEndId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_TO_END_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndToEndId() {
    return endToEndId;
  }


  @JsonProperty(JSON_PROPERTY_END_TO_END_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndToEndId(@javax.annotation.Nullable String endToEndId) {
    this.endToEndId = endToEndId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostScheduledPaymentRequest postScheduledPaymentRequest = (PostScheduledPaymentRequest) o;
    return Objects.equals(this.scheduledPaymentName, postScheduledPaymentRequest.scheduledPaymentName) &&
        Objects.equals(this.walletId, postScheduledPaymentRequest.walletId) &&
        Objects.equals(this.beneficiaryType, postScheduledPaymentRequest.beneficiaryType) &&
        Objects.equals(this.beneficiary, postScheduledPaymentRequest.beneficiary) &&
        Objects.equals(this.amount, postScheduledPaymentRequest.amount) &&
        Objects.equals(this.type, postScheduledPaymentRequest.type) &&
        Objects.equals(this.execAt, postScheduledPaymentRequest.execAt) &&
        Objects.equals(this.startAt, postScheduledPaymentRequest.startAt) &&
        Objects.equals(this.endAt, postScheduledPaymentRequest.endAt) &&
        Objects.equals(this.period, postScheduledPaymentRequest.period) &&
        Objects.equals(this.beneficiaryLabel, postScheduledPaymentRequest.beneficiaryLabel) &&
        Objects.equals(this.currency, postScheduledPaymentRequest.currency) &&
        Objects.equals(this.endToEndId, postScheduledPaymentRequest.endToEndId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scheduledPaymentName, walletId, beneficiaryType, beneficiary, amount, type, execAt, startAt, endAt, period, beneficiaryLabel, currency, endToEndId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostScheduledPaymentRequest {\n");
    sb.append("    scheduledPaymentName: ").append(toIndentedString(scheduledPaymentName)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    beneficiaryType: ").append(toIndentedString(beneficiaryType)).append("\n");
    sb.append("    beneficiary: ").append(toIndentedString(beneficiary)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    execAt: ").append(toIndentedString(execAt)).append("\n");
    sb.append("    startAt: ").append(toIndentedString(startAt)).append("\n");
    sb.append("    endAt: ").append(toIndentedString(endAt)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    beneficiaryLabel: ").append(toIndentedString(beneficiaryLabel)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    endToEndId: ").append(toIndentedString(endToEndId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

