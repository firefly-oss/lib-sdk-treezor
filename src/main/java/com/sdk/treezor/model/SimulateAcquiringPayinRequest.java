/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SimulateAcquiringPayinRequest
 */
@JsonPropertyOrder({
  SimulateAcquiringPayinRequest.JSON_PROPERTY_USER_ID,
  SimulateAcquiringPayinRequest.JSON_PROPERTY_WALLET_ID,
  SimulateAcquiringPayinRequest.JSON_PROPERTY_AMOUNT,
  SimulateAcquiringPayinRequest.JSON_PROPERTY_CURRENCY,
  SimulateAcquiringPayinRequest.JSON_PROPERTY_STATUS,
  SimulateAcquiringPayinRequest.JSON_PROPERTY_TRANSACTION_REFERENCE
})
@JsonTypeName("SimulateAcquiringPayin_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class SimulateAcquiringPayinRequest {
  public static final String JSON_PROPERTY_USER_ID = "userId";
  @javax.annotation.Nullable
  private Float userId;

  public static final String JSON_PROPERTY_WALLET_ID = "walletId";
  @javax.annotation.Nullable
  private Float walletId;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nullable
  private Float amount;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  @javax.annotation.Nullable
  private String currency = "EUR";

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nullable
  private Float status;

  public static final String JSON_PROPERTY_TRANSACTION_REFERENCE = "transactionReference";
  @javax.annotation.Nullable
  private JsonNullable<String> transactionReference = JsonNullable.<String>undefined();

  public SimulateAcquiringPayinRequest() {
  }

  public SimulateAcquiringPayinRequest userId(@javax.annotation.Nullable Float userId) {
    
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(@javax.annotation.Nullable Float userId) {
    this.userId = userId;
  }

  public SimulateAcquiringPayinRequest walletId(@javax.annotation.Nullable Float walletId) {
    
    this.walletId = walletId;
    return this;
  }

  /**
   * Get walletId
   * @return walletId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getWalletId() {
    return walletId;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWalletId(@javax.annotation.Nullable Float walletId) {
    this.walletId = walletId;
  }

  public SimulateAcquiringPayinRequest amount(@javax.annotation.Nullable Float amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(@javax.annotation.Nullable Float amount) {
    this.amount = amount;
  }

  public SimulateAcquiringPayinRequest currency(@javax.annotation.Nullable String currency) {
    
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
  }

  public SimulateAcquiringPayinRequest status(@javax.annotation.Nullable Float status) {
    
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(@javax.annotation.Nullable Float status) {
    this.status = status;
  }

  public SimulateAcquiringPayinRequest transactionReference(@javax.annotation.Nullable String transactionReference) {
    this.transactionReference = JsonNullable.<String>of(transactionReference);
    
    return this;
  }

  /**
   * Get transactionReference
   * @return transactionReference
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getTransactionReference() {
        return transactionReference.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRANSACTION_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTransactionReference_JsonNullable() {
    return transactionReference;
  }
  
  @JsonProperty(JSON_PROPERTY_TRANSACTION_REFERENCE)
  public void setTransactionReference_JsonNullable(JsonNullable<String> transactionReference) {
    this.transactionReference = transactionReference;
  }

  public void setTransactionReference(@javax.annotation.Nullable String transactionReference) {
    this.transactionReference = JsonNullable.<String>of(transactionReference);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimulateAcquiringPayinRequest simulateAcquiringPayinRequest = (SimulateAcquiringPayinRequest) o;
    return Objects.equals(this.userId, simulateAcquiringPayinRequest.userId) &&
        Objects.equals(this.walletId, simulateAcquiringPayinRequest.walletId) &&
        Objects.equals(this.amount, simulateAcquiringPayinRequest.amount) &&
        Objects.equals(this.currency, simulateAcquiringPayinRequest.currency) &&
        Objects.equals(this.status, simulateAcquiringPayinRequest.status) &&
        equalsNullable(this.transactionReference, simulateAcquiringPayinRequest.transactionReference);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, walletId, amount, currency, status, hashCodeNullable(transactionReference));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimulateAcquiringPayinRequest {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    transactionReference: ").append(toIndentedString(transactionReference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

