/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PayoutRefund
 */
@JsonPropertyOrder({
  PayoutRefund.JSON_PROPERTY_PAYOUT_REFUND_TAG,
  PayoutRefund.JSON_PROPERTY_CODE_STATUS,
  PayoutRefund.JSON_PROPERTY_INFORMATION_STATUS,
  PayoutRefund.JSON_PROPERTY_PAYOUT_TYPE_ID,
  PayoutRefund.JSON_PROPERTY_REQUEST_COMMENT,
  PayoutRefund.JSON_PROPERTY_REASON_CODE,
  PayoutRefund.JSON_PROPERTY_REFUND_DATE,
  PayoutRefund.JSON_PROPERTY_REFUND_COMMENT,
  PayoutRefund.JSON_PROPERTY_PAYOUT_ID,
  PayoutRefund.JSON_PROPERTY_PAYOUT_TAG,
  PayoutRefund.JSON_PROPERTY_BENEFICIARY_ID,
  PayoutRefund.JSON_PROPERTY_BENEFICIARY_NAME,
  PayoutRefund.JSON_PROPERTY_LABEL,
  PayoutRefund.JSON_PROPERTY_END_TO_END_ID,
  PayoutRefund.JSON_PROPERTY_UNIQUE_MANDATE_REFERENCE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class PayoutRefund {
  public static final String JSON_PROPERTY_PAYOUT_REFUND_TAG = "payoutRefundTag";
  @javax.annotation.Nullable
  private JsonNullable<String> payoutRefundTag = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CODE_STATUS = "codeStatus";
  @javax.annotation.Nullable
  private JsonNullable<String> codeStatus = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INFORMATION_STATUS = "informationStatus";
  @javax.annotation.Nullable
  private JsonNullable<String> informationStatus = JsonNullable.<String>undefined();

  /**
   * Gets or Sets payoutTypeId
   */
  public enum PayoutTypeIdEnum {
    NUMBER_1(Integer.valueOf(1)),
    
    NUMBER_2(Integer.valueOf(2)),
    
    NUMBER_3(Integer.valueOf(3));

    private Integer value;

    PayoutTypeIdEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PayoutTypeIdEnum fromValue(Integer value) {
      for (PayoutTypeIdEnum b : PayoutTypeIdEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PAYOUT_TYPE_ID = "payoutTypeId";
  @javax.annotation.Nullable
  private PayoutTypeIdEnum payoutTypeId;

  public static final String JSON_PROPERTY_REQUEST_COMMENT = "requestComment";
  @javax.annotation.Nullable
  private JsonNullable<String> requestComment = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_REASON_CODE = "reasonCode";
  @javax.annotation.Nullable
  private JsonNullable<String> reasonCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_REFUND_DATE = "refundDate";
  @javax.annotation.Nullable
  private JsonNullable<String> refundDate = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_REFUND_COMMENT = "refundComment";
  @javax.annotation.Nullable
  private JsonNullable<String> refundComment = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PAYOUT_ID = "payoutId";
  @javax.annotation.Nullable
  private JsonNullable<String> payoutId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PAYOUT_TAG = "payoutTag";
  @javax.annotation.Nullable
  private JsonNullable<String> payoutTag = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BENEFICIARY_ID = "beneficiaryId";
  @javax.annotation.Nullable
  private JsonNullable<String> beneficiaryId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BENEFICIARY_NAME = "beneficiaryName";
  @javax.annotation.Nullable
  private JsonNullable<String> beneficiaryName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LABEL = "label";
  @javax.annotation.Nullable
  private JsonNullable<String> label = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_END_TO_END_ID = "endToEndId";
  @javax.annotation.Nullable
  private JsonNullable<String> endToEndId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UNIQUE_MANDATE_REFERENCE = "uniqueMandateReference";
  @javax.annotation.Nullable
  private JsonNullable<String> uniqueMandateReference = JsonNullable.<String>undefined();

  public PayoutRefund() {
  }

  public PayoutRefund payoutRefundTag(@javax.annotation.Nullable String payoutRefundTag) {
    this.payoutRefundTag = JsonNullable.<String>of(payoutRefundTag);
    
    return this;
  }

  /**
   * Get payoutRefundTag
   * @return payoutRefundTag
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPayoutRefundTag() {
        return payoutRefundTag.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_REFUND_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPayoutRefundTag_JsonNullable() {
    return payoutRefundTag;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_REFUND_TAG)
  public void setPayoutRefundTag_JsonNullable(JsonNullable<String> payoutRefundTag) {
    this.payoutRefundTag = payoutRefundTag;
  }

  public void setPayoutRefundTag(@javax.annotation.Nullable String payoutRefundTag) {
    this.payoutRefundTag = JsonNullable.<String>of(payoutRefundTag);
  }

  public PayoutRefund codeStatus(@javax.annotation.Nullable String codeStatus) {
    this.codeStatus = JsonNullable.<String>of(codeStatus);
    
    return this;
  }

  /**
   * Get codeStatus
   * @return codeStatus
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getCodeStatus() {
        return codeStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CODE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCodeStatus_JsonNullable() {
    return codeStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_CODE_STATUS)
  public void setCodeStatus_JsonNullable(JsonNullable<String> codeStatus) {
    this.codeStatus = codeStatus;
  }

  public void setCodeStatus(@javax.annotation.Nullable String codeStatus) {
    this.codeStatus = JsonNullable.<String>of(codeStatus);
  }

  public PayoutRefund informationStatus(@javax.annotation.Nullable String informationStatus) {
    this.informationStatus = JsonNullable.<String>of(informationStatus);
    
    return this;
  }

  /**
   * Get informationStatus
   * @return informationStatus
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getInformationStatus() {
        return informationStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INFORMATION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInformationStatus_JsonNullable() {
    return informationStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_INFORMATION_STATUS)
  public void setInformationStatus_JsonNullable(JsonNullable<String> informationStatus) {
    this.informationStatus = informationStatus;
  }

  public void setInformationStatus(@javax.annotation.Nullable String informationStatus) {
    this.informationStatus = JsonNullable.<String>of(informationStatus);
  }

  public PayoutRefund payoutTypeId(@javax.annotation.Nullable PayoutTypeIdEnum payoutTypeId) {
    
    this.payoutTypeId = payoutTypeId;
    return this;
  }

  /**
   * Get payoutTypeId
   * @return payoutTypeId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYOUT_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PayoutTypeIdEnum getPayoutTypeId() {
    return payoutTypeId;
  }


  @JsonProperty(JSON_PROPERTY_PAYOUT_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayoutTypeId(@javax.annotation.Nullable PayoutTypeIdEnum payoutTypeId) {
    this.payoutTypeId = payoutTypeId;
  }

  public PayoutRefund requestComment(@javax.annotation.Nullable String requestComment) {
    this.requestComment = JsonNullable.<String>of(requestComment);
    
    return this;
  }

  /**
   * Get requestComment
   * @return requestComment
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getRequestComment() {
        return requestComment.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REQUEST_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRequestComment_JsonNullable() {
    return requestComment;
  }
  
  @JsonProperty(JSON_PROPERTY_REQUEST_COMMENT)
  public void setRequestComment_JsonNullable(JsonNullable<String> requestComment) {
    this.requestComment = requestComment;
  }

  public void setRequestComment(@javax.annotation.Nullable String requestComment) {
    this.requestComment = JsonNullable.<String>of(requestComment);
  }

  public PayoutRefund reasonCode(@javax.annotation.Nullable String reasonCode) {
    this.reasonCode = JsonNullable.<String>of(reasonCode);
    
    return this;
  }

  /**
   * Get reasonCode
   * @return reasonCode
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getReasonCode() {
        return reasonCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REASON_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getReasonCode_JsonNullable() {
    return reasonCode;
  }
  
  @JsonProperty(JSON_PROPERTY_REASON_CODE)
  public void setReasonCode_JsonNullable(JsonNullable<String> reasonCode) {
    this.reasonCode = reasonCode;
  }

  public void setReasonCode(@javax.annotation.Nullable String reasonCode) {
    this.reasonCode = JsonNullable.<String>of(reasonCode);
  }

  public PayoutRefund refundDate(@javax.annotation.Nullable String refundDate) {
    this.refundDate = JsonNullable.<String>of(refundDate);
    
    return this;
  }

  /**
   * Get refundDate
   * @return refundDate
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getRefundDate() {
        return refundDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REFUND_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRefundDate_JsonNullable() {
    return refundDate;
  }
  
  @JsonProperty(JSON_PROPERTY_REFUND_DATE)
  public void setRefundDate_JsonNullable(JsonNullable<String> refundDate) {
    this.refundDate = refundDate;
  }

  public void setRefundDate(@javax.annotation.Nullable String refundDate) {
    this.refundDate = JsonNullable.<String>of(refundDate);
  }

  public PayoutRefund refundComment(@javax.annotation.Nullable String refundComment) {
    this.refundComment = JsonNullable.<String>of(refundComment);
    
    return this;
  }

  /**
   * Get refundComment
   * @return refundComment
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getRefundComment() {
        return refundComment.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REFUND_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRefundComment_JsonNullable() {
    return refundComment;
  }
  
  @JsonProperty(JSON_PROPERTY_REFUND_COMMENT)
  public void setRefundComment_JsonNullable(JsonNullable<String> refundComment) {
    this.refundComment = refundComment;
  }

  public void setRefundComment(@javax.annotation.Nullable String refundComment) {
    this.refundComment = JsonNullable.<String>of(refundComment);
  }

  public PayoutRefund payoutId(@javax.annotation.Nullable String payoutId) {
    this.payoutId = JsonNullable.<String>of(payoutId);
    
    return this;
  }

  /**
   * Get payoutId
   * @return payoutId
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPayoutId() {
        return payoutId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPayoutId_JsonNullable() {
    return payoutId;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_ID)
  public void setPayoutId_JsonNullable(JsonNullable<String> payoutId) {
    this.payoutId = payoutId;
  }

  public void setPayoutId(@javax.annotation.Nullable String payoutId) {
    this.payoutId = JsonNullable.<String>of(payoutId);
  }

  public PayoutRefund payoutTag(@javax.annotation.Nullable String payoutTag) {
    this.payoutTag = JsonNullable.<String>of(payoutTag);
    
    return this;
  }

  /**
   * Get payoutTag
   * @return payoutTag
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPayoutTag() {
        return payoutTag.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPayoutTag_JsonNullable() {
    return payoutTag;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_TAG)
  public void setPayoutTag_JsonNullable(JsonNullable<String> payoutTag) {
    this.payoutTag = payoutTag;
  }

  public void setPayoutTag(@javax.annotation.Nullable String payoutTag) {
    this.payoutTag = JsonNullable.<String>of(payoutTag);
  }

  public PayoutRefund beneficiaryId(@javax.annotation.Nullable String beneficiaryId) {
    this.beneficiaryId = JsonNullable.<String>of(beneficiaryId);
    
    return this;
  }

  /**
   * Get beneficiaryId
   * @return beneficiaryId
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getBeneficiaryId() {
        return beneficiaryId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BENEFICIARY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBeneficiaryId_JsonNullable() {
    return beneficiaryId;
  }
  
  @JsonProperty(JSON_PROPERTY_BENEFICIARY_ID)
  public void setBeneficiaryId_JsonNullable(JsonNullable<String> beneficiaryId) {
    this.beneficiaryId = beneficiaryId;
  }

  public void setBeneficiaryId(@javax.annotation.Nullable String beneficiaryId) {
    this.beneficiaryId = JsonNullable.<String>of(beneficiaryId);
  }

  public PayoutRefund beneficiaryName(@javax.annotation.Nullable String beneficiaryName) {
    this.beneficiaryName = JsonNullable.<String>of(beneficiaryName);
    
    return this;
  }

  /**
   * Get beneficiaryName
   * @return beneficiaryName
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getBeneficiaryName() {
        return beneficiaryName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BENEFICIARY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBeneficiaryName_JsonNullable() {
    return beneficiaryName;
  }
  
  @JsonProperty(JSON_PROPERTY_BENEFICIARY_NAME)
  public void setBeneficiaryName_JsonNullable(JsonNullable<String> beneficiaryName) {
    this.beneficiaryName = beneficiaryName;
  }

  public void setBeneficiaryName(@javax.annotation.Nullable String beneficiaryName) {
    this.beneficiaryName = JsonNullable.<String>of(beneficiaryName);
  }

  public PayoutRefund label(@javax.annotation.Nullable String label) {
    this.label = JsonNullable.<String>of(label);
    
    return this;
  }

  /**
   * Get label
   * @return label
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getLabel() {
        return label.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLabel_JsonNullable() {
    return label;
  }
  
  @JsonProperty(JSON_PROPERTY_LABEL)
  public void setLabel_JsonNullable(JsonNullable<String> label) {
    this.label = label;
  }

  public void setLabel(@javax.annotation.Nullable String label) {
    this.label = JsonNullable.<String>of(label);
  }

  public PayoutRefund endToEndId(@javax.annotation.Nullable String endToEndId) {
    this.endToEndId = JsonNullable.<String>of(endToEndId);
    
    return this;
  }

  /**
   * Get endToEndId
   * @return endToEndId
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getEndToEndId() {
        return endToEndId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TO_END_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEndToEndId_JsonNullable() {
    return endToEndId;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TO_END_ID)
  public void setEndToEndId_JsonNullable(JsonNullable<String> endToEndId) {
    this.endToEndId = endToEndId;
  }

  public void setEndToEndId(@javax.annotation.Nullable String endToEndId) {
    this.endToEndId = JsonNullable.<String>of(endToEndId);
  }

  public PayoutRefund uniqueMandateReference(@javax.annotation.Nullable String uniqueMandateReference) {
    this.uniqueMandateReference = JsonNullable.<String>of(uniqueMandateReference);
    
    return this;
  }

  /**
   * The unique reference that unambiguiously identify a mandate signed between the user and the beneficiary. See the [Unique Mandate Reference (UMR)](/guide/overview/glossary.html#unique-mandate-reference-umr) article for more information.
   * @return uniqueMandateReference
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getUniqueMandateReference() {
        return uniqueMandateReference.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIQUE_MANDATE_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUniqueMandateReference_JsonNullable() {
    return uniqueMandateReference;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIQUE_MANDATE_REFERENCE)
  public void setUniqueMandateReference_JsonNullable(JsonNullable<String> uniqueMandateReference) {
    this.uniqueMandateReference = uniqueMandateReference;
  }

  public void setUniqueMandateReference(@javax.annotation.Nullable String uniqueMandateReference) {
    this.uniqueMandateReference = JsonNullable.<String>of(uniqueMandateReference);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayoutRefund payoutRefund = (PayoutRefund) o;
    return equalsNullable(this.payoutRefundTag, payoutRefund.payoutRefundTag) &&
        equalsNullable(this.codeStatus, payoutRefund.codeStatus) &&
        equalsNullable(this.informationStatus, payoutRefund.informationStatus) &&
        Objects.equals(this.payoutTypeId, payoutRefund.payoutTypeId) &&
        equalsNullable(this.requestComment, payoutRefund.requestComment) &&
        equalsNullable(this.reasonCode, payoutRefund.reasonCode) &&
        equalsNullable(this.refundDate, payoutRefund.refundDate) &&
        equalsNullable(this.refundComment, payoutRefund.refundComment) &&
        equalsNullable(this.payoutId, payoutRefund.payoutId) &&
        equalsNullable(this.payoutTag, payoutRefund.payoutTag) &&
        equalsNullable(this.beneficiaryId, payoutRefund.beneficiaryId) &&
        equalsNullable(this.beneficiaryName, payoutRefund.beneficiaryName) &&
        equalsNullable(this.label, payoutRefund.label) &&
        equalsNullable(this.endToEndId, payoutRefund.endToEndId) &&
        equalsNullable(this.uniqueMandateReference, payoutRefund.uniqueMandateReference);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(payoutRefundTag), hashCodeNullable(codeStatus), hashCodeNullable(informationStatus), payoutTypeId, hashCodeNullable(requestComment), hashCodeNullable(reasonCode), hashCodeNullable(refundDate), hashCodeNullable(refundComment), hashCodeNullable(payoutId), hashCodeNullable(payoutTag), hashCodeNullable(beneficiaryId), hashCodeNullable(beneficiaryName), hashCodeNullable(label), hashCodeNullable(endToEndId), hashCodeNullable(uniqueMandateReference));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayoutRefund {\n");
    sb.append("    payoutRefundTag: ").append(toIndentedString(payoutRefundTag)).append("\n");
    sb.append("    codeStatus: ").append(toIndentedString(codeStatus)).append("\n");
    sb.append("    informationStatus: ").append(toIndentedString(informationStatus)).append("\n");
    sb.append("    payoutTypeId: ").append(toIndentedString(payoutTypeId)).append("\n");
    sb.append("    requestComment: ").append(toIndentedString(requestComment)).append("\n");
    sb.append("    reasonCode: ").append(toIndentedString(reasonCode)).append("\n");
    sb.append("    refundDate: ").append(toIndentedString(refundDate)).append("\n");
    sb.append("    refundComment: ").append(toIndentedString(refundComment)).append("\n");
    sb.append("    payoutId: ").append(toIndentedString(payoutId)).append("\n");
    sb.append("    payoutTag: ").append(toIndentedString(payoutTag)).append("\n");
    sb.append("    beneficiaryId: ").append(toIndentedString(beneficiaryId)).append("\n");
    sb.append("    beneficiaryName: ").append(toIndentedString(beneficiaryName)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    endToEndId: ").append(toIndentedString(endToEndId)).append("\n");
    sb.append("    uniqueMandateReference: ").append(toIndentedString(uniqueMandateReference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

