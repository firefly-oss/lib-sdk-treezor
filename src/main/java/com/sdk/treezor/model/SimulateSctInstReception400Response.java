/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SimulateSctInstReception400Response
 */
@JsonPropertyOrder({
  SimulateSctInstReception400Response.JSON_PROPERTY_REASON,
  SimulateSctInstReception400Response.JSON_PROPERTY_DETAILS
})
@JsonTypeName("simulateSctInstReception_400_response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class SimulateSctInstReception400Response {
  public static final String JSON_PROPERTY_REASON = "reason";
  @javax.annotation.Nullable
  private String reason;

  public static final String JSON_PROPERTY_DETAILS = "details";
  @javax.annotation.Nullable
  private String details;

  public SimulateSctInstReception400Response() {
  }

  public SimulateSctInstReception400Response reason(@javax.annotation.Nullable String reason) {
    
    this.reason = reason;
    return this;
  }

  /**
   * Reason for the error.
   * @return reason
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReason() {
    return reason;
  }


  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReason(@javax.annotation.Nullable String reason) {
    this.reason = reason;
  }

  public SimulateSctInstReception400Response details(@javax.annotation.Nullable String details) {
    
    this.details = details;
    return this;
  }

  /**
   * Detailed information about the error.
   * @return details
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDetails() {
    return details;
  }


  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetails(@javax.annotation.Nullable String details) {
    this.details = details;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimulateSctInstReception400Response simulateSctInstReception400Response = (SimulateSctInstReception400Response) o;
    return Objects.equals(this.reason, simulateSctInstReception400Response.reason) &&
        Objects.equals(this.details, simulateSctInstReception400Response.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reason, details);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimulateSctInstReception400Response {\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

