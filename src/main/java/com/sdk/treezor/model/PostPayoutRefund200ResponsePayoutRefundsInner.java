/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostPayoutRefund200ResponsePayoutRefundsInner
 */
@JsonPropertyOrder({
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_ID,
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_PAYOUT_REFUND_TAG,
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_CODE_STATUS,
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_INFORMATION_STATUS,
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_PAYOUT_ID,
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_REQUEST_AMOUNT,
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_REQUEST_CURRENCY,
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_REQUEST_COMMENT,
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_REASON_CODE,
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_REFUND_AMOUNT,
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_REFUND_CURRENCY,
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_REFUND_DATE,
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_REFUND_COMMENT,
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_NEGATIVE_RESPONSE_REASON_CODE,
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_CREATED_DATE,
  PostPayoutRefund200ResponsePayoutRefundsInner.JSON_PROPERTY_MODIFIED_DATE
})
@JsonTypeName("postPayoutRefund_200_response_payoutRefunds_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class PostPayoutRefund200ResponsePayoutRefundsInner {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private String id;

  public static final String JSON_PROPERTY_PAYOUT_REFUND_TAG = "payoutRefundTag";
  @javax.annotation.Nullable
  private String payoutRefundTag;

  public static final String JSON_PROPERTY_CODE_STATUS = "codeStatus";
  @javax.annotation.Nullable
  private String codeStatus;

  /**
   * Gets or Sets informationStatus
   */
  public enum InformationStatusEnum {
    CANCELED(String.valueOf("CANCELED")),
    
    PENDING(String.valueOf("PENDING")),
    
    VALIDATED(String.valueOf("VALIDATED"));

    private String value;

    InformationStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InformationStatusEnum fromValue(String value) {
      for (InformationStatusEnum b : InformationStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INFORMATION_STATUS = "informationStatus";
  @javax.annotation.Nullable
  private InformationStatusEnum informationStatus;

  public static final String JSON_PROPERTY_PAYOUT_ID = "payoutId";
  @javax.annotation.Nullable
  private String payoutId;

  public static final String JSON_PROPERTY_REQUEST_AMOUNT = "requestAmount";
  @javax.annotation.Nullable
  private Float requestAmount;

  /**
   * Gets or Sets requestCurrency
   */
  public enum RequestCurrencyEnum {
    EUR(String.valueOf("EUR"));

    private String value;

    RequestCurrencyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RequestCurrencyEnum fromValue(String value) {
      for (RequestCurrencyEnum b : RequestCurrencyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REQUEST_CURRENCY = "requestCurrency";
  @javax.annotation.Nullable
  private RequestCurrencyEnum requestCurrency;

  public static final String JSON_PROPERTY_REQUEST_COMMENT = "requestComment";
  @javax.annotation.Nullable
  private String requestComment;

  /**
   * Gets or Sets reasonCode
   */
  public enum ReasonCodeEnum {
    DUPL(String.valueOf("DUPL")),
    
    TECH(String.valueOf("TECH")),
    
    FRAD(String.valueOf("FRAD")),
    
    CUST(String.valueOf("CUST")),
    
    AM09(String.valueOf("AM09")),
    
    AC03(String.valueOf("AC03"));

    private String value;

    ReasonCodeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReasonCodeEnum fromValue(String value) {
      for (ReasonCodeEnum b : ReasonCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REASON_CODE = "reasonCode";
  @javax.annotation.Nullable
  private ReasonCodeEnum reasonCode;

  public static final String JSON_PROPERTY_REFUND_AMOUNT = "refundAmount";
  @javax.annotation.Nullable
  private Float refundAmount;

  /**
   * Gets or Sets refundCurrency
   */
  public enum RefundCurrencyEnum {
    EUR(String.valueOf("EUR"));

    private String value;

    RefundCurrencyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RefundCurrencyEnum fromValue(String value) {
      for (RefundCurrencyEnum b : RefundCurrencyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REFUND_CURRENCY = "refundCurrency";
  @javax.annotation.Nullable
  private RefundCurrencyEnum refundCurrency;

  public static final String JSON_PROPERTY_REFUND_DATE = "refundDate";
  @javax.annotation.Nullable
  private String refundDate;

  public static final String JSON_PROPERTY_REFUND_COMMENT = "refundComment";
  @javax.annotation.Nullable
  private String refundComment;

  public static final String JSON_PROPERTY_NEGATIVE_RESPONSE_REASON_CODE = "negativeResponseReasonCode";
  @javax.annotation.Nullable
  private String negativeResponseReasonCode;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  @javax.annotation.Nullable
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  @javax.annotation.Nullable
  private OffsetDateTime modifiedDate;

  public PostPayoutRefund200ResponsePayoutRefundsInner() {
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner id(@javax.annotation.Nullable String id) {
    
    this.id = id;
    return this;
  }

  /**
   * The unique identifier of the payout refund.
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner payoutRefundTag(@javax.annotation.Nullable String payoutRefundTag) {
    
    this.payoutRefundTag = payoutRefundTag;
    return this;
  }

  /**
   * Custom attribute to use as you see fit. Learn more in the [Object tags](/guide/api-basics/objects-tags.html#objects-tags) article.  Format: hc characters and &#x60;/&#x60; &#x60;!&#x60; &#x60;-&#x60; &#x60;_&#x60; &#x60;.&#x60; &#x60;*&#x60; &#x60;&#39;&#x60; &#x60;(&#x60; &#x60;)&#x60; 
   * @return payoutRefundTag
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYOUT_REFUND_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPayoutRefundTag() {
    return payoutRefundTag;
  }


  @JsonProperty(JSON_PROPERTY_PAYOUT_REFUND_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayoutRefundTag(@javax.annotation.Nullable String payoutRefundTag) {
    this.payoutRefundTag = payoutRefundTag;
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner codeStatus(@javax.annotation.Nullable String codeStatus) {
    
    this.codeStatus = codeStatus;
    return this;
  }

  /**
   * Get codeStatus
   * @return codeStatus
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCodeStatus() {
    return codeStatus;
  }


  @JsonProperty(JSON_PROPERTY_CODE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodeStatus(@javax.annotation.Nullable String codeStatus) {
    this.codeStatus = codeStatus;
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner informationStatus(@javax.annotation.Nullable InformationStatusEnum informationStatus) {
    
    this.informationStatus = informationStatus;
    return this;
  }

  /**
   * Get informationStatus
   * @return informationStatus
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INFORMATION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InformationStatusEnum getInformationStatus() {
    return informationStatus;
  }


  @JsonProperty(JSON_PROPERTY_INFORMATION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInformationStatus(@javax.annotation.Nullable InformationStatusEnum informationStatus) {
    this.informationStatus = informationStatus;
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner payoutId(@javax.annotation.Nullable String payoutId) {
    
    this.payoutId = payoutId;
    return this;
  }

  /**
   * Get payoutId
   * @return payoutId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYOUT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPayoutId() {
    return payoutId;
  }


  @JsonProperty(JSON_PROPERTY_PAYOUT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayoutId(@javax.annotation.Nullable String payoutId) {
    this.payoutId = payoutId;
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner requestAmount(@javax.annotation.Nullable Float requestAmount) {
    
    this.requestAmount = requestAmount;
    return this;
  }

  /**
   * Get requestAmount
   * @return requestAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUEST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getRequestAmount() {
    return requestAmount;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestAmount(@javax.annotation.Nullable Float requestAmount) {
    this.requestAmount = requestAmount;
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner requestCurrency(@javax.annotation.Nullable RequestCurrencyEnum requestCurrency) {
    
    this.requestCurrency = requestCurrency;
    return this;
  }

  /**
   * Get requestCurrency
   * @return requestCurrency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUEST_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RequestCurrencyEnum getRequestCurrency() {
    return requestCurrency;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestCurrency(@javax.annotation.Nullable RequestCurrencyEnum requestCurrency) {
    this.requestCurrency = requestCurrency;
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner requestComment(@javax.annotation.Nullable String requestComment) {
    
    this.requestComment = requestComment;
    return this;
  }

  /**
   * Get requestComment
   * @return requestComment
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUEST_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestComment() {
    return requestComment;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestComment(@javax.annotation.Nullable String requestComment) {
    this.requestComment = requestComment;
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner reasonCode(@javax.annotation.Nullable ReasonCodeEnum reasonCode) {
    
    this.reasonCode = reasonCode;
    return this;
  }

  /**
   * Get reasonCode
   * @return reasonCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REASON_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReasonCodeEnum getReasonCode() {
    return reasonCode;
  }


  @JsonProperty(JSON_PROPERTY_REASON_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReasonCode(@javax.annotation.Nullable ReasonCodeEnum reasonCode) {
    this.reasonCode = reasonCode;
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner refundAmount(@javax.annotation.Nullable Float refundAmount) {
    
    this.refundAmount = refundAmount;
    return this;
  }

  /**
   * Get refundAmount
   * @return refundAmount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFUND_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getRefundAmount() {
    return refundAmount;
  }


  @JsonProperty(JSON_PROPERTY_REFUND_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRefundAmount(@javax.annotation.Nullable Float refundAmount) {
    this.refundAmount = refundAmount;
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner refundCurrency(@javax.annotation.Nullable RefundCurrencyEnum refundCurrency) {
    
    this.refundCurrency = refundCurrency;
    return this;
  }

  /**
   * Get refundCurrency
   * @return refundCurrency
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFUND_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RefundCurrencyEnum getRefundCurrency() {
    return refundCurrency;
  }


  @JsonProperty(JSON_PROPERTY_REFUND_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRefundCurrency(@javax.annotation.Nullable RefundCurrencyEnum refundCurrency) {
    this.refundCurrency = refundCurrency;
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner refundDate(@javax.annotation.Nullable String refundDate) {
    
    this.refundDate = refundDate;
    return this;
  }

  /**
   * Get refundDate
   * @return refundDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFUND_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRefundDate() {
    return refundDate;
  }


  @JsonProperty(JSON_PROPERTY_REFUND_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRefundDate(@javax.annotation.Nullable String refundDate) {
    this.refundDate = refundDate;
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner refundComment(@javax.annotation.Nullable String refundComment) {
    
    this.refundComment = refundComment;
    return this;
  }

  /**
   * Get refundComment
   * @return refundComment
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFUND_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRefundComment() {
    return refundComment;
  }


  @JsonProperty(JSON_PROPERTY_REFUND_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRefundComment(@javax.annotation.Nullable String refundComment) {
    this.refundComment = refundComment;
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner negativeResponseReasonCode(@javax.annotation.Nullable String negativeResponseReasonCode) {
    
    this.negativeResponseReasonCode = negativeResponseReasonCode;
    return this;
  }

  /**
   * Get negativeResponseReasonCode
   * @return negativeResponseReasonCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEGATIVE_RESPONSE_REASON_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNegativeResponseReasonCode() {
    return negativeResponseReasonCode;
  }


  @JsonProperty(JSON_PROPERTY_NEGATIVE_RESPONSE_REASON_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNegativeResponseReasonCode(@javax.annotation.Nullable String negativeResponseReasonCode) {
    this.negativeResponseReasonCode = negativeResponseReasonCode;
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner createdDate(@javax.annotation.Nullable OffsetDateTime createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Format: &#x60;YYYY-MM-DD HH:mm:ss&#x60; 
   * @return createdDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedDate(@javax.annotation.Nullable OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public PostPayoutRefund200ResponsePayoutRefundsInner modifiedDate(@javax.annotation.Nullable OffsetDateTime modifiedDate) {
    
    this.modifiedDate = modifiedDate;
    return this;
  }

  /**
   * Format: &#x60;YYYY-MM-DD HH:mm:ss&#x60; 
   * @return modifiedDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModifiedDate(@javax.annotation.Nullable OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostPayoutRefund200ResponsePayoutRefundsInner postPayoutRefund200ResponsePayoutRefundsInner = (PostPayoutRefund200ResponsePayoutRefundsInner) o;
    return Objects.equals(this.id, postPayoutRefund200ResponsePayoutRefundsInner.id) &&
        Objects.equals(this.payoutRefundTag, postPayoutRefund200ResponsePayoutRefundsInner.payoutRefundTag) &&
        Objects.equals(this.codeStatus, postPayoutRefund200ResponsePayoutRefundsInner.codeStatus) &&
        Objects.equals(this.informationStatus, postPayoutRefund200ResponsePayoutRefundsInner.informationStatus) &&
        Objects.equals(this.payoutId, postPayoutRefund200ResponsePayoutRefundsInner.payoutId) &&
        Objects.equals(this.requestAmount, postPayoutRefund200ResponsePayoutRefundsInner.requestAmount) &&
        Objects.equals(this.requestCurrency, postPayoutRefund200ResponsePayoutRefundsInner.requestCurrency) &&
        Objects.equals(this.requestComment, postPayoutRefund200ResponsePayoutRefundsInner.requestComment) &&
        Objects.equals(this.reasonCode, postPayoutRefund200ResponsePayoutRefundsInner.reasonCode) &&
        Objects.equals(this.refundAmount, postPayoutRefund200ResponsePayoutRefundsInner.refundAmount) &&
        Objects.equals(this.refundCurrency, postPayoutRefund200ResponsePayoutRefundsInner.refundCurrency) &&
        Objects.equals(this.refundDate, postPayoutRefund200ResponsePayoutRefundsInner.refundDate) &&
        Objects.equals(this.refundComment, postPayoutRefund200ResponsePayoutRefundsInner.refundComment) &&
        Objects.equals(this.negativeResponseReasonCode, postPayoutRefund200ResponsePayoutRefundsInner.negativeResponseReasonCode) &&
        Objects.equals(this.createdDate, postPayoutRefund200ResponsePayoutRefundsInner.createdDate) &&
        Objects.equals(this.modifiedDate, postPayoutRefund200ResponsePayoutRefundsInner.modifiedDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, payoutRefundTag, codeStatus, informationStatus, payoutId, requestAmount, requestCurrency, requestComment, reasonCode, refundAmount, refundCurrency, refundDate, refundComment, negativeResponseReasonCode, createdDate, modifiedDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostPayoutRefund200ResponsePayoutRefundsInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    payoutRefundTag: ").append(toIndentedString(payoutRefundTag)).append("\n");
    sb.append("    codeStatus: ").append(toIndentedString(codeStatus)).append("\n");
    sb.append("    informationStatus: ").append(toIndentedString(informationStatus)).append("\n");
    sb.append("    payoutId: ").append(toIndentedString(payoutId)).append("\n");
    sb.append("    requestAmount: ").append(toIndentedString(requestAmount)).append("\n");
    sb.append("    requestCurrency: ").append(toIndentedString(requestCurrency)).append("\n");
    sb.append("    requestComment: ").append(toIndentedString(requestComment)).append("\n");
    sb.append("    reasonCode: ").append(toIndentedString(reasonCode)).append("\n");
    sb.append("    refundAmount: ").append(toIndentedString(refundAmount)).append("\n");
    sb.append("    refundCurrency: ").append(toIndentedString(refundCurrency)).append("\n");
    sb.append("    refundDate: ").append(toIndentedString(refundDate)).append("\n");
    sb.append("    refundComment: ").append(toIndentedString(refundComment)).append("\n");
    sb.append("    negativeResponseReasonCode: ").append(toIndentedString(negativeResponseReasonCode)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

