/*
 * Copyright 2025 Firefly Software Solutions Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * Treezor API
 * As a REST API, Treezor accepts and returns JSON payloads, along with the associated `application/json` content type.  You can learn everything you need to know about authentication, credentials, data formats, and more in the [API Basics](/guide/api-basics/environments.html) section.  Like the rest of the documentation, this reference focuses on the latest version of the Treezor API (Connect). 
 *
 * The version of the OpenAPI document: 25.04.03
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sdk.treezor.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sdk.treezor.model.NotificationSimulationAuthorizationsCardPaymentMethod;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * NotificationSimulationAuthorizations
 */
@JsonPropertyOrder({
  NotificationSimulationAuthorizations.JSON_PROPERTY_AMOUNT,
  NotificationSimulationAuthorizations.JSON_PROPERTY_CARD_PAYMENT_METHOD,
  NotificationSimulationAuthorizations.JSON_PROPERTY_CURRENCY,
  NotificationSimulationAuthorizations.JSON_PROPERTY_STATUS,
  NotificationSimulationAuthorizations.JSON_PROPERTY_TRANSACTION_REFERENCE,
  NotificationSimulationAuthorizations.JSON_PROPERTY_USER_ID,
  NotificationSimulationAuthorizations.JSON_PROPERTY_WALLET_ID,
  NotificationSimulationAuthorizations.JSON_PROPERTY_PROFILE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-14T09:49:28.273669400+02:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class NotificationSimulationAuthorizations {
  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nonnull
  private Float amount;

  public static final String JSON_PROPERTY_CARD_PAYMENT_METHOD = "cardPaymentMethod";
  @javax.annotation.Nullable
  private NotificationSimulationAuthorizationsCardPaymentMethod cardPaymentMethod;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  @javax.annotation.Nonnull
  private String currency;

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nullable
  private Integer status;

  public static final String JSON_PROPERTY_TRANSACTION_REFERENCE = "transactionReference";
  @javax.annotation.Nullable
  private String transactionReference;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  @javax.annotation.Nullable
  private String userId;

  public static final String JSON_PROPERTY_WALLET_ID = "walletId";
  @javax.annotation.Nonnull
  private String walletId;

  public static final String JSON_PROPERTY_PROFILE = "profile";
  @javax.annotation.Nullable
  private String profile;

  public NotificationSimulationAuthorizations() {
  }

  public NotificationSimulationAuthorizations amount(@javax.annotation.Nonnull Float amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * Authorization amount
   * @return amount
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Float getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(@javax.annotation.Nonnull Float amount) {
    this.amount = amount;
  }

  public NotificationSimulationAuthorizations cardPaymentMethod(@javax.annotation.Nullable NotificationSimulationAuthorizationsCardPaymentMethod cardPaymentMethod) {
    
    this.cardPaymentMethod = cardPaymentMethod;
    return this;
  }

  /**
   * Get cardPaymentMethod
   * @return cardPaymentMethod
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARD_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NotificationSimulationAuthorizationsCardPaymentMethod getCardPaymentMethod() {
    return cardPaymentMethod;
  }


  @JsonProperty(JSON_PROPERTY_CARD_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardPaymentMethod(@javax.annotation.Nullable NotificationSimulationAuthorizationsCardPaymentMethod cardPaymentMethod) {
    this.cardPaymentMethod = cardPaymentMethod;
  }

  public NotificationSimulationAuthorizations currency(@javax.annotation.Nonnull String currency) {
    
    this.currency = currency;
    return this;
  }

  /**
   * Base currency for this authorization  This three-character currency code must comply with ISO-4217
   * @return currency
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(@javax.annotation.Nonnull String currency) {
    this.currency = currency;
  }

  public NotificationSimulationAuthorizations status(@javax.annotation.Nullable Integer status) {
    
    this.status = status;
    return this;
  }

  /**
   * The status code of the simulated notification
   * @return status
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(@javax.annotation.Nullable Integer status) {
    this.status = status;
  }

  public NotificationSimulationAuthorizations transactionReference(@javax.annotation.Nullable String transactionReference) {
    
    this.transactionReference = transactionReference;
    return this;
  }

  /**
   * The reference of the transaction
   * @return transactionReference
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionReference() {
    return transactionReference;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionReference(@javax.annotation.Nullable String transactionReference) {
    this.transactionReference = transactionReference;
  }

  public NotificationSimulationAuthorizations userId(@javax.annotation.Nullable String userId) {
    
    this.userId = userId;
    return this;
  }

  /**
   * Identifier of the user on behalf of which the simulated authorization should be executed 
   * @return userId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
  }

  public NotificationSimulationAuthorizations walletId(@javax.annotation.Nonnull String walletId) {
    
    this.walletId = walletId;
    return this;
  }

  /**
   * Identifier of the wallet to be credited
   * @return walletId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getWalletId() {
    return walletId;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWalletId(@javax.annotation.Nonnull String walletId) {
    this.walletId = walletId;
  }

  public NotificationSimulationAuthorizations profile(@javax.annotation.Nullable String profile) {
    
    this.profile = profile;
    return this;
  }

  /**
   * HiPay merchant identifier (mid) to be used for the operation. Required if the client has multiple merchant identifiers associated. If only one mid is associated, then that one is used for the operation. 
   * @return profile
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProfile() {
    return profile;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfile(@javax.annotation.Nullable String profile) {
    this.profile = profile;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificationSimulationAuthorizations notificationSimulationAuthorizations = (NotificationSimulationAuthorizations) o;
    return Objects.equals(this.amount, notificationSimulationAuthorizations.amount) &&
        Objects.equals(this.cardPaymentMethod, notificationSimulationAuthorizations.cardPaymentMethod) &&
        Objects.equals(this.currency, notificationSimulationAuthorizations.currency) &&
        Objects.equals(this.status, notificationSimulationAuthorizations.status) &&
        Objects.equals(this.transactionReference, notificationSimulationAuthorizations.transactionReference) &&
        Objects.equals(this.userId, notificationSimulationAuthorizations.userId) &&
        Objects.equals(this.walletId, notificationSimulationAuthorizations.walletId) &&
        Objects.equals(this.profile, notificationSimulationAuthorizations.profile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, cardPaymentMethod, currency, status, transactionReference, userId, walletId, profile);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificationSimulationAuthorizations {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    cardPaymentMethod: ").append(toIndentedString(cardPaymentMethod)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    transactionReference: ").append(toIndentedString(transactionReference)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

